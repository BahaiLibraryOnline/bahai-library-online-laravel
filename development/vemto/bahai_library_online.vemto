{"tables":{"basicrelationships":{"basicrelationships":{"count":12,"lastPrimaryKey":22,"index":{"3":{"hasMany":{"basicrelationships.inverseId":[4],"inputs.relationshipId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"basicrelationships.inverseId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"basicrelationships.inverseId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"basicrelationships.inverseId":[7],"inputs.relationshipId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"basicrelationships.inverseId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"basicrelationships.inverseId":[9],"inputs.relationshipId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"basicrelationships.inverseId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"basicrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"basicrelationships.inverseId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"basicrelationships.inverseId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"basicrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"basicrelationships.inverseId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_15":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":40,"inverseId":16,"localModelId":39,"parentKeyId":189,"foreignKeyId":217,"name":"editions","type":"hasMany","foreignOriginalName":"document_id","hasApi":true,"id":15,"createdAt":"2021-04-07 14:27:22","updatedAt":"2021-09-29 20:59:18"},"item_16":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"inverseId":15,"localModelId":40,"parentKeyId":189,"foreignKeyId":217,"name":"document","type":"belongsTo","foreignOriginalName":"document_id","hasApi":true,"id":16,"createdAt":"2021-04-07 14:27:21","updatedAt":"2021-09-29 20:59:18"},"item_20":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"inverseId":19,"localModelId":43,"parentKeyId":189,"foreignKeyId":234,"name":"document","type":"belongsTo","foreignOriginalName":"document_id","hasApi":true,"id":20,"createdAt":"2021-09-29 21:18:14","updatedAt":"2021-09-29 21:18:14"},"item_19":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":43,"inverseId":20,"localModelId":39,"parentKeyId":189,"foreignKeyId":234,"name":"activities","type":"hasMany","foreignOriginalName":"document_id","hasApi":true,"id":19,"createdAt":"2021-09-29 21:18:14","updatedAt":"2021-09-29 21:18:14"},"item_22":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":31,"inverseId":21,"localModelId":43,"parentKeyId":164,"foreignKeyId":235,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"id":22,"createdAt":"2021-09-29 21:18:23","updatedAt":"2021-09-29 21:18:23"},"item_21":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":43,"inverseId":22,"localModelId":31,"parentKeyId":164,"foreignKeyId":235,"name":"activities","type":"hasMany","foreignOriginalName":"user_id","hasApi":true,"id":21,"createdAt":"2021-09-29 21:18:23","updatedAt":"2021-09-29 21:18:23"}},"cruds":{"cruds":{"count":14,"lastPrimaryKey":22,"index":{"1":{"hasMany":{"inputs.crudId":[1,2,3,4,5,6,7,8,9,10,11,12,13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"inputs.crudId":[14,15,16,17,18,19,20,21,22,23,24,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.crudId":[26,27,28,29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"inputs.crudId":[30,31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"inputs.crudId":[32,33,34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"inputs.crudId":[35,36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"inputs.crudId":[82,83,84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"inputs.crudId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.crudId":[86,87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"inputs.crudId":[89,88,90]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"inputs.crudId":[95,96,94,93,92,91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"inputs.crudId":[97,98,99,100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"inputs.crudId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.crudId":[102,103,104,105,106,107,108,109,110,126,119,120,123,111,122,121,118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_22":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Documents","url":"documents","modelId":39,"projectId":3,"titles":{"index":"Documents List","create":"Add A Document","edit":"Edit A Document","update":"Update Document","show":"Show A Document"},"hasApi":true,"id":22,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:18"},"item_18":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Collections","url":"collections","modelId":29,"projectId":3,"titles":{"index":"Collections List","create":"Create Collection","edit":"Edit Collection","update":"Update Collection","show":"Show Collection"},"hasApi":true,"id":18,"createdAt":"2021-04-08 15:13:55","updatedAt":"2021-09-29 20:59:18"},"item_16":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tags","url":"tags","modelId":27,"projectId":3,"titles":{"index":"Tags List","create":"Create Tag","edit":"Edit Tag","update":"Update Tag","show":"Show Tag"},"hasApi":true,"id":16,"createdAt":"2021-04-08 15:16:04","updatedAt":"2021-09-29 20:59:18"},"item_20":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":31,"projectId":3,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User"},"hasApi":true,"id":20,"createdAt":"2021-04-08 15:18:26","updatedAt":"2021-09-29 20:59:18"},"item_17":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Languages","url":"languages","modelId":28,"projectId":3,"titles":{"index":"Languages List","create":"Create Language","edit":"Edit Language","update":"Update Language","show":"Show Language"},"hasApi":true,"id":17,"createdAt":"2021-04-08 15:22:00","updatedAt":"2021-09-29 20:59:18"},"item_15":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Locations","url":"locations","modelId":26,"projectId":3,"titles":{"index":"Locations List","create":"Create Location","edit":"Edit Location","update":"Update Location","show":"Show Location"},"hasApi":true,"id":15,"createdAt":"2021-04-08 15:22:22","updatedAt":"2021-09-29 20:59:18"},"item_19":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Creators","url":"creators","modelId":30,"projectId":3,"titles":{"index":"Creators List","create":"Create Creator","edit":"Edit Creator","update":"Update Creator","show":"Show Creator"},"hasApi":true,"id":19,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:18"},"item_21":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Searches","url":"searches","modelId":32,"projectId":3,"titles":{"index":"Searches List","create":"Create Search","edit":"Edit Search","update":"Update Search","show":"Show Search"},"hasApi":true,"id":21,"createdAt":"2021-04-08 15:25:56","updatedAt":"2021-09-29 20:59:18"}},"entities":{"entities":{"count":23,"lastPrimaryKey":44,"index":{"1":{"hasMany":{"fields.entityId":[1,2,3,4,5,6],"projects.authModelId":[1],"foreigns.relatedEntityId":[7],"manytomanyrelationships.localModelId":[1],"manytomanyrelationships.modelId":[2],"cruds.modelId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"fields.entityId":[7,18,19,17,21,20,22,23,24,25,26,27,28,29],"basicrelationships.localModelId":[4,7],"basicrelationships.modelId":[3,8],"foreigns.relatedEntityId":[2,4,6],"manytomanyrelationships.modelId":[1],"manytomanyrelationships.localModelId":[2],"cruds.modelId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"fields.entityId":[8,47,36,37,38,39,40,41,42,43,44,45,46],"basicrelationships.modelId":[7,10],"basicrelationships.localModelId":[8,9],"foreigns.relatedEntityId":[5],"cruds.modelId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"fields.entityId":[30,31,32],"basicrelationships.localModelId":[3],"basicrelationships.modelId":[4],"cruds.modelId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[48,49,50],"basicrelationships.modelId":[9],"basicrelationships.localModelId":[10],"cruds.modelId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"fields.entityId":[51,52,53,54,55],"cruds.modelId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[56,57],"manytomanyrelationships.pivotId":[1,2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"fields.entityId":[144,145,146,147],"foreigns.relatedEntityId":[28,29],"manytomanyrelationships.localModelId":[15],"manytomanyrelationships.modelId":[16],"cruds.modelId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"fields.entityId":[148,149],"foreigns.relatedEntityId":[30],"manytomanyrelationships.localModelId":[17],"manytomanyrelationships.modelId":[18],"cruds.modelId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"fields.entityId":[150,151,152],"foreigns.relatedEntityId":[31],"manytomanyrelationships.localModelId":[19],"manytomanyrelationships.modelId":[20],"cruds.modelId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"fields.entityId":[153,154,155,156],"foreigns.relatedEntityId":[32],"manytomanyrelationships.modelId":[21],"manytomanyrelationships.localModelId":[22],"cruds.modelId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"fields.entityId":[157,158,159,160,161,162,163],"foreigns.relatedEntityId":[33],"manytomanyrelationships.localModelId":[23],"manytomanyrelationships.modelId":[24],"cruds.modelId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"fields.entityId":[164,165,166,167,168,169,170,171,172,173,174],"projects.authModelId":[3],"foreigns.relatedEntityId":[49],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"cruds.modelId":[20],"basicrelationships.localModelId":[21],"basicrelationships.modelId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"fields.entityId":[175,176],"foreigns.relatedEntityId":[39],"cruds.modelId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"fields.entityId":[177,178],"manytomanyrelationships.pivotId":[24,23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"fields.entityId":[179,180],"manytomanyrelationships.pivotId":[15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"fields.entityId":[181,182],"manytomanyrelationships.pivotId":[18,17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"fields.entityId":[183,184],"manytomanyrelationships.pivotId":[19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"fields.entityId":[185,186],"manytomanyrelationships.pivotId":[21,22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"fields.entityId":[189,190,191,192,193,194,195,196,197,198,199,206,207,208,209,210,211,214],"basicrelationships.localModelId":[15,19],"basicrelationships.modelId":[16,20],"foreigns.relatedEntityId":[44,43,42,40,46,41,48],"manytomanyrelationships.localModelId":[21,20,18,24,16],"manytomanyrelationships.modelId":[22,19,17,23,15],"cruds.modelId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"fields.entityId":[215,216,217,218,219,220,221,222,223,224,225,226],"basicrelationships.localModelId":[16],"basicrelationships.modelId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"fields.entityId":[227,228]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"fields.entityId":[232,234,235,237,236],"basicrelationships.modelId":[19,21],"basicrelationships.localModelId":[20,22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_39":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Document","type":"model","plural":"Documents","table":"documents","projectId":3,"top":"628px","left":"812px","pivot":false,"softDeletes":true,"timestamps":true,"migrationName":"2021_04_07_000012_create_documents_table.php","foreignsMigrationName":"2021_04_07_009007_add_foreigns_to_documents_table.php","id":39,"createdAt":"2021-04-07 06:27:20","updatedAt":"2021-09-29 21:06:01"},"item_36":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"document_language","type":"table","table":"document_language","plural":"","top":"899px","left":"20px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000006_create_document_language_table.php","foreignsMigrationName":"2021_04_07_009004_add_foreigns_to_document_language_table.php","id":36,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-30 09:55:15"},"item_28":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Language","type":"model","plural":"Languages","table":"languages","projectId":3,"top":"777px","left":"-480px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000007_create_languages_table.php","foreignsMigrationName":null,"id":28,"createdAt":"2021-04-07 06:34:00","updatedAt":"2021-09-30 09:55:19"},"item_27":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tag","type":"model","plural":"Tags","table":"tags","projectId":3,"top":"1126px","left":"-466px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000005_create_tags_table.php","foreignsMigrationName":null,"id":27,"createdAt":"2021-04-07 06:29:40","updatedAt":"2021-09-30 09:55:22"},"item_29":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Collection","type":"model","plural":"Collections","table":"collections","projectId":3,"top":"453px","left":"-475px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000009_create_collections_table.php","foreignsMigrationName":null,"id":29,"createdAt":"2021-04-07 06:29:21","updatedAt":"2021-09-30 09:55:35"},"item_26":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Location","type":"model","plural":"Locations","table":"locations","projectId":3,"top":"1420px","left":"-437px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000001_create_locations_table.php","foreignsMigrationName":null,"id":26,"createdAt":"2021-04-07 17:57:43","updatedAt":"2021-09-30 09:55:48"},"item_35":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"document_tag","type":"table","table":"document_tag","plural":"","top":"1148px","left":"24px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000004_create_document_tag_table.php","foreignsMigrationName":"2021_04_07_009003_add_foreigns_to_document_tag_table.php","id":35,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-30 09:56:00"},"item_34":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"document_location","type":"table","table":"document_location","plural":"","top":"1396px","left":"98px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000003_create_document_location_table.php","foreignsMigrationName":"2021_04_07_009002_add_foreigns_to_document_location_table.php","id":34,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-30 09:56:15"},"item_37":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"collection_document","type":"table","table":"collection_document","plural":"","top":"622px","left":"101px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000008_create_collection_document_table.php","foreignsMigrationName":"2021_04_07_009005_add_foreigns_to_collection_document_table.php","id":37,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-30 09:56:20"},"item_32":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Search","type":"model","plural":"Search","table":"searches","projectId":3,"top":"1913px","left":"-434px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000015_create_searches_table.php","foreignsMigrationName":null,"id":32,"createdAt":"2021-04-07 06:31:29","updatedAt":"2021-09-30 09:56:27"},"item_41":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"location_search","type":"table","table":"location_search","plural":"","top":"1954px","left":"-23px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000014_create_location_search_table.php","foreignsMigrationName":"2021_04_07_009009_add_foreigns_to_location_search_table.php","id":41,"createdAt":"2021-04-08 15:27:15","updatedAt":"2021-09-30 09:56:32"},"item_43":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Activity","type":"model","plural":"Activities","pluralAndSingularAreSame":false,"table":"activities","projectId":3,"top":"899px","left":"1264px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":null,"foreignsMigrationName":null,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":43,"createdAt":"2021-09-29 21:17:29","updatedAt":"2021-09-30 09:59:39"},"item_31":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"User","type":"model","table":"users","plural":"Users","top":"613px","left":"1667px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":null,"id":31,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-30 09:59:48"},"item_33":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":3,"name":"creator_document","type":"table","table":"creator_document","plural":"","top":"1614px","left":"1089px","pivot":true,"softDeletes":false,"timestamps":false,"migrationName":"2021_04_07_000002_create_creator_document_table.php","foreignsMigrationName":"2021_04_07_009001_add_foreigns_to_creator_document_table.php","id":33,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-30 10:00:07"},"item_30":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Creator","type":"model","plural":"Creators","table":"creators","projectId":3,"top":"1382px","left":"1596px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000011_create_creators_table.php","foreignsMigrationName":null,"id":30,"createdAt":"2021-04-07 06:28:58","updatedAt":"2021-09-30 10:00:10"},"item_40":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Edition","type":"model","plural":"Editions","table":"editions","projectId":3,"top":"1614px","left":"598px","pivot":false,"softDeletes":false,"timestamps":true,"migrationName":"2021_04_07_000013_create_editions_table.php","foreignsMigrationName":"2021_04_07_009008_add_foreigns_to_editions_table.php","id":40,"createdAt":"2021-04-07 13:57:31","updatedAt":"2021-09-30 10:00:15"}},"fields":{"fields":{"count":126,"lastPrimaryKey":238,"index":{"1":{"hasMany":{"foreigns.relatedFieldId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"inputs.fieldId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.fieldId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"inputs.fieldId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"foreigns.relatedFieldId":[2,4,6],"basicrelationships.parentKeyId":[4,3,8,7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"foreigns.relatedFieldId":[5],"basicrelationships.parentKeyId":[10,9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.fieldId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"inputs.fieldId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"inputs.fieldId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"inputs.fieldId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"inputs.fieldId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.fieldId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"inputs.fieldId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"inputs.fieldId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"inputs.fieldId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"inputs.fieldId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"inputs.fieldId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"inputs.fieldId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"foreigns.fieldId":[2],"basicrelationships.foreignKeyId":[4,3],"inputs.fieldId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"inputs.fieldId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"inputs.fieldId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"inputs.fieldId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"inputs.fieldId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"inputs.fieldId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"inputs.fieldId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"inputs.fieldId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"inputs.fieldId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"inputs.fieldId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"inputs.fieldId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"inputs.fieldId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"inputs.fieldId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{"foreigns.fieldId":[4],"basicrelationships.foreignKeyId":[8,7],"inputs.fieldId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"foreigns.fieldId":[5],"basicrelationships.foreignKeyId":[10,9],"inputs.fieldId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"inputs.fieldId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"inputs.fieldId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"inputs.fieldId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"inputs.fieldId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"inputs.fieldId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"foreigns.fieldId":[6],"manytomanyrelationships.localModelKeyId":[2],"manytomanyrelationships.modelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"foreigns.fieldId":[7],"manytomanyrelationships.modelKeyId":[2],"manytomanyrelationships.localModelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"foreigns.relatedFieldId":[28,29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"inputs.fieldId":[82]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"inputs.fieldId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"inputs.fieldId":[84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"foreigns.relatedFieldId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"inputs.fieldId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"foreigns.relatedFieldId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"inputs.fieldId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"inputs.fieldId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{"foreigns.relatedFieldId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{"inputs.fieldId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"inputs.fieldId":[89]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"inputs.fieldId":[90]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"foreigns.relatedFieldId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"inputs.fieldId":[91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"inputs.fieldId":[92]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"inputs.fieldId":[93]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"inputs.fieldId":[94]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{"inputs.fieldId":[95]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{"inputs.fieldId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{"foreigns.relatedFieldId":[49],"basicrelationships.parentKeyId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"inputs.fieldId":[97]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"inputs.fieldId":[98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{"inputs.fieldId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"170":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"inputs.fieldId":[100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"foreigns.relatedFieldId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"inputs.fieldId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{"foreigns.fieldId":[33],"manytomanyrelationships.localModelKeyId":[23],"manytomanyrelationships.modelKeyId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{"foreigns.fieldId":[40],"manytomanyrelationships.modelKeyId":[23],"manytomanyrelationships.localModelKeyId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{"foreigns.fieldId":[41],"manytomanyrelationships.localModelKeyId":[16],"manytomanyrelationships.modelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{"foreigns.fieldId":[28],"manytomanyrelationships.modelKeyId":[16],"manytomanyrelationships.localModelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{"foreigns.fieldId":[30],"manytomanyrelationships.localModelKeyId":[17],"manytomanyrelationships.modelKeyId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"182":{"hasMany":{"foreigns.fieldId":[42],"manytomanyrelationships.modelKeyId":[17],"manytomanyrelationships.localModelKeyId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"foreigns.fieldId":[43],"manytomanyrelationships.localModelKeyId":[20],"manytomanyrelationships.modelKeyId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"foreigns.fieldId":[31],"manytomanyrelationships.modelKeyId":[20],"manytomanyrelationships.localModelKeyId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"185":{"hasMany":{"foreigns.fieldId":[32],"manytomanyrelationships.localModelKeyId":[22],"manytomanyrelationships.modelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{"foreigns.fieldId":[44],"manytomanyrelationships.modelKeyId":[22],"manytomanyrelationships.localModelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"foreigns.relatedFieldId":[44,43,42,40,46,41,48],"basicrelationships.parentKeyId":[15,16,20,19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"inputs.fieldId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"inputs.fieldId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"inputs.fieldId":[104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"inputs.fieldId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"inputs.fieldId":[106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"195":{"hasMany":{"inputs.fieldId":[107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{"inputs.fieldId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{"inputs.fieldId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{"inputs.fieldId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"199":{"hasMany":{"inputs.fieldId":[111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"206":{"hasMany":{"inputs.fieldId":[118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{"inputs.fieldId":[119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"208":{"hasMany":{"inputs.fieldId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{"inputs.fieldId":[121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{"inputs.fieldId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{"inputs.fieldId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{"inputs.fieldId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{"foreigns.fieldId":[46],"basicrelationships.foreignKeyId":[15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"219":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"foreigns.fieldId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"foreigns.fieldId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"232":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"foreigns.fieldId":[48],"basicrelationships.foreignKeyId":[20,19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"foreigns.fieldId":[49],"basicrelationships.foreignKeyId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"237":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_189":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":39,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":189,"createdAt":"2021-04-07 06:27:20","updatedAt":"2021-09-29 20:59:17","order":0},"item_190":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":39,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":190,"createdAt":"2021-04-07 11:43:21","updatedAt":"2021-09-29 20:59:17"},"item_191":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_pdf","entityId":39,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":191,"createdAt":"2021-04-07 13:09:06","updatedAt":"2021-09-29 20:59:17"},"item_192":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_audio","entityId":39,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":192,"createdAt":"2021-04-07 11:43:53","updatedAt":"2021-09-29 20:59:17"},"item_193":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_image","entityId":39,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":193,"createdAt":"2021-04-07 13:10:38","updatedAt":"2021-09-29 20:59:17"},"item_194":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_video","entityId":39,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":194,"createdAt":"2021-04-07 13:11:07","updatedAt":"2021-09-29 20:59:17"},"item_195":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_html","entityId":39,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":195,"createdAt":"2021-04-07 13:21:01","updatedAt":"2021-09-29 20:59:17"},"item_196":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"file_url","entityId":39,"pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":196,"createdAt":"2021-04-07 11:57:43","updatedAt":"2021-09-29 20:59:17","type":"string"},"item_197":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"blurb","entityId":39,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":197,"createdAt":"2021-04-07 11:44:07","updatedAt":"2021-09-29 20:59:17"},"item_198":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content_html","entityId":39,"type":"longText","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":198,"createdAt":"2021-04-07 13:13:33","updatedAt":"2021-09-29 20:59:17"},"item_214":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content_size","entityId":39,"pk":false,"fk":false,"params":{},"faker":"$faker->word","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":214,"createdAt":"2021-04-07 11:44:35","updatedAt":"2021-09-29 20:59:17","type":"bigInteger"},"item_207":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"edit_quality","entityId":39,"type":"enum","pk":false,"fk":false,"params":{"options":["high","medium","low"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":12,"id":207,"createdAt":"2021-04-07 14:11:18","updatedAt":"2021-09-29 20:59:17"},"item_208":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"formatting_quality","entityId":39,"type":"enum","pk":false,"fk":false,"params":{"options":["high","medium","low"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":13,"id":208,"createdAt":"2021-04-07 14:11:23","updatedAt":"2021-09-29 20:59:17"},"item_211":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"publication_permission","entityId":39,"pk":false,"fk":false,"params":{"options":["author","editor","publisher","translator","recipient","fair use",""]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":14,"id":211,"createdAt":"2021-04-07 11:47:29","updatedAt":"2021-09-29 20:59:17","type":"enum"},"item_199":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"notes","entityId":39,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":15,"id":199,"createdAt":"2021-04-07 11:44:26","updatedAt":"2021-09-29 20:59:17"},"item_210":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"input_type","entityId":39,"type":"enum","pk":false,"fk":false,"params":{"options":["scanned","typed","transcribed"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":16,"id":210,"createdAt":"2021-04-07 14:11:29","updatedAt":"2021-09-29 20:59:17"},"item_209":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"publication_approval","entityId":39,"type":"enum","pk":false,"fk":false,"params":{"options":["approved","rejected","pending"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":25,"id":209,"createdAt":"2021-04-07 17:48:41","updatedAt":"2021-09-29 20:59:17"},"item_206":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"views","entityId":39,"type":"bigInteger","pk":false,"fk":false,"params":{},"faker":"0","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":26,"id":206,"createdAt":"2021-04-07 17:55:59","updatedAt":"2021-09-29 20:59:17"},"item_183":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":36,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":183,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_184":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":36,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":184,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_150":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":28,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":150,"createdAt":"2021-04-07 06:34:00","updatedAt":"2021-09-29 20:59:16"},"item_151":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language","entityId":28,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":151,"createdAt":"2021-04-07 11:41:03","updatedAt":"2021-09-29 20:59:16"},"item_152":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_tag","entityId":28,"type":"char","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->word({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":152,"createdAt":"2021-04-07 11:41:09","updatedAt":"2021-09-29 20:59:16"},"item_148":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":27,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":148,"createdAt":"2021-04-07 06:29:40","updatedAt":"2021-09-29 20:59:15"},"item_149":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"label","entityId":27,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":149,"createdAt":"2021-04-07 11:34:57","updatedAt":"2021-09-29 20:59:15"},"item_153":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":29,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":153,"createdAt":"2021-04-07 06:29:21","updatedAt":"2021-09-29 20:59:16"},"item_155":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":29,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":155,"createdAt":"2021-04-07 06:51:09","updatedAt":"2021-09-29 20:59:16"},"item_154":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":29,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":154,"createdAt":"2021-04-07 06:51:46","updatedAt":"2021-09-29 20:59:16"},"item_156":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"shortname","entityId":29,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":156,"createdAt":"2021-04-07 06:52:03","updatedAt":"2021-09-29 20:59:16"},"item_144":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":26,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":144,"createdAt":"2021-04-07 17:57:43","updatedAt":"2021-09-29 20:59:15"},"item_145":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"continent","entityId":26,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":145,"createdAt":"2021-04-07 17:58:32","updatedAt":"2021-09-29 20:59:15"},"item_146":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"country","entityId":26,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->country","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":146,"createdAt":"2021-04-07 18:03:28","updatedAt":"2021-09-29 20:59:15"},"item_147":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"locality","entityId":26,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":147,"createdAt":"2021-04-07 18:03:43","updatedAt":"2021-09-29 20:59:15"},"item_181":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"tag_id","entityId":35,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":181,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:17"},"item_182":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":35,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":182,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:17"},"item_179":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":34,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":179,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:16"},"item_180":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"location_id","entityId":34,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":180,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:16"},"item_185":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"collection_id","entityId":37,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":185,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_186":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":37,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":186,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_175":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":32,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":175,"createdAt":"2021-04-07 06:31:29","updatedAt":"2021-09-29 20:59:16"},"item_176":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"query","entityId":32,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":176,"createdAt":"2021-04-08 15:23:27","updatedAt":"2021-09-29 20:59:16"},"item_227":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"location_id","entityId":41,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":227,"createdAt":"2021-04-08 15:27:15","updatedAt":"2021-09-29 20:59:18"},"item_228":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"search_id","entityId":41,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":228,"createdAt":"2021-04-08 15:27:15","updatedAt":"2021-09-29 20:59:18"},"item_232":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":43,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":232,"createdAt":"2021-09-29 21:17:29","updatedAt":"2021-09-29 21:17:29","order":0},"item_234":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":43,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":234,"createdAt":"2021-09-29 21:18:14","updatedAt":"2021-09-29 21:18:14","order":1},"item_235":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":43,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":235,"createdAt":"2021-09-29 21:18:23","updatedAt":"2021-09-29 21:18:23","order":2},"item_236":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"activity_type","entityId":43,"type":"enum","pk":false,"fk":false,"params":{"options":["Created","Proofread","Formatted","Published","Depublished"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":236,"createdAt":"2021-09-29 21:18:28","updatedAt":"2021-09-30 10:19:30"},"item_237":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"comment","entityId":43,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":237,"createdAt":"2021-09-29 21:18:39","updatedAt":"2021-09-29 21:18:43"},"item_164":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":31,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":164,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-29 20:59:16"},"item_165":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":31,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":165,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-29 20:59:16"},"item_166":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":31,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->email","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":166,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-29 20:59:16"},"item_167":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":31,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":167,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-29 20:59:16"},"item_168":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":31,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":168,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-29 20:59:16"},"item_169":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":31,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":169,"createdAt":"2021-04-07 06:26:21","updatedAt":"2021-09-29 20:59:16"},"item_170":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_secret","entityId":31,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":170,"createdAt":"2021-04-07 06:26:21","updatedAt":"2021-09-29 20:59:16"},"item_171":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_recovery_codes","entityId":31,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":171,"createdAt":"2021-04-07 06:26:21","updatedAt":"2021-09-29 20:59:16"},"item_172":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"current_team_id","entityId":31,"type":"foreignId","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":172,"createdAt":"2021-04-07 06:26:21","updatedAt":"2021-09-29 20:59:16"},"item_173":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"profile_photo_path","entityId":31,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":173,"createdAt":"2021-04-07 06:26:21","updatedAt":"2021-09-29 20:59:16"},"item_174":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"status","entityId":31,"type":"enum","pk":false,"fk":false,"params":{"options":["Contributor","Editor","Admin"]},"faker":"'{DEFAULT_OR_FIRST}'","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":174,"createdAt":"2021-04-08 14:48:58","updatedAt":"2021-09-29 20:59:16"},"item_177":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"creator_id","entityId":33,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":177,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:16"},"item_178":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":33,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":178,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:16"},"item_157":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":30,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":157,"createdAt":"2021-04-07 06:28:58","updatedAt":"2021-09-29 20:59:16"},"item_162":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"first_names","entityId":30,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":162,"createdAt":"2021-04-07 11:23:15","updatedAt":"2021-09-29 20:59:16"},"item_163":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"last_names","entityId":30,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":163,"createdAt":"2021-04-07 11:25:33","updatedAt":"2021-09-29 20:59:16"},"item_161":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author","entityId":30,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":161,"createdAt":"2021-04-07 11:25:54","updatedAt":"2021-09-29 20:59:16"},"item_160":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"editor","entityId":30,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":160,"createdAt":"2021-04-07 11:26:05","updatedAt":"2021-09-29 20:59:16"},"item_159":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translator","entityId":30,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":159,"createdAt":"2021-04-07 11:26:13","updatedAt":"2021-09-29 20:59:16"},"item_158":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"compiler","entityId":30,"type":"boolean","pk":false,"fk":false,"params":{},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":158,"createdAt":"2021-04-07 11:26:40","updatedAt":"2021-09-29 20:59:16"},"item_215":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":40,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":215,"createdAt":"2021-04-07 13:57:31","updatedAt":"2021-09-29 20:59:18","order":0},"item_216":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":40,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":216,"createdAt":"2021-04-07 13:57:45","updatedAt":"2021-09-29 20:59:18"},"item_218":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"subtitle","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":218,"createdAt":"2021-04-07 13:57:55","updatedAt":"2021-09-29 20:59:18"},"item_219":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title_parent","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":219,"createdAt":"2021-04-07 13:58:09","updatedAt":"2021-09-29 20:59:18"},"item_220":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"volume","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":220,"createdAt":"2021-04-07 17:12:32","updatedAt":"2021-09-29 20:59:18"},"item_221":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"page_range","entityId":40,"type":"char","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->word({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":221,"createdAt":"2021-04-07 13:58:30","updatedAt":"2021-09-29 20:59:18"},"item_222":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"page_total","entityId":40,"type":"char","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->word({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":222,"createdAt":"2021-04-07 13:58:56","updatedAt":"2021-09-29 20:59:18"},"item_223":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"publisher_name","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":223,"createdAt":"2021-04-07 14:18:31","updatedAt":"2021-09-29 20:59:18"},"item_224":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"publisher_city","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":224,"createdAt":"2021-04-07 14:19:01","updatedAt":"2021-09-29 20:59:18"},"item_225":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"date","entityId":40,"type":"date","pk":false,"fk":false,"params":{},"faker":"$faker->date","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":225,"createdAt":"2021-04-07 13:59:17","updatedAt":"2021-09-29 20:59:18"},"item_226":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"isbn","entityId":40,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":226,"createdAt":"2021-04-07 13:59:23","updatedAt":"2021-09-29 20:59:18"},"item_217":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"document_id","entityId":40,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":217,"createdAt":"2021-04-07 14:27:21","updatedAt":"2021-09-29 20:59:18","order":11}},"foreigns":{"foreigns":{"count":20,"lastPrimaryKey":49,"index":{"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_44":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":186,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":44,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_43":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":183,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":43,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_42":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":182,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":42,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:17"},"item_40":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":178,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":40,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:17"},"item_46":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":217,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":46,"createdAt":"2021-04-07 14:27:21","updatedAt":"2021-09-29 20:59:18"},"item_41":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":179,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":41,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:17"},"item_48":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":234,"relatedEntityId":39,"relatedFieldId":189,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":48,"createdAt":"2021-09-29 21:18:14","updatedAt":"2021-09-29 21:18:14"},"item_31":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":184,"relatedEntityId":28,"relatedFieldId":150,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":31,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_30":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":181,"relatedEntityId":27,"relatedFieldId":148,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":30,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:16"},"item_32":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":185,"relatedEntityId":29,"relatedFieldId":153,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":32,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_28":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":180,"relatedEntityId":26,"relatedFieldId":144,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":28,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:16"},"item_29":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":227,"relatedEntityId":26,"relatedFieldId":144,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":29,"createdAt":"2021-04-08 15:27:15","updatedAt":"2021-09-29 20:59:18"},"item_39":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":228,"relatedEntityId":32,"relatedFieldId":175,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":39,"createdAt":"2021-04-08 15:27:15","updatedAt":"2021-09-29 20:59:18"},"item_49":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":235,"relatedEntityId":31,"relatedFieldId":164,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":49,"createdAt":"2021-09-29 21:18:23","updatedAt":"2021-09-29 21:18:23"},"item_33":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":177,"relatedEntityId":30,"relatedFieldId":157,"basicRelationshipId":null,"on":"","onTableDelete":null,"onTableUpdate":null,"id":33,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:16"}},"inputs":{"inputs":{"count":73,"lastPrimaryKey":126,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_102":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":190,"relationshipId":null,"name":"slug","label":"Slug","placeholder":"Slug","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":102,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_103":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":191,"relationshipId":null,"name":"is_pdf","label":"Is Pdf","placeholder":"Is Pdf","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":103,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_104":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":192,"relationshipId":null,"name":"is_audio","label":"Is Audio","placeholder":"Is Audio","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":104,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_105":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":193,"relationshipId":null,"name":"is_image","label":"Is Image","placeholder":"Is Image","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":105,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_106":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":194,"relationshipId":null,"name":"is_video","label":"Is Video","placeholder":"Is Video","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":106,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_107":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":195,"relationshipId":null,"name":"is_html","label":"Is Html","placeholder":"Is Html","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":107,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_108":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":196,"relationshipId":null,"name":"file_url","label":"File Url","placeholder":"File Url","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":108,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_109":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":197,"relationshipId":null,"name":"blurb","label":"Blurb","placeholder":"Blurb","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":109,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_110":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":198,"relationshipId":null,"name":"content_html","label":"Content Html","placeholder":"Content Html","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":110,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_126":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":214,"relationshipId":null,"name":"content_size","label":"Content Size","placeholder":"Content Size","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255"],"updateValidation":["nullable","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":126,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_119":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":207,"relationshipId":null,"name":"edit_quality","label":"Edit Quality","placeholder":"Edit Quality","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"high","label":"High"},{"value":"medium","label":"Medium"},{"value":"low","label":"Low"}],"validation":["nullable","in:high,medium,low"],"updateValidation":["nullable","in:high,medium,low"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":119,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_120":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":208,"relationshipId":null,"name":"formatting_quality","label":"Formatting Quality","placeholder":"Formatting Quality","order":12,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"high","label":"High"},{"value":"medium","label":"Medium"},{"value":"low","label":"Low"}],"validation":["nullable","in:high,medium,low"],"updateValidation":["nullable","in:high,medium,low"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":120,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_123":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":211,"relationshipId":null,"name":"publication_permission","label":"Publication Permission","placeholder":"Publication Permission","order":13,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"author","label":"Author"},{"value":"editor","label":"Editor"},{"value":"publisher","label":"Publisher"},{"value":"translator","label":"Translator"},{"value":"recipient","label":"Recipient"},{"value":"fair use","label":"Fair use"},{"value":"","label":""}],"validation":["required","in:author,editor,publisher,translator,recipient,fair use,"],"updateValidation":["required","in:author,editor,publisher,translator,recipient,fair use,"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":123,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_111":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":199,"relationshipId":null,"name":"notes","label":"Notes","placeholder":"Notes","order":14,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":111,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_122":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":210,"relationshipId":null,"name":"input_type","label":"Input Type","placeholder":"Input Type","order":15,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"scanned","label":"Scanned"},{"value":"typed","label":"Typed"},{"value":"transcribed","label":"Transcribed"}],"validation":["required","in:scanned,typed,transcribed"],"updateValidation":["required","in:scanned,typed,transcribed"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":122,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:17"},"item_121":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":209,"relationshipId":null,"name":"publication_approval","label":"Publication Approval","placeholder":"Publication Approval","order":24,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"approved","label":"Approved"},{"value":"rejected","label":"Rejected"},{"value":"pending","label":"Pending"}],"validation":["required","in:approved,rejected,pending"],"updateValidation":["required","in:approved,rejected,pending"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":121,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:18"},"item_118":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":22,"fieldId":206,"relationshipId":null,"name":"views","label":"Views","placeholder":"Views","order":25,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":118,"createdAt":"2021-04-08 15:06:19","updatedAt":"2021-09-29 20:59:18"},"item_89":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":18,"fieldId":155,"relationshipId":null,"name":"slug","label":"Slug","placeholder":"Slug","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":89,"createdAt":"2021-04-08 15:13:55","updatedAt":"2021-09-29 20:59:16"},"item_88":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":18,"fieldId":154,"relationshipId":null,"name":"name","label":"Name","placeholder":"Name","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":88,"createdAt":"2021-04-08 15:13:55","updatedAt":"2021-09-29 20:59:16"},"item_90":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":18,"fieldId":156,"relationshipId":null,"name":"shortname","label":"Shortname","placeholder":"Shortname","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":90,"createdAt":"2021-04-08 15:13:55","updatedAt":"2021-09-29 20:59:16"},"item_85":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":16,"fieldId":149,"relationshipId":null,"name":"label","label":"Label","placeholder":"Label","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":85,"createdAt":"2021-04-08 15:16:04","updatedAt":"2021-09-29 20:59:15"},"item_97":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":20,"fieldId":165,"relationshipId":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":97,"createdAt":"2021-04-08 15:18:26","updatedAt":"2021-09-29 20:59:16"},"item_98":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":20,"fieldId":166,"relationshipId":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","unique:users","email"],"updateValidation":["required","unique:users","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":98,"createdAt":"2021-04-08 15:18:26","updatedAt":"2021-09-29 20:59:16"},"item_99":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":20,"fieldId":168,"relationshipId":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required"],"updateValidation":[],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"id":99,"createdAt":"2021-04-08 15:18:26","updatedAt":"2021-09-29 20:59:16"},"item_100":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":20,"fieldId":174,"relationshipId":null,"name":"status","label":"Status","placeholder":"Status","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"Contributor","label":"Contributor"},{"value":"Editor","label":"Editor"},{"value":"Admin","label":"Admin"}],"validation":["required","in:contributor,editor,admin"],"updateValidation":["required","in:contributor,editor,admin"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":100,"createdAt":"2021-04-08 15:18:26","updatedAt":"2021-09-29 20:59:16"},"item_86":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":17,"fieldId":151,"relationshipId":null,"name":"language","label":"Language","placeholder":"Language","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":86,"createdAt":"2021-04-08 15:22:00","updatedAt":"2021-09-29 20:59:16"},"item_87":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":17,"fieldId":152,"relationshipId":null,"name":"language_tag","label":"Language Tag","placeholder":"Language Tag","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":87,"createdAt":"2021-04-08 15:22:00","updatedAt":"2021-09-29 20:59:16"},"item_82":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":15,"fieldId":145,"relationshipId":null,"name":"continent","label":"Continent","placeholder":"Continent","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":82,"createdAt":"2021-04-08 15:22:22","updatedAt":"2021-09-29 20:59:15"},"item_83":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":15,"fieldId":146,"relationshipId":null,"name":"country","label":"Country","placeholder":"Country","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":83,"createdAt":"2021-04-08 15:22:22","updatedAt":"2021-09-29 20:59:15"},"item_84":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":15,"fieldId":147,"relationshipId":null,"name":"locality","label":"Locality","placeholder":"Locality","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":84,"createdAt":"2021-04-08 15:22:22","updatedAt":"2021-09-29 20:59:15"},"item_95":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":162,"relationshipId":null,"name":"first_names","label":"First Names","placeholder":"First Names","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":95,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_96":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":163,"relationshipId":null,"name":"last_names","label":"Last Names","placeholder":"Last Names","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":96,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_94":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":161,"relationshipId":null,"name":"author","label":"Author","placeholder":"Author","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":94,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_93":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":160,"relationshipId":null,"name":"editor","label":"Editor","placeholder":"Editor","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":93,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_92":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":159,"relationshipId":null,"name":"translator","label":"Translator","placeholder":"Translator","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":92,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_91":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":19,"fieldId":158,"relationshipId":null,"name":"compiler","label":"Compiler","placeholder":"Compiler","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean","boolean"],"updateValidation":["nullable","boolean","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":91,"createdAt":"2021-04-08 15:22:43","updatedAt":"2021-09-29 20:59:16"},"item_101":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":21,"fieldId":176,"relationshipId":null,"name":"query","label":"Query","placeholder":"Query","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"id":101,"createdAt":"2021-04-08 15:25:56","updatedAt":"2021-09-29 20:59:16"}},"manytomanyrelationships":{"manytomanyrelationships":{"count":12,"lastPrimaryKey":26,"index":{"1":{"hasMany":{"manytomanyrelationships.inverseId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"manytomanyrelationships.inverseId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"manytomanyrelationships.inverseId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"manytomanyrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"manytomanyrelationships.inverseId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"manytomanyrelationships.inverseId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"manytomanyrelationships.inverseId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"manytomanyrelationships.inverseId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"manytomanyrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"manytomanyrelationships.inverseId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"manytomanyrelationships.inverseId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"manytomanyrelationships.inverseId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_21":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":29,"pivotId":37,"inverseId":22,"localModelId":39,"modelKeyId":185,"localModelKeyId":186,"name":"collections","type":"belongsToMany","pivotOriginalName":"collection_document","modelKeyOriginalName":"collection_id","localModelKeyOriginalName":"document_id","hasApi":true,"id":21,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_22":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"pivotId":37,"inverseId":21,"localModelId":29,"modelKeyId":186,"localModelKeyId":185,"name":"documents","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"id":22,"createdAt":"2021-04-07 13:39:50","updatedAt":"2021-09-29 20:59:17"},"item_20":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":28,"pivotId":36,"inverseId":19,"localModelId":39,"modelKeyId":184,"localModelKeyId":183,"name":"languages","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"id":20,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_19":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"pivotId":36,"inverseId":20,"localModelId":28,"modelKeyId":183,"localModelKeyId":184,"name":"documents","type":"belongsToMany","pivotOriginalName":"document_language","modelKeyOriginalName":"document_id","localModelKeyOriginalName":"language_id","hasApi":true,"id":19,"createdAt":"2021-04-07 13:42:27","updatedAt":"2021-09-29 20:59:17"},"item_18":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":27,"pivotId":35,"inverseId":17,"localModelId":39,"modelKeyId":181,"localModelKeyId":182,"name":"tags","type":"belongsToMany","pivotOriginalName":"document_tag","modelKeyOriginalName":"tag_id","localModelKeyOriginalName":"document_id","hasApi":true,"id":18,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:17"},"item_17":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"pivotId":35,"inverseId":18,"localModelId":27,"modelKeyId":182,"localModelKeyId":181,"name":"documents","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"id":17,"createdAt":"2021-04-07 13:45:34","updatedAt":"2021-09-29 20:59:17"},"item_24":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":30,"pivotId":33,"inverseId":23,"localModelId":39,"modelKeyId":177,"localModelKeyId":178,"name":"creators","type":"belongsToMany","pivotOriginalName":"creator_document","modelKeyOriginalName":"creator_id","localModelKeyOriginalName":"document_id","hasApi":true,"id":24,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:17"},"item_23":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"pivotId":33,"inverseId":24,"localModelId":30,"modelKeyId":178,"localModelKeyId":177,"name":"documents","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"id":23,"createdAt":"2021-04-07 13:45:48","updatedAt":"2021-09-29 20:59:17"},"item_16":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":26,"pivotId":34,"inverseId":15,"localModelId":39,"modelKeyId":180,"localModelKeyId":179,"name":"locations","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"id":16,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:17"},"item_15":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":39,"pivotId":34,"inverseId":16,"localModelId":26,"modelKeyId":179,"localModelKeyId":180,"name":"documents","type":"belongsToMany","pivotOriginalName":"document_location","modelKeyOriginalName":"document_id","localModelKeyOriginalName":"location_id","hasApi":true,"id":15,"createdAt":"2021-04-07 17:58:16","updatedAt":"2021-09-29 20:59:17"}},"projects":{"projects":{"count":2,"lastPrimaryKey":3,"index":{"1":{"hasMany":{"entities.projectId":[2,1,8,3,7,5,9],"cruds.projectId":[1,2,3,4,5,6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"entities.projectId":[39,36,28,27,29,26,35,34,37,32,41,43,31,33,30,40],"cruds.projectId":[22,18,16,20,17,15,19,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_3":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Bahai Library Online","url":"http://localhost:8000","mode":"draft","folder":"C:\\Users\\Ismael\\Documents\\Programming\\BahaiLibraryNew","authModelId":31,"tenancyModelId":null,"settings":{"cssFramework":"tailwind","theme":"default","uiTemplate":"jetstream","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":0.8,"schemaScrollTop":4726,"schemaScrollLeft":4137,"turbolinks":true,"modules":[]},"codeSettings":{"options":{"forceGeneration":true,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":true,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"15":{"crudId":15,"name":"Locations","requests":true,"controller":true,"views":true,"tests":true,"api":true},"16":{"crudId":16,"name":"Tags","requests":true,"controller":true,"views":true,"tests":true,"api":true},"17":{"crudId":17,"name":"Languages","requests":true,"controller":true,"views":true,"tests":true,"api":true},"18":{"crudId":18,"name":"Collections","requests":true,"controller":true,"views":true,"tests":true,"api":true},"19":{"crudId":19,"name":"Creators","requests":true,"controller":true,"views":true,"tests":true,"api":true},"20":{"crudId":20,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"21":{"crudId":21,"name":"Searches","requests":true,"controller":true,"views":true,"tests":true,"api":true},"22":{"crudId":22,"name":"Documents","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":true,"permissions":true,"uiTemplate":true},"generationCommands":{"gitClone":true,"composerInstall":false,"storageLink":false,"npmInstall":false,"compileAssets":false,"checkDependencies":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":3306,"database":"BLO-2.0","username":"root","password":""},"modules":["auth","permissions","multiTenancy"],"version":"0.8.2","laravelVersion":8,"repositoryUrl":"https://github.com/BahaiLibraryOnline/Bahai-Library-Online.git","repositoryBranch":"main","files":{"\\app\\Providers\\AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n    }\n}\n","module":"base","path":"\\app\\Providers\\AuthServiceProvider.php"},"\\app\\Providers\\AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        //\n    }\n}\n","module":"base","path":"\\app\\Providers\\AppServiceProvider.php"},"\\config\\auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'super_admins' => ['admin@admin.com'],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_resets',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"\\config\\auth.php"},"\\app\\Http\\Controllers\\Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Foundation\\Bus\\DispatchesJobs;\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Controller.php"},"\\app\\Http\\Requests\\DocumentStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass DocumentStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'slug' => ['required', 'max:255', 'string'],\n            'is_pdf' => ['nullable', 'boolean', 'boolean'],\n            'is_audio' => ['nullable', 'boolean', 'boolean'],\n            'is_image' => ['nullable', 'boolean', 'boolean'],\n            'is_video' => ['nullable', 'boolean', 'boolean'],\n            'is_html' => ['nullable', 'boolean', 'boolean'],\n            'file_url' => ['nullable', 'max:255', 'string'],\n            'blurb' => ['nullable', 'max:255', 'string'],\n            'content_html' => ['nullable', 'max:255', 'string'],\n            'content_size' => ['nullable', 'max:255'],\n            'edit_quality' => ['nullable', 'in:high,medium,low'],\n            'formatting_quality' => ['nullable', 'in:high,medium,low'],\n            'publication_permission' => [\n                'required',\n                'in:author,editor,publisher,translator,recipient,fair use,',\n            ],\n            'notes' => ['nullable', 'max:255', 'string'],\n            'input_type' => ['required', 'in:scanned,typed,transcribed'],\n            'input_by' => ['nullable', 'max:255'],\n            'input_date' => ['nullable', 'date', 'date'],\n            'proof_by' => ['nullable', 'max:255'],\n            'proof_date' => ['required', 'date', 'date'],\n            'format_by' => ['required', 'max:255'],\n            'format_date' => ['required', 'date', 'date'],\n            'post_by' => ['required', 'max:255'],\n            'post_date' => ['required', 'date', 'date'],\n            'publication_approval' => [\n                'required',\n                'in:approved,rejected,pending',\n            ],\n            'views' => ['required', 'max:255'],\n        ];\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Requests\\DocumentStoreRequest.php"},"\\app\\Http\\Requests\\DocumentUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass DocumentUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'slug' => ['required', 'max:255', 'string'],\n            'is_pdf' => ['nullable', 'boolean', 'boolean'],\n            'is_audio' => ['nullable', 'boolean', 'boolean'],\n            'is_image' => ['nullable', 'boolean', 'boolean'],\n            'is_video' => ['nullable', 'boolean', 'boolean'],\n            'is_html' => ['nullable', 'boolean', 'boolean'],\n            'file_url' => ['nullable', 'max:255', 'string'],\n            'blurb' => ['nullable', 'max:255', 'string'],\n            'content_html' => ['nullable', 'max:255', 'string'],\n            'content_size' => ['nullable', 'max:255'],\n            'edit_quality' => ['nullable', 'in:high,medium,low'],\n            'formatting_quality' => ['nullable', 'in:high,medium,low'],\n            'publication_permission' => [\n                'required',\n                'in:author,editor,publisher,translator,recipient,fair use,',\n            ],\n            'notes' => ['nullable', 'max:255', 'string'],\n            'input_type' => ['required', 'in:scanned,typed,transcribed'],\n            'input_by' => ['nullable', 'max:255'],\n            'input_date' => ['nullable', 'date', 'date'],\n            'proof_by' => ['nullable', 'max:255'],\n            'proof_date' => ['required', 'date', 'date'],\n            'format_by' => ['required', 'max:255'],\n            'format_date' => ['required', 'date', 'date'],\n            'post_by' => ['required', 'max:255'],\n            'post_date' => ['required', 'date', 'date'],\n            'publication_approval' => [\n                'required',\n                'in:approved,rejected,pending',\n            ],\n            'views' => ['required', 'max:255'],\n        ];\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Requests\\DocumentUpdateRequest.php"},"\\app\\Http\\Controllers\\DocumentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\DocumentStoreRequest;\nuse App\\Http\\Requests\\DocumentUpdateRequest;\n\nclass DocumentController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Document::class);\n\n        $search = $request->get('search', '');\n\n        $documents = Document::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.documents.index', compact('documents', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Document::class);\n\n        return view('app.documents.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\DocumentStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(DocumentStoreRequest $request)\n    {\n        $this->authorize('create', Document::class);\n\n        $validated = $request->validated();\n\n        $document = Document::create($validated);\n\n        return redirect()\n            ->route('documents.edit', $document)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        return view('app.documents.show', compact('document'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Document $document)\n    {\n        $this->authorize('update', $document);\n\n        return view('app.documents.edit', compact('document'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\DocumentUpdateRequest $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(DocumentUpdateRequest $request, Document $document)\n    {\n        $this->authorize('update', $document);\n\n        $validated = $request->validated();\n\n        $document->update($validated);\n\n        return redirect()\n            ->route('documents.edit', $document)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Document $document)\n    {\n        $this->authorize('delete', $document);\n\n        $document->delete();\n\n        return redirect()\n            ->route('documents.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\DocumentController.php"},"\\tests\\Feature\\Controllers\\DocumentControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_documents()\n    {\n        $documents = Document::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('documents.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.documents.index')\n            ->assertViewHas('documents');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_document()\n    {\n        $response = $this->get(route('documents.create'));\n\n        $response->assertOk()->assertViewIs('app.documents.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_document()\n    {\n        $data = Document::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('documents.store'), $data);\n\n        $this->assertDatabaseHas('documents', $data);\n\n        $document = Document::latest('id')->first();\n\n        $response->assertRedirect(route('documents.edit', $document));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_document()\n    {\n        $document = Document::factory()->create();\n\n        $response = $this->get(route('documents.show', $document));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.documents.show')\n            ->assertViewHas('document');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_document()\n    {\n        $document = Document::factory()->create();\n\n        $response = $this->get(route('documents.edit', $document));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.documents.edit')\n            ->assertViewHas('document');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_document()\n    {\n        $document = Document::factory()->create();\n\n        $data = [\n            'is_pdf' => $this->faker->boolean,\n            'is_audio' => $this->faker->boolean,\n            'is_image' => $this->faker->boolean,\n            'is_video' => $this->faker->boolean,\n            'is_html' => $this->faker->boolean,\n            'file_url' => $this->faker->text(255),\n            'blurb' => $this->faker->text,\n            'content_html' => $this->faker->text,\n            'content_size' => $this->faker->word,\n            'edit_quality' => 'high',\n            'formatting_quality' => 'high',\n            'publication_permission' => 'author',\n            'notes' => $this->faker->text,\n            'input_type' => 'scanned',\n            'input_by' => $this->faker->word,\n            'input_date' => $this->faker->date,\n            'proof_by' => $this->faker->word,\n            'proof_date' => $this->faker->date,\n            'format_by' => $this->faker->word,\n            'format_date' => $this->faker->date,\n            'post_by' => $this->faker->word,\n            'post_date' => $this->faker->date,\n            'publication_approval' => 'approved',\n            'views' => 0,\n        ];\n\n        $response = $this->put(route('documents.update', $document), $data);\n\n        $data['id'] = $document->id;\n\n        $this->assertDatabaseHas('documents', $data);\n\n        $response->assertRedirect(route('documents.edit', $document));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_document()\n    {\n        $document = Document::factory()->create();\n\n        $response = $this->delete(route('documents.destroy', $document));\n\n        $response->assertRedirect(route('documents.index'));\n\n        $this->assertSoftDeleted($document);\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Controllers\\DocumentControllerTest.php"},"\\resources\\views\\app\\documents\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.documents.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('documents.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('documents.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.documents.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('documents.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\documents\\create.blade.php"},"\\resources\\views\\app\\documents\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.documents.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('documents.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('documents.update', $document) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.documents.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('documents.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('documents.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\documents\\edit.blade.php"},"\\resources\\views\\app\\documents\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($document) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            value=\"{{ old('slug', ($editing ? $document->slug : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_pdf\"\n            label=\"Is Pdf\"\n            :checked=\"old('is_pdf', ($editing ? $document->is_pdf : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_audio\"\n            label=\"Is Audio\"\n            :checked=\"old('is_audio', ($editing ? $document->is_audio : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_image\"\n            label=\"Is Image\"\n            :checked=\"old('is_image', ($editing ? $document->is_image : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_video\"\n            label=\"Is Video\"\n            :checked=\"old('is_video', ($editing ? $document->is_video : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_html\"\n            label=\"Is Html\"\n            :checked=\"old('is_html', ($editing ? $document->is_html : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"file_url\"\n            label=\"File Url\"\n            value=\"{{ old('file_url', ($editing ? $document->file_url : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"blurb\" label=\"Blurb\" maxlength=\"255\"\n            >{{ old('blurb', ($editing ? $document->blurb : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"content_html\"\n            label=\"Content Html\"\n            maxlength=\"255\"\n            >{{ old('content_html', ($editing ? $document->content_html : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"content_size\"\n            label=\"Content Size\"\n            value=\"{{ old('content_size', ($editing ? $document->content_size : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"edit_quality\" label=\"Edit Quality\">\n            @php $selected = old('edit_quality', ($editing ? $document->edit_quality : '')) @endphp\n            <option value=\"high\" {{ $selected == 'high' ? 'selected' : '' }} >High</option>\n            <option value=\"medium\" {{ $selected == 'medium' ? 'selected' : '' }} >Medium</option>\n            <option value=\"low\" {{ $selected == 'low' ? 'selected' : '' }} >Low</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"formatting_quality\" label=\"Formatting Quality\">\n            @php $selected = old('formatting_quality', ($editing ? $document->formatting_quality : '')) @endphp\n            <option value=\"high\" {{ $selected == 'high' ? 'selected' : '' }} >High</option>\n            <option value=\"medium\" {{ $selected == 'medium' ? 'selected' : '' }} >Medium</option>\n            <option value=\"low\" {{ $selected == 'low' ? 'selected' : '' }} >Low</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select\n            name=\"publication_permission\"\n            label=\"Publication Permission\"\n        >\n            @php $selected = old('publication_permission', ($editing ? $document->publication_permission : '')) @endphp\n            <option value=\"author\" {{ $selected == 'author' ? 'selected' : '' }} >Author</option>\n            <option value=\"editor\" {{ $selected == 'editor' ? 'selected' : '' }} >Editor</option>\n            <option value=\"publisher\" {{ $selected == 'publisher' ? 'selected' : '' }} >Publisher</option>\n            <option value=\"translator\" {{ $selected == 'translator' ? 'selected' : '' }} >Translator</option>\n            <option value=\"recipient\" {{ $selected == 'recipient' ? 'selected' : '' }} >Recipient</option>\n            <option value=\"fair use\" {{ $selected == 'fair use' ? 'selected' : '' }} >Fair use</option>\n            <option value=\"\" {{ $selected == '' ? 'selected' : '' }} ></option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"notes\" label=\"Notes\" maxlength=\"255\"\n            >{{ old('notes', ($editing ? $document->notes : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"input_type\" label=\"Input Type\">\n            @php $selected = old('input_type', ($editing ? $document->input_type : '')) @endphp\n            <option value=\"scanned\" {{ $selected == 'scanned' ? 'selected' : '' }} >Scanned</option>\n            <option value=\"typed\" {{ $selected == 'typed' ? 'selected' : '' }} >Typed</option>\n            <option value=\"transcribed\" {{ $selected == 'transcribed' ? 'selected' : '' }} >Transcribed</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"input_by\"\n            label=\"Input By\"\n            value=\"{{ old('input_by', ($editing ? $document->input_by : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.date\n            name=\"input_date\"\n            label=\"Input Date\"\n            value=\"{{ old('input_date', ($editing ? optional($document->input_date)->format('Y-m-d') : '')) }}\"\n            max=\"255\"\n        ></x-inputs.date>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"proof_by\"\n            label=\"Proof By\"\n            value=\"{{ old('proof_by', ($editing ? $document->proof_by : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.date\n            name=\"proof_date\"\n            label=\"Proof Date\"\n            value=\"{{ old('proof_date', ($editing ? optional($document->proof_date)->format('Y-m-d') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.date>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"format_by\"\n            label=\"Format By\"\n            value=\"{{ old('format_by', ($editing ? $document->format_by : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.date\n            name=\"format_date\"\n            label=\"Format Date\"\n            value=\"{{ old('format_date', ($editing ? optional($document->format_date)->format('Y-m-d') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.date>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"post_by\"\n            label=\"Post By\"\n            value=\"{{ old('post_by', ($editing ? $document->post_by : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.date\n            name=\"post_date\"\n            label=\"Post Date\"\n            value=\"{{ old('post_date', ($editing ? optional($document->post_date)->format('Y-m-d') : '')) }}\"\n            max=\"255\"\n            required\n        ></x-inputs.date>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select\n            name=\"publication_approval\"\n            label=\"Publication Approval\"\n        >\n            @php $selected = old('publication_approval', ($editing ? $document->publication_approval : '')) @endphp\n            <option value=\"approved\" {{ $selected == 'approved' ? 'selected' : '' }} >Approved</option>\n            <option value=\"rejected\" {{ $selected == 'rejected' ? 'selected' : '' }} >Rejected</option>\n            <option value=\"pending\" {{ $selected == 'pending' ? 'selected' : '' }} >Pending</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"views\"\n            label=\"Views\"\n            value=\"{{ old('views', ($editing ? $document->views : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n</div>\n","module":"crud:1","path":"\\resources\\views\\app\\documents\\form-inputs.blade.php"},"\\resources\\views\\app\\documents\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.documents.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('documents.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.slug')\n                        </h5>\n                        <span>{{ $document->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.is_pdf')\n                        </h5>\n                        <span>{{ $document->is_pdf ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.is_audio')\n                        </h5>\n                        <span>{{ $document->is_audio ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.is_image')\n                        </h5>\n                        <span>{{ $document->is_image ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.is_video')\n                        </h5>\n                        <span>{{ $document->is_video ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.is_html')\n                        </h5>\n                        <span>{{ $document->is_html ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.file_url')\n                        </h5>\n                        <span>{{ $document->file_url ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.blurb')\n                        </h5>\n                        <span>{{ $document->blurb ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.content_html')\n                        </h5>\n                        <span>{{ $document->content_html ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.content_size')\n                        </h5>\n                        <span>{{ $document->content_size ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.edit_quality')\n                        </h5>\n                        <span>{{ $document->edit_quality ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.formatting_quality')\n                        </h5>\n                        <span>{{ $document->formatting_quality ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.publication_permission')\n                        </h5>\n                        <span\n                            >{{ $document->publication_permission ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.notes')\n                        </h5>\n                        <span>{{ $document->notes ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.input_type')\n                        </h5>\n                        <span>{{ $document->input_type ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.input_by')\n                        </h5>\n                        <span>{{ $document->input_by ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.input_date')\n                        </h5>\n                        <span>{{ $document->input_date ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.proof_by')\n                        </h5>\n                        <span>{{ $document->proof_by ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.proof_date')\n                        </h5>\n                        <span>{{ $document->proof_date ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.format_by')\n                        </h5>\n                        <span>{{ $document->format_by ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.format_date')\n                        </h5>\n                        <span>{{ $document->format_date ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.post_by')\n                        </h5>\n                        <span>{{ $document->post_by ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.post_date')\n                        </h5>\n                        <span>{{ $document->post_date ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.publication_approval')\n                        </h5>\n                        <span\n                            >{{ $document->publication_approval ?? '-' }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.documents.inputs.views')\n                        </h5>\n                        <span>{{ $document->views ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('documents.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Document::class)\n                    <a href=\"{{ route('documents.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\documents\\show.blade.php"},"\\resources\\views\\app\\documents\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.documents.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Document::class)\n                            <a\n                                href=\"{{ route('documents.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.is_pdf')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.is_audio')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.is_image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.is_video')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.is_html')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.file_url')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.blurb')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.content_html')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.content_size')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.edit_quality')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.formatting_quality')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.publication_permission')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.notes')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.input_type')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.input_by')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.input_date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.proof_by')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.proof_date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.format_by')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.format_date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.post_by')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.post_date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.publication_approval')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.documents.inputs.views')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($documents as $document)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->is_pdf ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->is_audio ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->is_image ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->is_video ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->is_html ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->file_url ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->blurb ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->content_html ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->content_size ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->edit_quality ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->formatting_quality ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->publication_permission ?? '-'\n                                    }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->notes ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->input_type ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->input_by ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->input_date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->proof_by ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->proof_date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->format_by ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->format_date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->post_by ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->post_date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->publication_approval ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $document->views ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $document)\n                                        <a\n                                            href=\"{{ route('documents.edit', $document) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $document)\n                                        <a\n                                            href=\"{{ route('documents.show', $document) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $document)\n                                        <form\n                                            action=\"{{ route('documents.destroy', $document) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"26\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"26\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $documents->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\documents\\index.blade.php"},"\\app\\Http\\Requests\\CollectionStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CollectionStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'slug' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'shortname' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Requests\\CollectionStoreRequest.php"},"\\app\\Http\\Requests\\CollectionUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CollectionUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'slug' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'shortname' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Requests\\CollectionUpdateRequest.php"},"\\app\\Http\\Controllers\\CollectionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Collection;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\CollectionStoreRequest;\nuse App\\Http\\Requests\\CollectionUpdateRequest;\n\nclass CollectionController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Collection::class);\n\n        $search = $request->get('search', '');\n\n        $collections = Collection::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.collections.index', compact('collections', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Collection::class);\n\n        return view('app.collections.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\CollectionStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(CollectionStoreRequest $request)\n    {\n        $this->authorize('create', Collection::class);\n\n        $validated = $request->validated();\n\n        $collection = Collection::create($validated);\n\n        return redirect()\n            ->route('collections.edit', $collection)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Collection $collection)\n    {\n        $this->authorize('view', $collection);\n\n        return view('app.collections.show', compact('collection'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Collection $collection)\n    {\n        $this->authorize('update', $collection);\n\n        return view('app.collections.edit', compact('collection'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\CollectionUpdateRequest $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(\n        CollectionUpdateRequest $request,\n        Collection $collection\n    ) {\n        $this->authorize('update', $collection);\n\n        $validated = $request->validated();\n\n        $collection->update($validated);\n\n        return redirect()\n            ->route('collections.edit', $collection)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Collection $collection)\n    {\n        $this->authorize('delete', $collection);\n\n        $collection->delete();\n\n        return redirect()\n            ->route('collections.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Controllers\\CollectionController.php"},"\\tests\\Feature\\Controllers\\CollectionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Collection;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CollectionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_collections()\n    {\n        $collections = Collection::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('collections.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.collections.index')\n            ->assertViewHas('collections');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_collection()\n    {\n        $response = $this->get(route('collections.create'));\n\n        $response->assertOk()->assertViewIs('app.collections.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_collection()\n    {\n        $data = Collection::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('collections.store'), $data);\n\n        $this->assertDatabaseHas('collections', $data);\n\n        $collection = Collection::latest('id')->first();\n\n        $response->assertRedirect(route('collections.edit', $collection));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $response = $this->get(route('collections.show', $collection));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.collections.show')\n            ->assertViewHas('collection');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $response = $this->get(route('collections.edit', $collection));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.collections.edit')\n            ->assertViewHas('collection');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $data = [\n            'slug' => $this->faker->text(255),\n            'name' => $this->faker->text,\n            'shortname' => $this->faker->text(255),\n        ];\n\n        $response = $this->put(route('collections.update', $collection), $data);\n\n        $data['id'] = $collection->id;\n\n        $this->assertDatabaseHas('collections', $data);\n\n        $response->assertRedirect(route('collections.edit', $collection));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $response = $this->delete(route('collections.destroy', $collection));\n\n        $response->assertRedirect(route('collections.index'));\n\n        $this->assertDeleted($collection);\n    }\n}\n","module":"crud:2","path":"\\tests\\Feature\\Controllers\\CollectionControllerTest.php"},"\\resources\\views\\app\\collections\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.collections.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('collections.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('collections.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.collections.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('collections.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\collections\\create.blade.php"},"\\resources\\views\\app\\collections\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.collections.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('collections.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('collections.update', $collection) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.collections.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('collections.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('collections.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\collections\\edit.blade.php"},"\\resources\\views\\app\\collections\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($collection) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            value=\"{{ old('slug', ($editing ? $collection->slug : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"name\" label=\"Name\" maxlength=\"255\" required\n            >{{ old('name', ($editing ? $collection->name : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"shortname\"\n            label=\"Shortname\"\n            value=\"{{ old('shortname', ($editing ? $collection->shortname : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n</div>\n","module":"crud:2","path":"\\resources\\views\\app\\collections\\form-inputs.blade.php"},"\\resources\\views\\app\\collections\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.collections.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('collections.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.collections.inputs.slug')\n                        </h5>\n                        <span>{{ $collection->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.collections.inputs.name')\n                        </h5>\n                        <span>{{ $collection->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.collections.inputs.shortname')\n                        </h5>\n                        <span>{{ $collection->shortname ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('collections.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Collection::class)\n                    <a href=\"{{ route('collections.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\collections\\show.blade.php"},"\\resources\\views\\app\\collections\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.collections.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Collection::class)\n                            <a\n                                href=\"{{ route('collections.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.collections.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.collections.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.collections.inputs.shortname')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($collections as $collection)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $collection->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $collection->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $collection->shortname ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $collection)\n                                        <a\n                                            href=\"{{ route('collections.edit', $collection) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $collection)\n                                        <a\n                                            href=\"{{ route('collections.show', $collection) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $collection)\n                                        <form\n                                            action=\"{{ route('collections.destroy', $collection) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $collections->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\collections\\index.blade.php"},"\\app\\Http\\Requests\\TagStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'label' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:3","path":"\\app\\Http\\Requests\\TagStoreRequest.php"},"\\app\\Http\\Requests\\TagUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'label' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:3","path":"\\app\\Http\\Requests\\TagUpdateRequest.php"},"\\app\\Http\\Controllers\\TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\TagStoreRequest;\nuse App\\Http\\Requests\\TagUpdateRequest;\n\nclass TagController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.tags.index', compact('tags', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Tag::class);\n\n        return view('app.tags.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\TagStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(TagStoreRequest $request)\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validated();\n\n        $tag = Tag::create($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Tag $tag)\n    {\n        $this->authorize('view', $tag);\n\n        return view('app.tags.show', compact('tag'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Tag $tag)\n    {\n        $this->authorize('update', $tag);\n\n        return view('app.tags.edit', compact('tag'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\TagUpdateRequest $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(TagUpdateRequest $request, Tag $tag)\n    {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validated();\n\n        $tag->update($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Tag $tag)\n    {\n        $this->authorize('delete', $tag);\n\n        $tag->delete();\n\n        return redirect()\n            ->route('tags.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:3","path":"\\app\\Http\\Controllers\\TagController.php"},"\\tests\\Feature\\Controllers\\TagControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_tags()\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('tags.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.index')\n            ->assertViewHas('tags');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_tag()\n    {\n        $response = $this->get(route('tags.create'));\n\n        $response->assertOk()->assertViewIs('app.tags.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag()\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('tags.store'), $data);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $tag = Tag::latest('id')->first();\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.show', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.show')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.edit', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.edit')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'label' => $this->faker->text(255),\n        ];\n\n        $response = $this->put(route('tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->delete(route('tags.destroy', $tag));\n\n        $response->assertRedirect(route('tags.index'));\n\n        $this->assertDeleted($tag);\n    }\n}\n","module":"crud:3","path":"\\tests\\Feature\\Controllers\\TagControllerTest.php"},"\\resources\\views\\app\\tags\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('tags.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:3","path":"\\resources\\views\\app\\tags\\create.blade.php"},"\\resources\\views\\app\\tags\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('tags.update', $tag) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:3","path":"\\resources\\views\\app\\tags\\edit.blade.php"},"\\resources\\views\\app\\tags\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($tag) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"label\"\n            label=\"Label\"\n            value=\"{{ old('label', ($editing ? $tag->label : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n</div>\n","module":"crud:3","path":"\\resources\\views\\app\\tags\\form-inputs.blade.php"},"\\resources\\views\\app\\tags\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.label')\n                        </h5>\n                        <span>{{ $tag->label ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Tag::class)\n                    <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:3","path":"\\resources\\views\\app\\tags\\show.blade.php"},"\\resources\\views\\app\\tags\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Tag::class)\n                            <a\n                                href=\"{{ route('tags.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.label')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($tags as $tag)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->label ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $tag)\n                                        <a\n                                            href=\"{{ route('tags.edit', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $tag)\n                                        <a\n                                            href=\"{{ route('tags.show', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $tag)\n                                        <form\n                                            action=\"{{ route('tags.destroy', $tag) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $tags->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:3","path":"\\resources\\views\\app\\tags\\index.blade.php"},"\\app\\Http\\Requests\\UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users', 'email'],\n            'password' => ['required'],\n            'status' => ['required', 'in:contributor,editor,admin'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:4","path":"\\app\\Http\\Requests\\UserStoreRequest.php"},"\\app\\Http\\Requests\\UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users')->ignore($this->user->id, 'id'),\n                'email',\n            ],\n            'status' => ['required', 'in:contributor,editor,admin'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:4","path":"\\app\\Http\\Requests\\UserUpdateRequest.php"},"\\app\\Http\\Controllers\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', User::class);\n\n        $roles = Role::get();\n\n        return view('app.users.create', compact('roles'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(UserStoreRequest $request)\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, User $user)\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $roles = Role::get();\n\n        return view('app.users.edit', compact('user', 'roles'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserUpdateRequest $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(UserUpdateRequest $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, User $user)\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:4","path":"\\app\\Http\\Controllers\\UserController.php"},"\\tests\\Feature\\Controllers\\UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users()\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user()\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user()\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user()\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name,\n            'email' => $this->faker->email,\n            'status' => 'Contributor',\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertDeleted($user);\n    }\n}\n","module":"crud:4","path":"\\tests\\Feature\\Controllers\\UserControllerTest.php"},"\\resources\\views\\app\\users\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('users.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:4","path":"\\resources\\views\\app\\users\\create.blade.php"},"\\resources\\views\\app\\users\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('users.update', $user) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('users.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:4","path":"\\resources\\views\\app\\users\\edit.blade.php"},"\\resources\\views\\app\\users\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            value=\"{{ old('name', ($editing ? $user->name : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            value=\"{{ old('email', ($editing ? $user->email : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"status\" label=\"Status\">\n            @php $selected = old('status', ($editing ? $user->status : '')) @endphp\n            <option value=\"Contributor\" {{ $selected == 'Contributor' ? 'selected' : '' }} >Contributor</option>\n            <option value=\"Editor\" {{ $selected == 'Editor' ? 'selected' : '' }} >Editor</option>\n            <option value=\"Admin\" {{ $selected == 'Admin' ? 'selected' : '' }} >Admin</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.roles.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($roles as $role)\n            <div>\n                <x-inputs.checkbox\n                    id=\"role{{ $role->id }}\"\n                    name=\"roles[]\"\n                    label=\"{{ ucfirst($role->name) }}\"\n                    value=\"{{ $role->id }}\"\n                    :checked=\"isset($user) ? $user->hasRole($role) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud:4","path":"\\resources\\views\\app\\users\\form-inputs.blade.php"},"\\resources\\views\\app\\users\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span>{{ $user->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span>{{ $user->email ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.status')\n                        </h5>\n                        <span>{{ $user->status ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.roles.name')\n                        </h5>\n                        <div>\n                            @forelse ($user->roles as $role)\n                            <div\n                                class=\"inline-block p-1 text-center text-sm rounded bg-blue-400 text-white\"\n                            >\n                                {{ $role->name }}\n                            </div>\n                            <br />\n                            @empty - @endforelse\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\User::class)\n                    <a href=\"{{ route('users.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:4","path":"\\resources\\views\\app\\users\\show.blade.php"},"\\resources\\views\\app\\users\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.status')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->status ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $user)\n                                        <form\n                                            action=\"{{ route('users.destroy', $user) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:4","path":"\\resources\\views\\app\\users\\index.blade.php"},"\\app\\Http\\Requests\\LanguageStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LanguageStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'language' => ['required', 'max:255', 'string'],\n            'language_tag' => ['required', 'max:255'],\n        ];\n    }\n}\n","module":"crud:5","path":"\\app\\Http\\Requests\\LanguageStoreRequest.php"},"\\app\\Http\\Requests\\LanguageUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LanguageUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'language' => ['required', 'max:255', 'string'],\n            'language_tag' => ['required', 'max:255'],\n        ];\n    }\n}\n","module":"crud:5","path":"\\app\\Http\\Requests\\LanguageUpdateRequest.php"},"\\app\\Http\\Controllers\\LanguageController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\LanguageStoreRequest;\nuse App\\Http\\Requests\\LanguageUpdateRequest;\n\nclass LanguageController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Language::class);\n\n        $search = $request->get('search', '');\n\n        $languages = Language::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.languages.index', compact('languages', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Language::class);\n\n        return view('app.languages.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\LanguageStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(LanguageStoreRequest $request)\n    {\n        $this->authorize('create', Language::class);\n\n        $validated = $request->validated();\n\n        $language = Language::create($validated);\n\n        return redirect()\n            ->route('languages.edit', $language)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Language $language)\n    {\n        $this->authorize('view', $language);\n\n        return view('app.languages.show', compact('language'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Language $language)\n    {\n        $this->authorize('update', $language);\n\n        return view('app.languages.edit', compact('language'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\LanguageUpdateRequest $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(LanguageUpdateRequest $request, Language $language)\n    {\n        $this->authorize('update', $language);\n\n        $validated = $request->validated();\n\n        $language->update($validated);\n\n        return redirect()\n            ->route('languages.edit', $language)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Language $language)\n    {\n        $this->authorize('delete', $language);\n\n        $language->delete();\n\n        return redirect()\n            ->route('languages.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:5","path":"\\app\\Http\\Controllers\\LanguageController.php"},"\\tests\\Feature\\Controllers\\LanguageControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_languages()\n    {\n        $languages = Language::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('languages.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.index')\n            ->assertViewHas('languages');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_language()\n    {\n        $response = $this->get(route('languages.create'));\n\n        $response->assertOk()->assertViewIs('app.languages.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language()\n    {\n        $data = Language::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('languages.store'), $data);\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $language = Language::latest('id')->first();\n\n        $response->assertRedirect(route('languages.edit', $language));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_language()\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->get(route('languages.show', $language));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.show')\n            ->assertViewHas('language');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_language()\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->get(route('languages.edit', $language));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.edit')\n            ->assertViewHas('language');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_language()\n    {\n        $language = Language::factory()->create();\n\n        $data = [\n            'language' => $this->faker->text(255),\n            'language_tag' => $this->faker->word(255),\n        ];\n\n        $response = $this->put(route('languages.update', $language), $data);\n\n        $data['id'] = $language->id;\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertRedirect(route('languages.edit', $language));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_language()\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->delete(route('languages.destroy', $language));\n\n        $response->assertRedirect(route('languages.index'));\n\n        $this->assertDeleted($language);\n    }\n}\n","module":"crud:5","path":"\\tests\\Feature\\Controllers\\LanguageControllerTest.php"},"\\resources\\views\\app\\languages\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('languages.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.languages.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:5","path":"\\resources\\views\\app\\languages\\create.blade.php"},"\\resources\\views\\app\\languages\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('languages.update', $language) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.languages.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('languages.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:5","path":"\\resources\\views\\app\\languages\\edit.blade.php"},"\\resources\\views\\app\\languages\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($language) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"language\"\n            label=\"Language\"\n            value=\"{{ old('language', ($editing ? $language->language : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"language_tag\"\n            label=\"Language Tag\"\n            value=\"{{ old('language_tag', ($editing ? $language->language_tag : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n</div>\n","module":"crud:5","path":"\\resources\\views\\app\\languages\\form-inputs.blade.php"},"\\resources\\views\\app\\languages\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.language')\n                        </h5>\n                        <span>{{ $language->language ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.language_tag')\n                        </h5>\n                        <span>{{ $language->language_tag ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Language::class)\n                    <a href=\"{{ route('languages.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:5","path":"\\resources\\views\\app\\languages\\show.blade.php"},"\\resources\\views\\app\\languages\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Language::class)\n                            <a\n                                href=\"{{ route('languages.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.language')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.language_tag')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($languages as $language)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->language ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->language_tag ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $language)\n                                        <a\n                                            href=\"{{ route('languages.edit', $language) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $language)\n                                        <a\n                                            href=\"{{ route('languages.show', $language) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $language)\n                                        <form\n                                            action=\"{{ route('languages.destroy', $language) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $languages->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:5","path":"\\resources\\views\\app\\languages\\index.blade.php"},"\\app\\Http\\Requests\\LocationStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LocationStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'continent' => ['required', 'max:255', 'string'],\n            'country' => ['required', 'max:255', 'string'],\n            'locality' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:6","path":"\\app\\Http\\Requests\\LocationStoreRequest.php"},"\\app\\Http\\Requests\\LocationUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LocationUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'continent' => ['required', 'max:255', 'string'],\n            'country' => ['required', 'max:255', 'string'],\n            'locality' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:6","path":"\\app\\Http\\Requests\\LocationUpdateRequest.php"},"\\app\\Http\\Controllers\\LocationController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Location;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\LocationStoreRequest;\nuse App\\Http\\Requests\\LocationUpdateRequest;\n\nclass LocationController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Location::class);\n\n        $search = $request->get('search', '');\n\n        $locations = Location::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.locations.index', compact('locations', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Location::class);\n\n        return view('app.locations.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\LocationStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(LocationStoreRequest $request)\n    {\n        $this->authorize('create', Location::class);\n\n        $validated = $request->validated();\n\n        $location = Location::create($validated);\n\n        return redirect()\n            ->route('locations.edit', $location)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Location $location)\n    {\n        $this->authorize('view', $location);\n\n        return view('app.locations.show', compact('location'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Location $location)\n    {\n        $this->authorize('update', $location);\n\n        return view('app.locations.edit', compact('location'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\LocationUpdateRequest $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(LocationUpdateRequest $request, Location $location)\n    {\n        $this->authorize('update', $location);\n\n        $validated = $request->validated();\n\n        $location->update($validated);\n\n        return redirect()\n            ->route('locations.edit', $location)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Location $location)\n    {\n        $this->authorize('delete', $location);\n\n        $location->delete();\n\n        return redirect()\n            ->route('locations.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:6","path":"\\app\\Http\\Controllers\\LocationController.php"},"\\tests\\Feature\\Controllers\\LocationControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Location;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LocationControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_locations()\n    {\n        $locations = Location::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('locations.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.locations.index')\n            ->assertViewHas('locations');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_location()\n    {\n        $response = $this->get(route('locations.create'));\n\n        $response->assertOk()->assertViewIs('app.locations.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_location()\n    {\n        $data = Location::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('locations.store'), $data);\n\n        $this->assertDatabaseHas('locations', $data);\n\n        $location = Location::latest('id')->first();\n\n        $response->assertRedirect(route('locations.edit', $location));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_location()\n    {\n        $location = Location::factory()->create();\n\n        $response = $this->get(route('locations.show', $location));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.locations.show')\n            ->assertViewHas('location');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_location()\n    {\n        $location = Location::factory()->create();\n\n        $response = $this->get(route('locations.edit', $location));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.locations.edit')\n            ->assertViewHas('location');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_location()\n    {\n        $location = Location::factory()->create();\n\n        $data = [\n            'continent' => $this->faker->text(255),\n            'country' => $this->faker->country,\n            'locality' => $this->faker->text(255),\n        ];\n\n        $response = $this->put(route('locations.update', $location), $data);\n\n        $data['id'] = $location->id;\n\n        $this->assertDatabaseHas('locations', $data);\n\n        $response->assertRedirect(route('locations.edit', $location));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_location()\n    {\n        $location = Location::factory()->create();\n\n        $response = $this->delete(route('locations.destroy', $location));\n\n        $response->assertRedirect(route('locations.index'));\n\n        $this->assertDeleted($location);\n    }\n}\n","module":"crud:6","path":"\\tests\\Feature\\Controllers\\LocationControllerTest.php"},"\\resources\\views\\app\\locations\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.locations.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('locations.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('locations.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.locations.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('locations.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:6","path":"\\resources\\views\\app\\locations\\create.blade.php"},"\\resources\\views\\app\\locations\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.locations.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('locations.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('locations.update', $location) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.locations.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('locations.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('locations.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:6","path":"\\resources\\views\\app\\locations\\edit.blade.php"},"\\resources\\views\\app\\locations\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($location) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"continent\"\n            label=\"Continent\"\n            value=\"{{ old('continent', ($editing ? $location->continent : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"country\"\n            label=\"Country\"\n            value=\"{{ old('country', ($editing ? $location->country : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"locality\"\n            label=\"Locality\"\n            value=\"{{ old('locality', ($editing ? $location->locality : '')) }}\"\n            maxlength=\"255\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n</div>\n","module":"crud:6","path":"\\resources\\views\\app\\locations\\form-inputs.blade.php"},"\\resources\\views\\app\\locations\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.locations.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('locations.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.locations.inputs.continent')\n                        </h5>\n                        <span>{{ $location->continent ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.locations.inputs.country')\n                        </h5>\n                        <span>{{ $location->country ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.locations.inputs.locality')\n                        </h5>\n                        <span>{{ $location->locality ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('locations.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Location::class)\n                    <a href=\"{{ route('locations.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:6","path":"\\resources\\views\\app\\locations\\show.blade.php"},"\\resources\\views\\app\\locations\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.locations.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Location::class)\n                            <a\n                                href=\"{{ route('locations.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.locations.inputs.continent')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.locations.inputs.country')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.locations.inputs.locality')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($locations as $location)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $location->continent ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $location->country ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $location->locality ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $location)\n                                        <a\n                                            href=\"{{ route('locations.edit', $location) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $location)\n                                        <a\n                                            href=\"{{ route('locations.show', $location) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $location)\n                                        <form\n                                            action=\"{{ route('locations.destroy', $location) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $locations->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:6","path":"\\resources\\views\\app\\locations\\index.blade.php"},"\\app\\Http\\Requests\\CreatorStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CreatorStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'first_names' => ['nullable', 'max:255', 'string'],\n            'last_names' => ['nullable', 'max:255', 'string'],\n            'author' => ['nullable', 'boolean', 'boolean'],\n            'editor' => ['nullable', 'boolean', 'boolean'],\n            'translator' => ['nullable', 'boolean', 'boolean'],\n            'compiler' => ['nullable', 'boolean', 'boolean'],\n        ];\n    }\n}\n","module":"crud:7","path":"\\app\\Http\\Requests\\CreatorStoreRequest.php"},"\\app\\Http\\Requests\\CreatorUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CreatorUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'first_names' => ['nullable', 'max:255', 'string'],\n            'last_names' => ['nullable', 'max:255', 'string'],\n            'author' => ['nullable', 'boolean', 'boolean'],\n            'editor' => ['nullable', 'boolean', 'boolean'],\n            'translator' => ['nullable', 'boolean', 'boolean'],\n            'compiler' => ['nullable', 'boolean', 'boolean'],\n        ];\n    }\n}\n","module":"crud:7","path":"\\app\\Http\\Requests\\CreatorUpdateRequest.php"},"\\app\\Http\\Controllers\\CreatorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Creator;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\CreatorStoreRequest;\nuse App\\Http\\Requests\\CreatorUpdateRequest;\n\nclass CreatorController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Creator::class);\n\n        $search = $request->get('search', '');\n\n        $creators = Creator::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.creators.index', compact('creators', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Creator::class);\n\n        return view('app.creators.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\CreatorStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(CreatorStoreRequest $request)\n    {\n        $this->authorize('create', Creator::class);\n\n        $validated = $request->validated();\n\n        $creator = Creator::create($validated);\n\n        return redirect()\n            ->route('creators.edit', $creator)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Creator $creator)\n    {\n        $this->authorize('view', $creator);\n\n        return view('app.creators.show', compact('creator'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Creator $creator)\n    {\n        $this->authorize('update', $creator);\n\n        return view('app.creators.edit', compact('creator'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\CreatorUpdateRequest $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(CreatorUpdateRequest $request, Creator $creator)\n    {\n        $this->authorize('update', $creator);\n\n        $validated = $request->validated();\n\n        $creator->update($validated);\n\n        return redirect()\n            ->route('creators.edit', $creator)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Creator $creator)\n    {\n        $this->authorize('delete', $creator);\n\n        $creator->delete();\n\n        return redirect()\n            ->route('creators.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:7","path":"\\app\\Http\\Controllers\\CreatorController.php"},"\\tests\\Feature\\Controllers\\CreatorControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Creator;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CreatorControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_creators()\n    {\n        $creators = Creator::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('creators.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.creators.index')\n            ->assertViewHas('creators');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_creator()\n    {\n        $response = $this->get(route('creators.create'));\n\n        $response->assertOk()->assertViewIs('app.creators.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_creator()\n    {\n        $data = Creator::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('creators.store'), $data);\n\n        $this->assertDatabaseHas('creators', $data);\n\n        $creator = Creator::latest('id')->first();\n\n        $response->assertRedirect(route('creators.edit', $creator));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $response = $this->get(route('creators.show', $creator));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.creators.show')\n            ->assertViewHas('creator');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $response = $this->get(route('creators.edit', $creator));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.creators.edit')\n            ->assertViewHas('creator');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $data = [\n            'first_names' => $this->faker->text(255),\n            'last_names' => $this->faker->text(255),\n            'author' => $this->faker->boolean,\n            'editor' => $this->faker->boolean,\n            'translator' => $this->faker->boolean,\n            'compiler' => $this->faker->boolean,\n        ];\n\n        $response = $this->put(route('creators.update', $creator), $data);\n\n        $data['id'] = $creator->id;\n\n        $this->assertDatabaseHas('creators', $data);\n\n        $response->assertRedirect(route('creators.edit', $creator));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $response = $this->delete(route('creators.destroy', $creator));\n\n        $response->assertRedirect(route('creators.index'));\n\n        $this->assertDeleted($creator);\n    }\n}\n","module":"crud:7","path":"\\tests\\Feature\\Controllers\\CreatorControllerTest.php"},"\\resources\\views\\app\\creators\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.creators.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('creators.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('creators.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.creators.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('creators.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:7","path":"\\resources\\views\\app\\creators\\create.blade.php"},"\\resources\\views\\app\\creators\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.creators.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('creators.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('creators.update', $creator) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.creators.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('creators.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('creators.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:7","path":"\\resources\\views\\app\\creators\\edit.blade.php"},"\\resources\\views\\app\\creators\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($creator) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"first_names\"\n            label=\"First Names\"\n            value=\"{{ old('first_names', ($editing ? $creator->first_names : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"last_names\"\n            label=\"Last Names\"\n            value=\"{{ old('last_names', ($editing ? $creator->last_names : '')) }}\"\n            maxlength=\"255\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"author\"\n            label=\"Author\"\n            :checked=\"old('author', ($editing ? $creator->author : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"editor\"\n            label=\"Editor\"\n            :checked=\"old('editor', ($editing ? $creator->editor : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"translator\"\n            label=\"Translator\"\n            :checked=\"old('translator', ($editing ? $creator->translator : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"compiler\"\n            label=\"Compiler\"\n            :checked=\"old('compiler', ($editing ? $creator->compiler : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n</div>\n","module":"crud:7","path":"\\resources\\views\\app\\creators\\form-inputs.blade.php"},"\\resources\\views\\app\\creators\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.creators.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('creators.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.first_names')\n                        </h5>\n                        <span>{{ $creator->first_names ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.last_names')\n                        </h5>\n                        <span>{{ $creator->last_names ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.author')\n                        </h5>\n                        <span>{{ $creator->author ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.editor')\n                        </h5>\n                        <span>{{ $creator->editor ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.translator')\n                        </h5>\n                        <span>{{ $creator->translator ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.creators.inputs.compiler')\n                        </h5>\n                        <span>{{ $creator->compiler ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('creators.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Creator::class)\n                    <a href=\"{{ route('creators.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:7","path":"\\resources\\views\\app\\creators\\show.blade.php"},"\\resources\\views\\app\\creators\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.creators.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Creator::class)\n                            <a\n                                href=\"{{ route('creators.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.first_names')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.last_names')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.author')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.editor')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.translator')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.creators.inputs.compiler')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($creators as $creator)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->first_names ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->last_names ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->author ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->editor ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->translator ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $creator->compiler ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $creator)\n                                        <a\n                                            href=\"{{ route('creators.edit', $creator) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $creator)\n                                        <a\n                                            href=\"{{ route('creators.show', $creator) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $creator)\n                                        <form\n                                            action=\"{{ route('creators.destroy', $creator) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"7\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"7\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $creators->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:7","path":"\\resources\\views\\app\\creators\\index.blade.php"},"\\app\\Http\\Requests\\SearchStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass SearchStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'query' => ['nullable', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:8","path":"\\app\\Http\\Requests\\SearchStoreRequest.php"},"\\app\\Http\\Requests\\SearchUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass SearchUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'query' => ['nullable', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:8","path":"\\app\\Http\\Requests\\SearchUpdateRequest.php"},"\\app\\Http\\Controllers\\SearchController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Search;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\SearchStoreRequest;\nuse App\\Http\\Requests\\SearchUpdateRequest;\n\nclass SearchController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Search::class);\n\n        $search = $request->get('search', '');\n\n        $search = Search::search($search)\n            ->latest()\n            ->paginate(5);\n\n        return view('app.search.index', compact('search', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Search::class);\n\n        return view('app.search.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\SearchStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(SearchStoreRequest $request)\n    {\n        $this->authorize('create', Search::class);\n\n        $validated = $request->validated();\n\n        $search = Search::create($validated);\n\n        return redirect()\n            ->route('search.edit', $search)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Search $search)\n    {\n        $this->authorize('view', $search);\n\n        return view('app.search.show', compact('search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Search $search)\n    {\n        $this->authorize('update', $search);\n\n        return view('app.search.edit', compact('search'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\SearchUpdateRequest $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(SearchUpdateRequest $request, Search $search)\n    {\n        $this->authorize('update', $search);\n\n        $validated = $request->validated();\n\n        $search->update($validated);\n\n        return redirect()\n            ->route('search.edit', $search)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Search $search)\n    {\n        $this->authorize('delete', $search);\n\n        $search->delete();\n\n        return redirect()\n            ->route('search.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:8","path":"\\app\\Http\\Controllers\\SearchController.php"},"\\tests\\Feature\\Controllers\\SearchControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Search;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass SearchControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_search()\n    {\n        $search = Search::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('search.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.search.index')\n            ->assertViewHas('search');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_search()\n    {\n        $response = $this->get(route('search.create'));\n\n        $response->assertOk()->assertViewIs('app.search.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_search()\n    {\n        $data = Search::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('search.store'), $data);\n\n        $this->assertDatabaseHas('searches', $data);\n\n        $search = Search::latest('id')->first();\n\n        $response->assertRedirect(route('search.edit', $search));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_search()\n    {\n        $search = Search::factory()->create();\n\n        $response = $this->get(route('search.show', $search));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.search.show')\n            ->assertViewHas('search');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_search()\n    {\n        $search = Search::factory()->create();\n\n        $response = $this->get(route('search.edit', $search));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.search.edit')\n            ->assertViewHas('search');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_search()\n    {\n        $search = Search::factory()->create();\n\n        $data = [\n            'query' => $this->faker->text,\n        ];\n\n        $response = $this->put(route('search.update', $search), $data);\n\n        $data['id'] = $search->id;\n\n        $this->assertDatabaseHas('searches', $data);\n\n        $response->assertRedirect(route('search.edit', $search));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_search()\n    {\n        $search = Search::factory()->create();\n\n        $response = $this->delete(route('search.destroy', $search));\n\n        $response->assertRedirect(route('search.index'));\n\n        $this->assertDeleted($search);\n    }\n}\n","module":"crud:8","path":"\\tests\\Feature\\Controllers\\SearchControllerTest.php"},"\\resources\\views\\app\\search\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.searches.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('search.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('search.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.search.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('search.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:8","path":"\\resources\\views\\app\\search\\create.blade.php"},"\\resources\\views\\app\\search\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.searches.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('search.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('search.update', $search) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.search.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('search.index') }}\" class=\"button\">\n                            <i\n                                class=\"mr-1 icon ion-md-return-left text-primary\"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('search.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:8","path":"\\resources\\views\\app\\search\\edit.blade.php"},"\\resources\\views\\app\\search\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($search) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"query\" label=\"Query\" maxlength=\"255\"\n            >{{ old('query', ($editing ? $search->query : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:8","path":"\\resources\\views\\app\\search\\form-inputs.blade.php"},"\\resources\\views\\app\\search\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.searches.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('search.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.searches.inputs.query')\n                        </h5>\n                        <span>{{ $search->query ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('search.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Search::class)\n                    <a href=\"{{ route('search.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:8","path":"\\resources\\views\\app\\search\\show.blade.php"},"\\resources\\views\\app\\search\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.searches.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Search::class)\n                            <a\n                                href=\"{{ route('search.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.searches.inputs.query')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.common.actions')\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($search as $search)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $search->query ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"relative inline-flex align-middle\"\n                                    >\n                                        @can('update', $search)\n                                        <a\n                                            href=\"{{ route('search.edit', $search) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $search)\n                                        <a\n                                            href=\"{{ route('search.show', $search) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $search)\n                                        <form\n                                            action=\"{{ route('search.destroy', $search) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-trash text-red-600\"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $search->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:8","path":"\\resources\\views\\app\\search\\index.blade.php"},"\\app\\Http\\Resources\\DocumentResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass DocumentResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:2","path":"\\app\\Http\\Resources\\DocumentResource.php"},"\\app\\Http\\Resources\\DocumentCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass DocumentCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:2","path":"\\app\\Http\\Resources\\DocumentCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentResource;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass DocumentController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Document::class);\n\n        $search = $request->get('search', '');\n\n        $documents = Document::search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Document::class);\n\n        $validated = $request->validate([\n            'slug' => ['required', 'max:255', 'string'],\n            'is_pdf' => ['nullable', 'boolean', 'boolean'],\n            'is_audio' => ['nullable', 'boolean', 'boolean'],\n            'is_image' => ['nullable', 'boolean', 'boolean'],\n            'is_video' => ['nullable', 'boolean', 'boolean'],\n            'is_html' => ['nullable', 'boolean', 'boolean'],\n            'file_url' => ['nullable', 'max:255', 'string'],\n            'blurb' => ['nullable', 'max:255', 'string'],\n            'content_html' => ['nullable', 'max:255', 'string'],\n            'content_size' => ['nullable', 'max:255'],\n            'edit_quality' => ['nullable', 'in:high,medium,low'],\n            'formatting_quality' => ['nullable', 'in:high,medium,low'],\n            'publication_permission' => [\n                'required',\n                'in:author,editor,publisher,translator,recipient,fair use,',\n            ],\n            'notes' => ['nullable', 'max:255', 'string'],\n            'input_type' => ['required', 'in:scanned,typed,transcribed'],\n            'input_by' => ['nullable', 'max:255'],\n            'input_date' => ['nullable', 'date', 'date'],\n            'proof_by' => ['nullable', 'max:255'],\n            'proof_date' => ['required', 'date', 'date'],\n            'format_by' => ['required', 'max:255'],\n            'format_date' => ['required', 'date', 'date'],\n            'post_by' => ['required', 'max:255'],\n            'post_date' => ['required', 'date', 'date'],\n            'publication_approval' => [\n                'required',\n                'in:approved,rejected,pending',\n            ],\n            'views' => ['required', 'max:255'],\n        ]);\n\n        $document = Document::create($validated);\n\n        return new DocumentResource($document);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        return new DocumentResource($document);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Document $document)\n    {\n        $this->authorize('update', $document);\n\n        $validated = $request->validate([\n            'slug' => ['required', 'max:255', 'string'],\n            'is_pdf' => ['nullable', 'boolean', 'boolean'],\n            'is_audio' => ['nullable', 'boolean', 'boolean'],\n            'is_image' => ['nullable', 'boolean', 'boolean'],\n            'is_video' => ['nullable', 'boolean', 'boolean'],\n            'is_html' => ['nullable', 'boolean', 'boolean'],\n            'file_url' => ['nullable', 'max:255', 'string'],\n            'blurb' => ['nullable', 'max:255', 'string'],\n            'content_html' => ['nullable', 'max:255', 'string'],\n            'content_size' => ['nullable', 'max:255'],\n            'edit_quality' => ['nullable', 'in:high,medium,low'],\n            'formatting_quality' => ['nullable', 'in:high,medium,low'],\n            'publication_permission' => [\n                'required',\n                'in:author,editor,publisher,translator,recipient,fair use,',\n            ],\n            'notes' => ['nullable', 'max:255', 'string'],\n            'input_type' => ['required', 'in:scanned,typed,transcribed'],\n            'input_by' => ['nullable', 'max:255'],\n            'input_date' => ['nullable', 'date', 'date'],\n            'proof_by' => ['nullable', 'max:255'],\n            'proof_date' => ['required', 'date', 'date'],\n            'format_by' => ['required', 'max:255'],\n            'format_date' => ['required', 'date', 'date'],\n            'post_by' => ['required', 'max:255'],\n            'post_date' => ['required', 'date', 'date'],\n            'publication_approval' => [\n                'required',\n                'in:approved,rejected,pending',\n            ],\n            'views' => ['required', 'max:255'],\n        ]);\n\n        $document->update($validated);\n\n        return new DocumentResource($document);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Document $document)\n    {\n        $this->authorize('delete', $document);\n\n        $document->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentController.php"},"\\tests\\Feature\\Api\\DocumentTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_documents_list()\n    {\n        $documents = Document::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.documents.index'));\n\n        $response->assertOk()->assertSee($documents[0]->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_document()\n    {\n        $data = Document::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.documents.store'), $data);\n\n        $this->assertDatabaseHas('documents', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_document()\n    {\n        $document = Document::factory()->create();\n\n        $data = [\n            'is_pdf' => $this->faker->boolean,\n            'is_audio' => $this->faker->boolean,\n            'is_image' => $this->faker->boolean,\n            'is_video' => $this->faker->boolean,\n            'is_html' => $this->faker->boolean,\n            'file_url' => $this->faker->text(255),\n            'blurb' => $this->faker->text,\n            'content_html' => $this->faker->text,\n            'content_size' => $this->faker->word,\n            'edit_quality' => 'high',\n            'formatting_quality' => 'high',\n            'publication_permission' => 'author',\n            'notes' => $this->faker->text,\n            'input_type' => 'scanned',\n            'input_by' => $this->faker->word,\n            'input_date' => $this->faker->date,\n            'proof_by' => $this->faker->word,\n            'proof_date' => $this->faker->date,\n            'format_by' => $this->faker->word,\n            'format_date' => $this->faker->date,\n            'post_by' => $this->faker->word,\n            'post_date' => $this->faker->date,\n            'publication_approval' => 'approved',\n            'views' => 0,\n        ];\n\n        $response = $this->putJson(\n            route('api.documents.update', $document),\n            $data\n        );\n\n        $data['id'] = $document->id;\n\n        $this->assertDatabaseHas('documents', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_document()\n    {\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.destroy', $document)\n        );\n\n        $this->assertSoftDeleted($document);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentTest.php"},"\\app\\Http\\Resources\\EditionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass EditionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:19","path":"\\app\\Http\\Resources\\EditionResource.php"},"\\app\\Http\\Resources\\EditionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass EditionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:19","path":"\\app\\Http\\Resources\\EditionCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentEditionsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\EditionResource;\nuse App\\Http\\Resources\\EditionCollection;\n\nclass DocumentEditionsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $editions = $document\n            ->editions()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new EditionCollection($editions);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request, Document $document)\n    {\n        $this->authorize('create', Edition::class);\n\n        $validated = $request->validate([\n            'title' => ['required', 'max:255', 'string'],\n            'subtitle' => ['nullable', 'max:255', 'string'],\n            'title_parent' => ['nullable', 'max:255', 'string'],\n            'volume' => ['nullable', 'max:255', 'string'],\n            'page_range' => ['nullable', 'max:255'],\n            'page_total' => ['nullable', 'max:255'],\n            'publisher_name' => ['nullable', 'max:255', 'string'],\n            'publisher_city' => ['nullable', 'max:255', 'string'],\n            'date' => ['nullable', 'date', 'date'],\n            'isbn' => ['nullable', 'max:255', 'string'],\n        ]);\n\n        $edition = $document->editions()->create($validated);\n\n        return new EditionResource($edition);\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentEditionsController.php"},"\\tests\\Feature\\Api\\DocumentEditionsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Edition;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentEditionsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_editions()\n    {\n        $document = Document::factory()->create();\n        $editions = Edition::factory()\n            ->count(2)\n            ->create([\n                'document_id' => $document->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.documents.editions.index', $document)\n        );\n\n        $response->assertOk()->assertSee($editions[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_document_editions()\n    {\n        $document = Document::factory()->create();\n        $data = Edition::factory()\n            ->make([\n                'document_id' => $document->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.documents.editions.store', $document),\n            $data\n        );\n\n        unset($data['title']);\n        unset($data['subtitle']);\n        unset($data['title_parent']);\n        unset($data['volume']);\n        unset($data['page_range']);\n        unset($data['page_total']);\n        unset($data['publisher_name']);\n        unset($data['publisher_city']);\n        unset($data['date']);\n        unset($data['isbn']);\n        unset($data['document_id']);\n\n        $this->assertDatabaseHas('editions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $edition = Edition::latest('id')->first();\n\n        $this->assertEquals($document->id, $edition->document_id);\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentEditionsTest.php"},"\\app\\Http\\Resources\\CollectionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CollectionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:4","path":"\\app\\Http\\Resources\\CollectionResource.php"},"\\app\\Http\\Resources\\CollectionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CollectionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:4","path":"\\app\\Http\\Resources\\CollectionCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentCollectionsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse App\\Models\\Collection;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CollectionCollection;\n\nclass DocumentCollectionsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $collections = $document\n            ->collections()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CollectionCollection($collections);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Document $document,\n        Collection $collection\n    ) {\n        $this->authorize('update', $document);\n\n        $document->collections()->syncWithoutDetaching([$collection->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Document $document,\n        Collection $collection\n    ) {\n        $this->authorize('update', $document);\n\n        $document->collections()->detach($collection);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentCollectionsController.php"},"\\tests\\Feature\\Api\\DocumentCollectionsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse App\\Models\\Collection;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentCollectionsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_collections()\n    {\n        $document = Document::factory()->create();\n        $collection = Collection::factory()->create();\n\n        $document->collections()->attach($collection);\n\n        $response = $this->getJson(\n            route('api.documents.collections.index', $document)\n        );\n\n        $response->assertOk()->assertSee($collection->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_collections_to_document()\n    {\n        $document = Document::factory()->create();\n        $collection = Collection::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.collections.store', [$document, $collection])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->collections()\n                ->where('collections.id', $collection->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_collections_from_document()\n    {\n        $document = Document::factory()->create();\n        $collection = Collection::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.collections.store', [$document, $collection])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->collections()\n                ->where('collections.id', $collection->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentCollectionsTest.php"},"\\app\\Http\\Resources\\LanguageResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass LanguageResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:7","path":"\\app\\Http\\Resources\\LanguageResource.php"},"\\app\\Http\\Resources\\LanguageCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass LanguageCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:7","path":"\\app\\Http\\Resources\\LanguageCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentLanguagesController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\LanguageCollection;\n\nclass DocumentLanguagesController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $languages = $document\n            ->languages()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new LanguageCollection($languages);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Document $document,\n        Language $language\n    ) {\n        $this->authorize('update', $document);\n\n        $document->languages()->syncWithoutDetaching([$language->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Document $document,\n        Language $language\n    ) {\n        $this->authorize('update', $document);\n\n        $document->languages()->detach($language);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentLanguagesController.php"},"\\tests\\Feature\\Api\\DocumentLanguagesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentLanguagesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_languages()\n    {\n        $document = Document::factory()->create();\n        $language = Language::factory()->create();\n\n        $document->languages()->attach($language);\n\n        $response = $this->getJson(\n            route('api.documents.languages.index', $document)\n        );\n\n        $response->assertOk()->assertSee($language->language);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_languages_to_document()\n    {\n        $document = Document::factory()->create();\n        $language = Language::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.languages.store', [$document, $language])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->languages()\n                ->where('languages.id', $language->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_languages_from_document()\n    {\n        $document = Document::factory()->create();\n        $language = Language::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.languages.store', [$document, $language])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->languages()\n                ->where('languages.id', $language->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentLanguagesTest.php"},"\\app\\Http\\Resources\\UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:1","path":"\\app\\Http\\Resources\\UserResource.php"},"\\app\\Http\\Resources\\UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:1","path":"\\app\\Http\\Resources\\UserCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentUsersController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\UserCollection;\n\nclass DocumentUsersController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $users = $document\n            ->users()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request, Document $document, User $user)\n    {\n        $this->authorize('update', $document);\n\n        $document->users()->syncWithoutDetaching([$user->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Document $document, User $user)\n    {\n        $this->authorize('update', $document);\n\n        $document->users()->detach($user);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentUsersController.php"},"\\tests\\Feature\\Api\\DocumentUsersTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentUsersTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_users()\n    {\n        $document = Document::factory()->create();\n        $user = User::factory()->create();\n\n        $document->users()->attach($user);\n\n        $response = $this->getJson(\n            route('api.documents.users.index', $document)\n        );\n\n        $response->assertOk()->assertSee($user->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_users_to_document()\n    {\n        $document = Document::factory()->create();\n        $user = User::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.users.store', [$document, $user])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->users()\n                ->where('users.id', $user->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_users_from_document()\n    {\n        $document = Document::factory()->create();\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.users.store', [$document, $user])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->users()\n                ->where('users.id', $user->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentUsersTest.php"},"\\app\\Http\\Resources\\TagResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass TagResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:5","path":"\\app\\Http\\Resources\\TagResource.php"},"\\app\\Http\\Resources\\TagCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass TagCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:5","path":"\\app\\Http\\Resources\\TagCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentTagsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\n\nclass DocumentTagsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $tags = $document\n            ->tags()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request, Document $document, Tag $tag)\n    {\n        $this->authorize('update', $document);\n\n        $document->tags()->syncWithoutDetaching([$tag->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Document $document, Tag $tag)\n    {\n        $this->authorize('update', $document);\n\n        $document->tags()->detach($tag);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentTagsController.php"},"\\tests\\Feature\\Api\\DocumentTagsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentTagsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_tags()\n    {\n        $document = Document::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $document->tags()->attach($tag);\n\n        $response = $this->getJson(\n            route('api.documents.tags.index', $document)\n        );\n\n        $response->assertOk()->assertSee($tag->label);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_tags_to_document()\n    {\n        $document = Document::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.tags.store', [$document, $tag])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->tags()\n                ->where('tags.id', $tag->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_tags_from_document()\n    {\n        $document = Document::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.tags.store', [$document, $tag])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->tags()\n                ->where('tags.id', $tag->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentTagsTest.php"},"\\app\\Http\\Resources\\CreatorResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CreatorResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:3","path":"\\app\\Http\\Resources\\CreatorResource.php"},"\\app\\Http\\Resources\\CreatorCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CreatorCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:3","path":"\\app\\Http\\Resources\\CreatorCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentCreatorsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Creator;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CreatorCollection;\n\nclass DocumentCreatorsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $creators = $document\n            ->creators()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CreatorCollection($creators);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Document $document,\n        Creator $creator\n    ) {\n        $this->authorize('update', $document);\n\n        $document->creators()->syncWithoutDetaching([$creator->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Document $document,\n        Creator $creator\n    ) {\n        $this->authorize('update', $document);\n\n        $document->creators()->detach($creator);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentCreatorsController.php"},"\\tests\\Feature\\Api\\DocumentCreatorsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Creator;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentCreatorsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_creators()\n    {\n        $document = Document::factory()->create();\n        $creator = Creator::factory()->create();\n\n        $document->creators()->attach($creator);\n\n        $response = $this->getJson(\n            route('api.documents.creators.index', $document)\n        );\n\n        $response->assertOk()->assertSee($creator->first_names);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_creators_to_document()\n    {\n        $document = Document::factory()->create();\n        $creator = Creator::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.creators.store', [$document, $creator])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->creators()\n                ->where('creators.id', $creator->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_creators_from_document()\n    {\n        $document = Document::factory()->create();\n        $creator = Creator::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.creators.store', [$document, $creator])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->creators()\n                ->where('creators.id', $creator->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentCreatorsTest.php"},"\\app\\Http\\Resources\\LocationResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass LocationResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:20","path":"\\app\\Http\\Resources\\LocationResource.php"},"\\app\\Http\\Resources\\LocationCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass LocationCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:20","path":"\\app\\Http\\Resources\\LocationCollection.php"},"\\app\\Http\\Controllers\\Api\\DocumentLocationsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse App\\Models\\Location;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\LocationCollection;\n\nclass DocumentLocationsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Document $document)\n    {\n        $this->authorize('view', $document);\n\n        $search = $request->get('search', '');\n\n        $locations = $document\n            ->locations()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new LocationCollection($locations);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Document $document,\n        Location $location\n    ) {\n        $this->authorize('update', $document);\n\n        $document->locations()->syncWithoutDetaching([$location->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Document $document\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Document $document,\n        Location $location\n    ) {\n        $this->authorize('update', $document);\n\n        $document->locations()->detach($location);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\DocumentLocationsController.php"},"\\tests\\Feature\\Api\\DocumentLocationsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse App\\Models\\Location;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass DocumentLocationsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_document_locations()\n    {\n        $document = Document::factory()->create();\n        $location = Location::factory()->create();\n\n        $document->locations()->attach($location);\n\n        $response = $this->getJson(\n            route('api.documents.locations.index', $document)\n        );\n\n        $response->assertOk()->assertSee($location->continent);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_locations_to_document()\n    {\n        $document = Document::factory()->create();\n        $location = Location::factory()->create();\n\n        $response = $this->postJson(\n            route('api.documents.locations.store', [$document, $location])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $document\n                ->locations()\n                ->where('locations.id', $location->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_locations_from_document()\n    {\n        $document = Document::factory()->create();\n        $location = Location::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.documents.locations.store', [$document, $location])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $document\n                ->locations()\n                ->where('locations.id', $location->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\DocumentLocationsTest.php"},"\\app\\Http\\Controllers\\Api\\CollectionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Collection;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CollectionResource;\nuse App\\Http\\Resources\\CollectionCollection;\n\nclass CollectionController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Collection::class);\n\n        $search = $request->get('search', '');\n\n        $collections = Collection::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CollectionCollection($collections);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Collection::class);\n\n        $validated = $request->validate([\n            'slug' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'shortname' => ['required', 'max:255', 'string'],\n        ]);\n\n        $collection = Collection::create($validated);\n\n        return new CollectionResource($collection);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Collection $collection)\n    {\n        $this->authorize('view', $collection);\n\n        return new CollectionResource($collection);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Collection $collection)\n    {\n        $this->authorize('update', $collection);\n\n        $validated = $request->validate([\n            'slug' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'shortname' => ['required', 'max:255', 'string'],\n        ]);\n\n        $collection->update($validated);\n\n        return new CollectionResource($collection);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Collection $collection)\n    {\n        $this->authorize('delete', $collection);\n\n        $collection->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Controllers\\Api\\CollectionController.php"},"\\tests\\Feature\\Api\\CollectionTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Collection;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CollectionTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_collections_list()\n    {\n        $collections = Collection::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.collections.index'));\n\n        $response->assertOk()->assertSee($collections[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_collection()\n    {\n        $data = Collection::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.collections.store'), $data);\n\n        $this->assertDatabaseHas('collections', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $data = [\n            'slug' => $this->faker->text(255),\n            'name' => $this->faker->text,\n            'shortname' => $this->faker->text(255),\n        ];\n\n        $response = $this->putJson(\n            route('api.collections.update', $collection),\n            $data\n        );\n\n        $data['id'] = $collection->id;\n\n        $this->assertDatabaseHas('collections', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_collection()\n    {\n        $collection = Collection::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.collections.destroy', $collection)\n        );\n\n        $this->assertDeleted($collection);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:2","path":"\\tests\\Feature\\Api\\CollectionTest.php"},"\\app\\Http\\Controllers\\Api\\CollectionDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Document;\nuse App\\Models\\Collection;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass CollectionDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Collection $collection)\n    {\n        $this->authorize('view', $collection);\n\n        $search = $request->get('search', '');\n\n        $documents = $collection\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Collection $collection,\n        Document $document\n    ) {\n        $this->authorize('update', $collection);\n\n        $collection->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Collection $collection\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Collection $collection,\n        Document $document\n    ) {\n        $this->authorize('update', $collection);\n\n        $collection->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Controllers\\Api\\CollectionDocumentsController.php"},"\\tests\\Feature\\Api\\CollectionDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse App\\Models\\Collection;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CollectionDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_collection_documents()\n    {\n        $collection = Collection::factory()->create();\n        $document = Document::factory()->create();\n\n        $collection->documents()->attach($document);\n\n        $response = $this->getJson(\n            route('api.collections.documents.index', $collection)\n        );\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_collection()\n    {\n        $collection = Collection::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.collections.documents.store', [$collection, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $collection\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_collection()\n    {\n        $collection = Collection::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.collections.documents.store', [$collection, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $collection\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:2","path":"\\tests\\Feature\\Api\\CollectionDocumentsTest.php"},"\\app\\Http\\Controllers\\Api\\TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\TagResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\n\nclass TagController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validate([\n            'label' => ['required', 'max:255', 'string'],\n        ]);\n\n        $tag = Tag::create($validated);\n\n        return new TagResource($tag);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Tag $tag)\n    {\n        $this->authorize('view', $tag);\n\n        return new TagResource($tag);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Tag $tag)\n    {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validate([\n            'label' => ['required', 'max:255', 'string'],\n        ]);\n\n        $tag->update($validated);\n\n        return new TagResource($tag);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Tag $tag)\n    {\n        $this->authorize('delete', $tag);\n\n        $tag->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:3","path":"\\app\\Http\\Controllers\\Api\\TagController.php"},"\\tests\\Feature\\Api\\TagTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_tags_list()\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.tags.index'));\n\n        $response->assertOk()->assertSee($tags[0]->label);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag()\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.tags.store'), $data);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'label' => $this->faker->text(255),\n        ];\n\n        $response = $this->putJson(route('api.tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag()\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->deleteJson(route('api.tags.destroy', $tag));\n\n        $this->assertDeleted($tag);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:3","path":"\\tests\\Feature\\Api\\TagTest.php"},"\\app\\Http\\Controllers\\Api\\TagDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass TagDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Tag $tag)\n    {\n        $this->authorize('view', $tag);\n\n        $search = $request->get('search', '');\n\n        $documents = $tag\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request, Tag $tag, Document $document)\n    {\n        $this->authorize('update', $tag);\n\n        $tag->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Tag $tag\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Tag $tag, Document $document)\n    {\n        $this->authorize('update', $tag);\n\n        $tag->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:3","path":"\\app\\Http\\Controllers\\Api\\TagDocumentsController.php"},"\\tests\\Feature\\Api\\TagDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_tag_documents()\n    {\n        $tag = Tag::factory()->create();\n        $document = Document::factory()->create();\n\n        $tag->documents()->attach($document);\n\n        $response = $this->getJson(route('api.tags.documents.index', $tag));\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_tag()\n    {\n        $tag = Tag::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.tags.documents.store', [$tag, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $tag\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_tag()\n    {\n        $tag = Tag::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.tags.documents.store', [$tag, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $tag\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:3","path":"\\tests\\Feature\\Api\\TagDocumentsTest.php"},"\\app\\Http\\Controllers\\Api\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\n\nclass UserController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validate([\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users', 'email'],\n            'password' => ['required'],\n            'status' => ['required', 'in:contributor,editor,admin'],\n        ]);\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, User $user)\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validate([\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users', 'email'],\n            'status' => ['required', 'in:contributor,editor,admin'],\n        ]);\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, User $user)\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:4","path":"\\app\\Http\\Controllers\\Api\\UserController.php"},"\\tests\\Feature\\Api\\UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list()\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user()\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user()\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name,\n            'email' => $this->faker->email,\n            'status' => 'Contributor',\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertDeleted($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:4","path":"\\tests\\Feature\\Api\\UserTest.php"},"\\app\\Http\\Controllers\\Api\\UserDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass UserDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, User $user)\n    {\n        $this->authorize('view', $user);\n\n        $search = $request->get('search', '');\n\n        $documents = $user\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request, User $user, Document $document)\n    {\n        $this->authorize('update', $user);\n\n        $user->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, User $user, Document $document)\n    {\n        $this->authorize('update', $user);\n\n        $user->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:4","path":"\\app\\Http\\Controllers\\Api\\UserDocumentsController.php"},"\\tests\\Feature\\Api\\UserDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_documents()\n    {\n        $user = User::factory()->create();\n        $document = Document::factory()->create();\n\n        $user->documents()->attach($document);\n\n        $response = $this->getJson(route('api.users.documents.index', $user));\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_user()\n    {\n        $user = User::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.users.documents.store', [$user, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $user\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_user()\n    {\n        $user = User::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.users.documents.store', [$user, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $user\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:4","path":"\\tests\\Feature\\Api\\UserDocumentsTest.php"},"\\app\\Http\\Controllers\\Api\\LanguageController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\LanguageResource;\nuse App\\Http\\Resources\\LanguageCollection;\n\nclass LanguageController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Language::class);\n\n        $search = $request->get('search', '');\n\n        $languages = Language::search($search)\n            ->latest()\n            ->paginate();\n\n        return new LanguageCollection($languages);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Language::class);\n\n        $validated = $request->validate([\n            'language' => ['required', 'max:255', 'string'],\n            'language_tag' => ['required', 'max:255'],\n        ]);\n\n        $language = Language::create($validated);\n\n        return new LanguageResource($language);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Language $language)\n    {\n        $this->authorize('view', $language);\n\n        return new LanguageResource($language);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Language $language)\n    {\n        $this->authorize('update', $language);\n\n        $validated = $request->validate([\n            'language' => ['required', 'max:255', 'string'],\n            'language_tag' => ['required', 'max:255'],\n        ]);\n\n        $language->update($validated);\n\n        return new LanguageResource($language);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Language $language)\n    {\n        $this->authorize('delete', $language);\n\n        $language->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:5","path":"\\app\\Http\\Controllers\\Api\\LanguageController.php"},"\\tests\\Feature\\Api\\LanguageTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_languages_list()\n    {\n        $languages = Language::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.languages.index'));\n\n        $response->assertOk()->assertSee($languages[0]->language);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language()\n    {\n        $data = Language::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.languages.store'), $data);\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_language()\n    {\n        $language = Language::factory()->create();\n\n        $data = [\n            'language' => $this->faker->text(255),\n            'language_tag' => $this->faker->word(255),\n        ];\n\n        $response = $this->putJson(\n            route('api.languages.update', $language),\n            $data\n        );\n\n        $data['id'] = $language->id;\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_language()\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.languages.destroy', $language)\n        );\n\n        $this->assertDeleted($language);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:5","path":"\\tests\\Feature\\Api\\LanguageTest.php"},"\\app\\Http\\Controllers\\Api\\LanguageDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass LanguageDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Language $language)\n    {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $documents = $language\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Language $language,\n        Document $document\n    ) {\n        $this->authorize('update', $language);\n\n        $language->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Language $language\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Language $language,\n        Document $document\n    ) {\n        $this->authorize('update', $language);\n\n        $language->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:5","path":"\\app\\Http\\Controllers\\Api\\LanguageDocumentsController.php"},"\\tests\\Feature\\Api\\LanguageDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_documents()\n    {\n        $language = Language::factory()->create();\n        $document = Document::factory()->create();\n\n        $language->documents()->attach($document);\n\n        $response = $this->getJson(\n            route('api.languages.documents.index', $language)\n        );\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_language()\n    {\n        $language = Language::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.languages.documents.store', [$language, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $language\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_language()\n    {\n        $language = Language::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.languages.documents.store', [$language, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $language\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:5","path":"\\tests\\Feature\\Api\\LanguageDocumentsTest.php"},"\\app\\Http\\Controllers\\Api\\LocationController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Location;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\LocationResource;\nuse App\\Http\\Resources\\LocationCollection;\n\nclass LocationController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Location::class);\n\n        $search = $request->get('search', '');\n\n        $locations = Location::search($search)\n            ->latest()\n            ->paginate();\n\n        return new LocationCollection($locations);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Location::class);\n\n        $validated = $request->validate([\n            'continent' => ['required', 'max:255', 'string'],\n            'country' => ['required', 'max:255', 'string'],\n            'locality' => ['required', 'max:255', 'string'],\n        ]);\n\n        $location = Location::create($validated);\n\n        return new LocationResource($location);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Location $location)\n    {\n        $this->authorize('view', $location);\n\n        return new LocationResource($location);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Location $location)\n    {\n        $this->authorize('update', $location);\n\n        $validated = $request->validate([\n            'continent' => ['required', 'max:255', 'string'],\n            'country' => ['required', 'max:255', 'string'],\n            'locality' => ['required', 'max:255', 'string'],\n        ]);\n\n        $location->update($validated);\n\n        return new LocationResource($location);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Location $location)\n    {\n        $this->authorize('delete', $location);\n\n        $location->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:6","path":"\\app\\Http\\Controllers\\Api\\LocationController.php"},"\\tests\\Feature\\Api\\LocationTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Location;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LocationTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_locations_list()\n    {\n        $locations = Location::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.locations.index'));\n\n        $response->assertOk()->assertSee($locations[0]->continent);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_location()\n    {\n        $data = Location::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.locations.store'), $data);\n\n        $this->assertDatabaseHas('locations', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_location()\n    {\n        $location = Location::factory()->create();\n\n        $data = [\n            'continent' => $this->faker->text(255),\n            'country' => $this->faker->country,\n            'locality' => $this->faker->text(255),\n        ];\n\n        $response = $this->putJson(\n            route('api.locations.update', $location),\n            $data\n        );\n\n        $data['id'] = $location->id;\n\n        $this->assertDatabaseHas('locations', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_location()\n    {\n        $location = Location::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.locations.destroy', $location)\n        );\n\n        $this->assertDeleted($location);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:6","path":"\\tests\\Feature\\Api\\LocationTest.php"},"\\app\\Http\\Controllers\\Api\\LocationDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Location;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass LocationDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Location $location)\n    {\n        $this->authorize('view', $location);\n\n        $search = $request->get('search', '');\n\n        $documents = $location\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Location $location,\n        Document $document\n    ) {\n        $this->authorize('update', $location);\n\n        $location->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Location $location\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Location $location,\n        Document $document\n    ) {\n        $this->authorize('update', $location);\n\n        $location->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:6","path":"\\app\\Http\\Controllers\\Api\\LocationDocumentsController.php"},"\\tests\\Feature\\Api\\LocationDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Location;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LocationDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_location_documents()\n    {\n        $location = Location::factory()->create();\n        $document = Document::factory()->create();\n\n        $location->documents()->attach($document);\n\n        $response = $this->getJson(\n            route('api.locations.documents.index', $location)\n        );\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_location()\n    {\n        $location = Location::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.locations.documents.store', [$location, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $location\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_location()\n    {\n        $location = Location::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.locations.documents.store', [$location, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $location\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:6","path":"\\tests\\Feature\\Api\\LocationDocumentsTest.php"},"\\app\\Http\\Controllers\\Api\\CreatorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Creator;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CreatorResource;\nuse App\\Http\\Resources\\CreatorCollection;\n\nclass CreatorController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Creator::class);\n\n        $search = $request->get('search', '');\n\n        $creators = Creator::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CreatorCollection($creators);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Creator::class);\n\n        $validated = $request->validate([\n            'first_names' => ['nullable', 'max:255', 'string'],\n            'last_names' => ['nullable', 'max:255', 'string'],\n            'author' => ['nullable', 'boolean', 'boolean'],\n            'editor' => ['nullable', 'boolean', 'boolean'],\n            'translator' => ['nullable', 'boolean', 'boolean'],\n            'compiler' => ['nullable', 'boolean', 'boolean'],\n        ]);\n\n        $creator = Creator::create($validated);\n\n        return new CreatorResource($creator);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Creator $creator)\n    {\n        $this->authorize('view', $creator);\n\n        return new CreatorResource($creator);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Creator $creator)\n    {\n        $this->authorize('update', $creator);\n\n        $validated = $request->validate([\n            'first_names' => ['nullable', 'max:255', 'string'],\n            'last_names' => ['nullable', 'max:255', 'string'],\n            'author' => ['nullable', 'boolean', 'boolean'],\n            'editor' => ['nullable', 'boolean', 'boolean'],\n            'translator' => ['nullable', 'boolean', 'boolean'],\n            'compiler' => ['nullable', 'boolean', 'boolean'],\n        ]);\n\n        $creator->update($validated);\n\n        return new CreatorResource($creator);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Creator $creator)\n    {\n        $this->authorize('delete', $creator);\n\n        $creator->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:7","path":"\\app\\Http\\Controllers\\Api\\CreatorController.php"},"\\tests\\Feature\\Api\\CreatorTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Creator;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CreatorTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_creators_list()\n    {\n        $creators = Creator::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.creators.index'));\n\n        $response->assertOk()->assertSee($creators[0]->first_names);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_creator()\n    {\n        $data = Creator::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.creators.store'), $data);\n\n        $this->assertDatabaseHas('creators', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $data = [\n            'first_names' => $this->faker->text(255),\n            'last_names' => $this->faker->text(255),\n            'author' => $this->faker->boolean,\n            'editor' => $this->faker->boolean,\n            'translator' => $this->faker->boolean,\n            'compiler' => $this->faker->boolean,\n        ];\n\n        $response = $this->putJson(\n            route('api.creators.update', $creator),\n            $data\n        );\n\n        $data['id'] = $creator->id;\n\n        $this->assertDatabaseHas('creators', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_creator()\n    {\n        $creator = Creator::factory()->create();\n\n        $response = $this->deleteJson(route('api.creators.destroy', $creator));\n\n        $this->assertDeleted($creator);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:7","path":"\\tests\\Feature\\Api\\CreatorTest.php"},"\\app\\Http\\Controllers\\Api\\CreatorDocumentsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Creator;\nuse App\\Models\\Document;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DocumentCollection;\n\nclass CreatorDocumentsController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request, Creator $creator)\n    {\n        $this->authorize('view', $creator);\n\n        $search = $request->get('search', '');\n\n        $documents = $creator\n            ->documents()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new DocumentCollection($documents);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(\n        Request $request,\n        Creator $creator,\n        Document $document\n    ) {\n        $this->authorize('update', $creator);\n\n        $creator->documents()->syncWithoutDetaching([$document->id]);\n\n        return response()->noContent();\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Creator $creator\n     * @param \\App\\Models\\Document $document\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(\n        Request $request,\n        Creator $creator,\n        Document $document\n    ) {\n        $this->authorize('update', $creator);\n\n        $creator->documents()->detach($document);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:7","path":"\\app\\Http\\Controllers\\Api\\CreatorDocumentsController.php"},"\\tests\\Feature\\Api\\CreatorDocumentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Creator;\nuse App\\Models\\Document;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CreatorDocumentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_creator_documents()\n    {\n        $creator = Creator::factory()->create();\n        $document = Document::factory()->create();\n\n        $creator->documents()->attach($document);\n\n        $response = $this->getJson(\n            route('api.creators.documents.index', $creator)\n        );\n\n        $response->assertOk()->assertSee($document->slug);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_documents_to_creator()\n    {\n        $creator = Creator::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->postJson(\n            route('api.creators.documents.store', [$creator, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $creator\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_documents_from_creator()\n    {\n        $creator = Creator::factory()->create();\n        $document = Document::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.creators.documents.store', [$creator, $document])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $creator\n                ->documents()\n                ->where('documents.id', $document->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:7","path":"\\tests\\Feature\\Api\\CreatorDocumentsTest.php"},"\\app\\Http\\Resources\\SearchResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass SearchResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:6","path":"\\app\\Http\\Resources\\SearchResource.php"},"\\app\\Http\\Resources\\SearchCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass SearchCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:6","path":"\\app\\Http\\Resources\\SearchCollection.php"},"\\app\\Http\\Controllers\\Api\\SearchController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Search;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\SearchResource;\nuse App\\Http\\Resources\\SearchCollection;\n\nclass SearchController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Search::class);\n\n        $search = $request->get('search', '');\n\n        $search = Search::search($search)\n            ->latest()\n            ->paginate();\n\n        return new SearchCollection($search);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Search::class);\n\n        $validated = $request->validate([\n            'query' => ['nullable', 'max:255', 'string'],\n        ]);\n\n        $search = Search::create($validated);\n\n        return new SearchResource($search);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Search $search)\n    {\n        $this->authorize('view', $search);\n\n        return new SearchResource($search);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Search $search)\n    {\n        $this->authorize('update', $search);\n\n        $validated = $request->validate([\n            'query' => ['nullable', 'max:255', 'string'],\n        ]);\n\n        $search->update($validated);\n\n        return new SearchResource($search);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Search $search\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Search $search)\n    {\n        $this->authorize('delete', $search);\n\n        $search->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:8","path":"\\app\\Http\\Controllers\\Api\\SearchController.php"},"\\tests\\Feature\\Api\\SearchTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Search;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass SearchTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_search_list()\n    {\n        $search = Search::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.search.index'));\n\n        $response->assertOk()->assertSee($search[0]->query);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_search()\n    {\n        $data = Search::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.search.store'), $data);\n\n        $this->assertDatabaseHas('searches', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_search()\n    {\n        $search = Search::factory()->create();\n\n        $data = [\n            'query' => $this->faker->text,\n        ];\n\n        $response = $this->putJson(route('api.search.update', $search), $data);\n\n        $data['id'] = $search->id;\n\n        $this->assertDatabaseHas('searches', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_search()\n    {\n        $search = Search::factory()->create();\n\n        $response = $this->deleteJson(route('api.search.destroy', $search));\n\n        $this->assertDeleted($search);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:8","path":"\\tests\\Feature\\Api\\SearchTest.php"},"\\resources\\lang\\en\\crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'documents' => [\n        'name' => 'Documents',\n        'index_title' => 'Documents List',\n        'create_title' => 'Add A Document',\n        'edit_title' => 'Edit A Document',\n        'show_title' => 'Show A Document',\n        'inputs' => [\n            'slug' => 'Slug',\n            'is_pdf' => 'Is Pdf',\n            'is_audio' => 'Is Audio',\n            'is_image' => 'Is Image',\n            'is_video' => 'Is Video',\n            'is_html' => 'Is Html',\n            'file_url' => 'File Url',\n            'blurb' => 'Blurb',\n            'content_html' => 'Content Html',\n            'content_size' => 'Content Size',\n            'edit_quality' => 'Edit Quality',\n            'formatting_quality' => 'Formatting Quality',\n            'publication_permission' => 'Publication Permission',\n            'notes' => 'Notes',\n            'input_type' => 'Input Type',\n            'input_by' => 'Input By',\n            'input_date' => 'Input Date',\n            'proof_by' => 'Proof By',\n            'proof_date' => 'Proof Date',\n            'format_by' => 'Format By',\n            'format_date' => 'Format Date',\n            'post_by' => 'Post By',\n            'post_date' => 'Post Date',\n            'publication_approval' => 'Publication Approval',\n            'views' => 'Views',\n        ],\n    ],\n\n    'collections' => [\n        'name' => 'Collections',\n        'index_title' => 'Collections List',\n        'create_title' => 'Create Collection',\n        'edit_title' => 'Edit Collection',\n        'show_title' => 'Show Collection',\n        'inputs' => [\n            'slug' => 'Slug',\n            'name' => 'Name',\n            'shortname' => 'Shortname',\n        ],\n    ],\n\n    'tags' => [\n        'name' => 'Tags',\n        'index_title' => 'Tags List',\n        'create_title' => 'Create Tag',\n        'edit_title' => 'Edit Tag',\n        'show_title' => 'Show Tag',\n        'inputs' => [\n            'label' => 'Label',\n        ],\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n            'status' => 'Status',\n        ],\n    ],\n\n    'languages' => [\n        'name' => 'Languages',\n        'index_title' => 'Languages List',\n        'create_title' => 'Create Language',\n        'edit_title' => 'Edit Language',\n        'show_title' => 'Show Language',\n        'inputs' => [\n            'language' => 'Language',\n            'language_tag' => 'Language Tag',\n        ],\n    ],\n\n    'locations' => [\n        'name' => 'Locations',\n        'index_title' => 'Locations List',\n        'create_title' => 'Create Location',\n        'edit_title' => 'Edit Location',\n        'show_title' => 'Show Location',\n        'inputs' => [\n            'continent' => 'Continent',\n            'country' => 'Country',\n            'locality' => 'Locality',\n        ],\n    ],\n\n    'creators' => [\n        'name' => 'Creators',\n        'index_title' => 'Creators List',\n        'create_title' => 'Create Creator',\n        'edit_title' => 'Edit Creator',\n        'show_title' => 'Show Creator',\n        'inputs' => [\n            'first_names' => 'First Names',\n            'last_names' => 'Last Names',\n            'author' => 'Author',\n            'editor' => 'Editor',\n            'translator' => 'Translator',\n            'compiler' => 'Compiler',\n        ],\n    ],\n\n    'searches' => [\n        'name' => 'Searches',\n        'index_title' => 'Searches List',\n        'create_title' => 'Create Search',\n        'edit_title' => 'Edit Search',\n        'show_title' => 'Show Search',\n        'inputs' => [\n            'query' => 'Query',\n        ],\n    ],\n];\n","module":"base","path":"\\resources\\lang\\en\\crud.php"},"\\routes\\api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\TagController;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\SearchController;\nuse App\\Http\\Controllers\\Api\\CreatorController;\nuse App\\Http\\Controllers\\Api\\DocumentController;\nuse App\\Http\\Controllers\\Api\\LanguageController;\nuse App\\Http\\Controllers\\Api\\LocationController;\nuse App\\Http\\Controllers\\Api\\CollectionController;\nuse App\\Http\\Controllers\\Api\\DocumentTagsController;\nuse App\\Http\\Controllers\\Api\\TagDocumentsController;\nuse App\\Http\\Controllers\\Api\\DocumentUsersController;\nuse App\\Http\\Controllers\\Api\\UserDocumentsController;\nuse App\\Http\\Controllers\\Api\\DocumentEditionsController;\nuse App\\Http\\Controllers\\Api\\DocumentCreatorsController;\nuse App\\Http\\Controllers\\Api\\CreatorDocumentsController;\nuse App\\Http\\Controllers\\Api\\DocumentLanguagesController;\nuse App\\Http\\Controllers\\Api\\DocumentLocationsController;\nuse App\\Http\\Controllers\\Api\\LanguageDocumentsController;\nuse App\\Http\\Controllers\\Api\\LocationDocumentsController;\nuse App\\Http\\Controllers\\Api\\DocumentCollectionsController;\nuse App\\Http\\Controllers\\Api\\CollectionDocumentsController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('documents', DocumentController::class);\n\n        // Document Editions\n        Route::get('/documents/{document}/editions', [\n            DocumentEditionsController::class,\n            'index',\n        ])->name('documents.editions.index');\n        Route::post('/documents/{document}/editions', [\n            DocumentEditionsController::class,\n            'store',\n        ])->name('documents.editions.store');\n\n        // Document Collections\n        Route::get('/documents/{document}/collections', [\n            DocumentCollectionsController::class,\n            'index',\n        ])->name('documents.collections.index');\n        Route::post('/documents/{document}/collections/{collection}', [\n            DocumentCollectionsController::class,\n            'store',\n        ])->name('documents.collections.store');\n        Route::delete('/documents/{document}/collections/{collection}', [\n            DocumentCollectionsController::class,\n            'destroy',\n        ])->name('documents.collections.destroy');\n\n        // Document Languages\n        Route::get('/documents/{document}/languages', [\n            DocumentLanguagesController::class,\n            'index',\n        ])->name('documents.languages.index');\n        Route::post('/documents/{document}/languages/{language}', [\n            DocumentLanguagesController::class,\n            'store',\n        ])->name('documents.languages.store');\n        Route::delete('/documents/{document}/languages/{language}', [\n            DocumentLanguagesController::class,\n            'destroy',\n        ])->name('documents.languages.destroy');\n\n        // Document Users\n        Route::get('/documents/{document}/users', [\n            DocumentUsersController::class,\n            'index',\n        ])->name('documents.users.index');\n        Route::post('/documents/{document}/users/{user}', [\n            DocumentUsersController::class,\n            'store',\n        ])->name('documents.users.store');\n        Route::delete('/documents/{document}/users/{user}', [\n            DocumentUsersController::class,\n            'destroy',\n        ])->name('documents.users.destroy');\n\n        // Document Tags\n        Route::get('/documents/{document}/tags', [\n            DocumentTagsController::class,\n            'index',\n        ])->name('documents.tags.index');\n        Route::post('/documents/{document}/tags/{tag}', [\n            DocumentTagsController::class,\n            'store',\n        ])->name('documents.tags.store');\n        Route::delete('/documents/{document}/tags/{tag}', [\n            DocumentTagsController::class,\n            'destroy',\n        ])->name('documents.tags.destroy');\n\n        // Document Creators\n        Route::get('/documents/{document}/creators', [\n            DocumentCreatorsController::class,\n            'index',\n        ])->name('documents.creators.index');\n        Route::post('/documents/{document}/creators/{creator}', [\n            DocumentCreatorsController::class,\n            'store',\n        ])->name('documents.creators.store');\n        Route::delete('/documents/{document}/creators/{creator}', [\n            DocumentCreatorsController::class,\n            'destroy',\n        ])->name('documents.creators.destroy');\n\n        // Document Locations\n        Route::get('/documents/{document}/locations', [\n            DocumentLocationsController::class,\n            'index',\n        ])->name('documents.locations.index');\n        Route::post('/documents/{document}/locations/{location}', [\n            DocumentLocationsController::class,\n            'store',\n        ])->name('documents.locations.store');\n        Route::delete('/documents/{document}/locations/{location}', [\n            DocumentLocationsController::class,\n            'destroy',\n        ])->name('documents.locations.destroy');\n\n        Route::apiResource('collections', CollectionController::class);\n\n        // Collection Documents\n        Route::get('/collections/{collection}/documents', [\n            CollectionDocumentsController::class,\n            'index',\n        ])->name('collections.documents.index');\n        Route::post('/collections/{collection}/documents/{document}', [\n            CollectionDocumentsController::class,\n            'store',\n        ])->name('collections.documents.store');\n        Route::delete('/collections/{collection}/documents/{document}', [\n            CollectionDocumentsController::class,\n            'destroy',\n        ])->name('collections.documents.destroy');\n\n        Route::apiResource('tags', TagController::class);\n\n        // Tag Documents\n        Route::get('/tags/{tag}/documents', [\n            TagDocumentsController::class,\n            'index',\n        ])->name('tags.documents.index');\n        Route::post('/tags/{tag}/documents/{document}', [\n            TagDocumentsController::class,\n            'store',\n        ])->name('tags.documents.store');\n        Route::delete('/tags/{tag}/documents/{document}', [\n            TagDocumentsController::class,\n            'destroy',\n        ])->name('tags.documents.destroy');\n\n        Route::apiResource('users', UserController::class);\n\n        // User Documents\n        Route::get('/users/{user}/documents', [\n            UserDocumentsController::class,\n            'index',\n        ])->name('users.documents.index');\n        Route::post('/users/{user}/documents/{document}', [\n            UserDocumentsController::class,\n            'store',\n        ])->name('users.documents.store');\n        Route::delete('/users/{user}/documents/{document}', [\n            UserDocumentsController::class,\n            'destroy',\n        ])->name('users.documents.destroy');\n\n        Route::apiResource('languages', LanguageController::class);\n\n        // Language Documents\n        Route::get('/languages/{language}/documents', [\n            LanguageDocumentsController::class,\n            'index',\n        ])->name('languages.documents.index');\n        Route::post('/languages/{language}/documents/{document}', [\n            LanguageDocumentsController::class,\n            'store',\n        ])->name('languages.documents.store');\n        Route::delete('/languages/{language}/documents/{document}', [\n            LanguageDocumentsController::class,\n            'destroy',\n        ])->name('languages.documents.destroy');\n\n        Route::apiResource('locations', LocationController::class);\n\n        // Location Documents\n        Route::get('/locations/{location}/documents', [\n            LocationDocumentsController::class,\n            'index',\n        ])->name('locations.documents.index');\n        Route::post('/locations/{location}/documents/{document}', [\n            LocationDocumentsController::class,\n            'store',\n        ])->name('locations.documents.store');\n        Route::delete('/locations/{location}/documents/{document}', [\n            LocationDocumentsController::class,\n            'destroy',\n        ])->name('locations.documents.destroy');\n\n        Route::apiResource('creators', CreatorController::class);\n\n        // Creator Documents\n        Route::get('/creators/{creator}/documents', [\n            CreatorDocumentsController::class,\n            'index',\n        ])->name('creators.documents.index');\n        Route::post('/creators/{creator}/documents/{document}', [\n            CreatorDocumentsController::class,\n            'store',\n        ])->name('creators.documents.store');\n        Route::delete('/creators/{creator}/documents/{document}', [\n            CreatorDocumentsController::class,\n            'destroy',\n        ])->name('creators.documents.destroy');\n\n        Route::apiResource('searches', SearchController::class);\n    });\n","module":"base","path":"\\routes\\api.php"},"\\routes\\web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\TagController;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\SearchController;\nuse App\\Http\\Controllers\\CreatorController;\nuse App\\Http\\Controllers\\DocumentController;\nuse App\\Http\\Controllers\\LanguageController;\nuse App\\Http\\Controllers\\LocationController;\nuse App\\Http\\Controllers\\CollectionController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::prefix('/')\n    ->middleware(['auth:sanctum', 'verified'])\n    ->group(function () {\n        Route::resource('documents', DocumentController::class);\n        Route::resource('collections', CollectionController::class);\n        Route::resource('tags', TagController::class);\n        Route::resource('users', UserController::class);\n        Route::resource('languages', LanguageController::class);\n        Route::resource('locations', LocationController::class);\n        Route::resource('creators', CreatorController::class);\n        Route::resource('searches', SearchController::class);\n    });\n","module":"base","path":"\\routes\\web.php"},"\\resources\\views\\components\\form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action'\n])\n\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\n    <div>\n        <button type=\"submit\" {{ $attributes }}>\n            {{ $slot }}\n        </button>\n    </div>\n</x-form>","module":"base","path":"\\resources\\views\\components\\form-button.blade.php"},"\\resources\\views\\components\\form.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action',\n    'hasFiles' => false,\n    'model'\n])\n\n@php\n    $method = strtoupper($method);\n@endphp\n\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\n    @csrf\n    @if (!in_array($method, ['POST', 'GET']))\n        @method($method)\n    @endif\n    {{ $slot }}\n</form>","module":"base","path":"\\resources\\views\\components\\form.blade.php"},"\\resources\\views\\components\\inputs\\basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'type' => 'text',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<input\n    type=\"{{ $type }}\"\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    value=\"{{ old($name, $value ?? '') }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    {{ $min ? \"min={$min}\" : '' }}\n    {{ $max ? \"max={$max}\" : '' }}\n    {{ $step ? \"step={$step}\" : '' }}\n    autocomplete=\"off\"\n>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\basic.blade.php"},"\\resources\\views\\components\\inputs\\checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'id',\n    'name',\n    'label',\n    'value',\n    'checked' => false,\n    'addHiddenValue' => true,\n    'hiddenValue' => 0,\n])\n\n@php\n    $checked = !! $checked\n@endphp\n\n<div class=\"relative block mb-2\">\n\n    {{-- Adds a hidden default value to be send if checked is false --}}\n    @if($addHiddenValue)\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\n    @endif\n\n    <input\n        type=\"checkbox\"\n        id=\"{{ $id ?? $name }}\"\n        name=\"{{ $name }}\"\n        value=\"{{ $value ?? 1 }}\"\n        {{ $checked ? 'checked' : '' }}\n        {{ $attributes->merge(['class' => '']) }}\n    >\n\n    @if($label ?? null)\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $name }}\">\n            {{ $label }}\n        </label>\n    @endif\n</div>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\checkbox.blade.php"},"\\resources\\views\\components\\inputs\\date.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\date.blade.php"},"\\resources\\views\\components\\inputs\\datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\datetime.blade.php"},"\\resources\\views\\components\\inputs\\email.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\email.blade.php"},"\\resources\\views\\components\\inputs\\group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\n    {{ $slot }}\n</div>","module":"base","path":"\\resources\\views\\components\\inputs\\group.blade.php"},"\\resources\\views\\components\\inputs\\hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'value',\n])\n\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\hidden.blade.php"},"\\resources\\views\\components\\inputs\\number.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\number.blade.php"},"\\resources\\views\\components\\inputs\\partials\\error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\error.blade.php"},"\\resources\\views\\components\\inputs\\partials\\label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\n    {{ $label }}\n</label>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\label.blade.php"},"\\resources\\views\\components\\inputs\\password.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value' => '',\n])\n\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\password.blade.php"},"\\resources\\views\\components\\inputs\\select.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'type' => 'text',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<select\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{ $slot }}</select>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\select.blade.php"},"\\resources\\views\\components\\inputs\\text.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\text.blade.php"},"\\resources\\views\\components\\inputs\\textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<textarea \n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\" \n    rows=\"3\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{$slot}}</textarea>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\textarea.blade.php"},"\\resources\\views\\components\\dropdown-link.blade.php":{"deleteOnGeneration":true,"content":"<a {{ $attributes->merge(['class' => 'block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\n","module":"base","path":"\\resources\\views\\components\\dropdown-link.blade.php"},"\\resources\\views\\components\\dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])\n\n@php\nswitch ($align) {\n    case 'left':\n        $alignmentClasses = 'origin-top-left left-0';\n        break;\n    case 'top':\n        $alignmentClasses = 'origin-top';\n        break;\n    case 'right':\n    default:\n        $alignmentClasses = 'origin-top-right right-0';\n        break;\n}\n\nswitch ($width) {\n    case '48':\n        $width = 'w-48';\n        break;\n}\n@endphp\n\n<div class=\"relative\" x-data=\"{ open: false }\" @click.away=\"open = false\" @close.stop=\"open = false\">\n    <div @click=\"open = ! open\">\n        {{ $trigger }}\n    </div>\n\n    <div x-show=\"open\"\n            x-transition:enter=\"transition ease-out duration-200\"\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\n            x-transition:leave=\"transition ease-in duration-75\"\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}\"\n            style=\"display: none;\"\n            @click=\"open = false\">\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\n            {{ $content }}\n        </div>\n    </div>\n</div>\n","module":"base","path":"\\resources\\views\\components\\dropdown.blade.php"},"\\resources\\views\\components\\nav-dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'title'\n])\n\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <x-dropdown align=\"right\" width=\"48\">\n        <x-slot name=\"trigger\">\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\n                <div>{{ $title ?? '' }}</div>\n\n                <div class=\"ml-1\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n            </button>\n        </x-slot>\n\n        <x-slot name=\"content\">\n            {{ $slot }}\n        </x-slot>\n    </x-dropdown>\n</div>","module":"base","path":"\\resources\\views\\components\\nav-dropdown.blade.php"},"\\resources\\views\\components\\nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-blue-500 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-blue-700 transition duration-150 ease-in-out'\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"\\resources\\views\\components\\nav-link.blade.php"},"\\resources\\views\\components\\partials\\card.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'bodyClasses' => 'flex-auto p-6',\n])\n\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\n    <div class=\"{{ $bodyClasses }}\">\n        \n        @if(isset($title))\n        <h4 class=\"text-lg font-bold mb-3\">\n            {{ $title }}\n        </h4>\n        @endif\n\n        @if(isset($subtitle))\n        <h5 class=\"text-gray-600 text-sm\">\n            {{ $subtitle }}\n        </h5>\n        @endif\n\n        {{ $slot }}\n    </div>\n</div>","module":"base","path":"\\resources\\views\\components\\partials\\card.blade.php"},"\\resources\\views\\components\\partials\\thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'src',\n    'size' => 50,\n])\n\n@if($src)\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\n@else\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\n@endif","module":"base","path":"\\resources\\views\\components\\partials\\thumbnail.blade.php"},"\\resources\\views\\components\\responsive-nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'block pl-3 pr-4 py-2 border-l-4 border-blue-500 text-base font-medium text-blue-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-blue-700 transition duration-150 ease-in-out'\n            : 'block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"\\resources\\views\\components\\responsive-nav-link.blade.php"},"\\resources\\views\\layouts\\app.blade.php":{"deleteOnGeneration":true,"content":"<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n\n        <title>Bahai Library 2.0</title>\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\n\n        <!-- Styles -->\n        <link rel=\"stylesheet\" href=\"{{ mix('css/app.css') }}\">\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\n\n        <!-- Icons -->\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\n\n        @livewireStyles\n\n        <!-- Scripts -->\n        <script src=\"{{ mix('js/app.js') }}\" defer></script>\n    </head>\n    <body class=\"font-sans antialiased\">\n        <x-jet-banner />\n\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('navigation-menu')\n\n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n\n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n\n        @livewireScripts\n\n        @stack('scripts')\n\n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\n\n        @if (session()->has('success')) \n        <script>\n            const notyf = new Notyf({dismissible: true})\n            notyf.success('{{ session('success') }}')\n        </script> \n        @endif\n\n        <script>\n            /* Simple function to retrieve data url from file */\n            function fileToDataUrl(event, callback) {\n                if (! event.target.files.length) return\n                        \n                let file = event.target.files[0], \n                    reader = new FileReader()\n                \n                reader.readAsDataURL(file)\n                reader.onload = e => callback(e.target.result)\n            }\n        </script>\n    </body>\n</html>\n","module":"base","path":"\\resources\\views\\layouts\\app.blade.php"},"\\resources\\views\\navigation-menu.blade.php":{"deleteOnGeneration":true,"content":"<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"flex-shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\">\n                        <x-jet-application-mark class=\"block h-9 w-auto\" />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\n                    <x-jet-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                        {{ __('Dashboard') }}\n                    </x-jet-nav-link>\n                </div>\n\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\n                        @can('view-any', App\\Models\\Document::class)\n                        <x-dropdown-link href=\"{{ route('documents.index') }}\">\n                        Documents\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Collection::class)\n                        <x-dropdown-link href=\"{{ route('collections.index') }}\">\n                        Collections\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Tag::class)\n                        <x-dropdown-link href=\"{{ route('tags.index') }}\">\n                        Tags\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\User::class)\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\n                        Users\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Language::class)\n                        <x-dropdown-link href=\"{{ route('languages.index') }}\">\n                        Languages\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Location::class)\n                        <x-dropdown-link href=\"{{ route('locations.index') }}\">\n                        Locations\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Creator::class)\n                        <x-dropdown-link href=\"{{ route('creators.index') }}\">\n                        Creators\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Search::class)\n                        <x-dropdown-link href=\"{{ route('search.index') }}\">\n                        Searches\n                        </x-dropdown-link>\n                        @endcan\n                </x-nav-dropdown>\n\n            </div>\n\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                <!-- Teams Dropdown -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"ml-3 relative\">\n                        <x-jet-dropdown align=\"right\" width=\"60\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\">\n                                        {{ Auth::user()->currentTeam->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <div class=\"w-60\">\n                                    <!-- Team Management -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Manage Team') }}\n                                    </div>\n\n                                    <!-- Team Settings -->\n                                    <x-jet-dropdown-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\">\n                                        {{ __('Team Settings') }}\n                                    </x-jet-dropdown-link>\n\n                                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                                        <x-jet-dropdown-link href=\"{{ route('teams.create') }}\">\n                                            {{ __('Create New Team') }}\n                                        </x-jet-dropdown-link>\n                                    @endcan\n\n                                    <div class=\"border-t border-gray-100\"></div>\n\n                                    <!-- Team Switcher -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Switch Teams') }}\n                                    </div>\n\n                                    @foreach (Auth::user()->allTeams() as $team)\n                                        <x-jet-switchable-team :team=\"$team\" />\n                                    @endforeach\n                                </div>\n                            </x-slot>\n                        </x-jet-dropdown>\n                    </div>\n                @endif\n\n                <!-- Settings Dropdown -->\n                <div class=\"ml-3 relative\">\n                    <x-jet-dropdown align=\"right\" width=\"48\">\n                        <x-slot name=\"trigger\">\n                            @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                                <button class=\"flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out\">\n                                    <img class=\"h-8 w-8 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                                </button>\n                            @else\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\">\n                                        {{ Auth::user()->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            @endif\n                        </x-slot>\n\n                        <x-slot name=\"content\">\n                            <!-- Account Management -->\n                            <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                {{ __('Manage Account') }}\n                            </div>\n\n                            <x-jet-dropdown-link href=\"{{ route('profile.show') }}\">\n                                {{ __('Profile') }}\n                            </x-jet-dropdown-link>\n\n                            @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                                <x-jet-dropdown-link href=\"{{ route('api-tokens.index') }}\">\n                                    {{ __('API Tokens') }}\n                                </x-jet-dropdown-link>\n                            @endif\n\n                            <div class=\"border-t border-gray-100\"></div>\n\n                            <!-- Authentication -->\n                            <form method=\"POST\" action=\"{{ route('logout') }}\">\n                                @csrf\n\n                                <x-jet-dropdown-link href=\"{{ route('logout') }}\"\n                                         onclick=\"event.preventDefault();\n                                                this.closest('form').submit();\">\n                                    {{ __('Log Out') }}\n                                </x-jet-dropdown-link>\n                            </form>\n                        </x-slot>\n                    </x-jet-dropdown>\n                </div>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-mr-2 flex items-center sm:hidden\">\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            <x-jet-responsive-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                {{ __('Dashboard') }}\n            </x-jet-responsive-nav-link>\n            \n                @can('view-any', App\\Models\\Document::class)\n                <x-jet-responsive-nav-link href=\"{{ route('documents.index') }}\">\n                Documents\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Collection::class)\n                <x-jet-responsive-nav-link href=\"{{ route('collections.index') }}\">\n                Collections\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Tag::class)\n                <x-jet-responsive-nav-link href=\"{{ route('tags.index') }}\">\n                Tags\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\User::class)\n                <x-jet-responsive-nav-link href=\"{{ route('users.index') }}\">\n                Users\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Language::class)\n                <x-jet-responsive-nav-link href=\"{{ route('languages.index') }}\">\n                Languages\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Location::class)\n                <x-jet-responsive-nav-link href=\"{{ route('locations.index') }}\">\n                Locations\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Creator::class)\n                <x-jet-responsive-nav-link href=\"{{ route('creators.index') }}\">\n                Creators\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Search::class)\n                <x-jet-responsive-nav-link href=\"{{ route('search.index') }}\">\n                Searches\n                </x-jet-responsive-nav-link>\n                @endcan\n\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"flex items-center px-4\">\n                @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                    <div class=\"flex-shrink-0 mr-3\">\n                        <img class=\"h-10 w-10 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                    </div>\n                @endif\n\n                <div>\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <!-- Account Management -->\n                <x-jet-responsive-nav-link href=\"{{ route('profile.show') }}\" :active=\"request()->routeIs('profile.show')\">\n                    {{ __('Profile') }}\n                </x-jet-responsive-nav-link>\n\n                @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                    <x-jet-responsive-nav-link href=\"{{ route('api-tokens.index') }}\" :active=\"request()->routeIs('api-tokens.index')\">\n                        {{ __('API Tokens') }}\n                    </x-jet-responsive-nav-link>\n                @endif\n\n                <!-- Authentication -->\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\n                    @csrf\n\n                    <x-jet-responsive-nav-link href=\"{{ route('logout') }}\"\n                                   onclick=\"event.preventDefault();\n                                    this.closest('form').submit();\">\n                        {{ __('Log Out') }}\n                    </x-jet-responsive-nav-link>\n                </form>\n\n                <!-- Team Management -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Manage Team') }}\n                    </div>\n\n                    <!-- Team Settings -->\n                    <x-jet-responsive-nav-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\" :active=\"request()->routeIs('teams.show')\">\n                        {{ __('Team Settings') }}\n                    </x-jet-responsive-nav-link>\n\n                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                        <x-jet-responsive-nav-link href=\"{{ route('teams.create') }}\" :active=\"request()->routeIs('teams.create')\">\n                            {{ __('Create New Team') }}\n                        </x-jet-responsive-nav-link>\n                    @endcan\n\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <!-- Team Switcher -->\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Switch Teams') }}\n                    </div>\n\n                    @foreach (Auth::user()->allTeams() as $team)\n                        <x-jet-switchable-team :team=\"$team\" component=\"jet-responsive-nav-link\" />\n                    @endforeach\n                @endif\n            </div>\n        </div>\n    </div>\n</nav>","module":"base","path":"\\resources\\views\\navigation-menu.blade.php"},"\\database\\migrations\\2021_04_07_000001_create_locations_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateLocationsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('locations', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('continent');\n            $table->string('country');\n            $table->string('locality');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('locations');\n    }\n}\n","module":"entity:20","path":"\\database\\migrations\\2021_04_07_000001_create_locations_table.php"},"\\database\\migrations\\2021_04_07_000002_create_creator_document_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateCreatorDocumentTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('creator_document', function (Blueprint $table) {\n            $table->unsignedBigInteger('creator_id');\n            $table->unsignedBigInteger('document_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('creator_document');\n    }\n}\n","module":"entity:18","path":"\\database\\migrations\\2021_04_07_000002_create_creator_document_table.php"},"\\database\\migrations\\2021_04_07_000003_create_document_location_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateDocumentLocationTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('document_location', function (Blueprint $table) {\n            $table->unsignedBigInteger('document_id');\n            $table->unsignedBigInteger('location_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('document_location');\n    }\n}\n","module":"entity:21","path":"\\database\\migrations\\2021_04_07_000003_create_document_location_table.php"},"\\database\\migrations\\2021_04_07_000004_create_document_tag_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateDocumentTagTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('document_tag', function (Blueprint $table) {\n            $table->unsignedBigInteger('tag_id');\n            $table->unsignedBigInteger('document_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('document_tag');\n    }\n}\n","module":"entity:17","path":"\\database\\migrations\\2021_04_07_000004_create_document_tag_table.php"},"\\database\\migrations\\2021_04_07_000005_create_tags_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateTagsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('tags', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('label');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('tags');\n    }\n}\n","module":"entity:5","path":"\\database\\migrations\\2021_04_07_000005_create_tags_table.php"},"\\database\\migrations\\2021_04_07_000006_create_document_language_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateDocumentLanguageTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('document_language', function (Blueprint $table) {\n            $table->unsignedBigInteger('document_id');\n            $table->unsignedBigInteger('language_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('document_language');\n    }\n}\n","module":"entity:15","path":"\\database\\migrations\\2021_04_07_000006_create_document_language_table.php"},"\\database\\migrations\\2021_04_07_000007_create_languages_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateLanguagesTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('languages', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('language');\n            $table->char('language_tag');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('languages');\n    }\n}\n","module":"entity:7","path":"\\database\\migrations\\2021_04_07_000007_create_languages_table.php"},"\\database\\migrations\\2021_04_07_000008_create_collection_document_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateCollectionDocumentTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('collection_document', function (Blueprint $table) {\n            $table->unsignedBigInteger('collection_id');\n            $table->unsignedBigInteger('document_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('collection_document');\n    }\n}\n","module":"entity:14","path":"\\database\\migrations\\2021_04_07_000008_create_collection_document_table.php"},"\\database\\migrations\\2021_04_07_000009_create_collections_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateCollectionsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('collections', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('slug');\n            $table->text('name');\n            $table->string('shortname');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('collections');\n    }\n}\n","module":"entity:4","path":"\\database\\migrations\\2021_04_07_000009_create_collections_table.php"},"\\database\\migrations\\2021_04_07_000010_create_document_user_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateDocumentUserTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('document_user', function (Blueprint $table) {\n            $table->unsignedBigInteger('user_id');\n            $table->unsignedBigInteger('document_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('document_user');\n    }\n}\n","module":"entity:16","path":"\\database\\migrations\\2021_04_07_000010_create_document_user_table.php"},"\\database\\migrations\\2021_04_07_000011_create_creators_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateCreatorsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('creators', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('first_names')->nullable();\n            $table->string('last_names')->nullable();\n            $table->boolean('author')->nullable();\n            $table->boolean('editor')->nullable();\n            $table->boolean('translator')->nullable();\n            $table->boolean('compiler')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('creators');\n    }\n}\n","module":"entity:3","path":"\\database\\migrations\\2021_04_07_000011_create_creators_table.php"},"\\database\\migrations\\2021_04_07_000012_create_documents_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateDocumentsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('documents', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('slug');\n            $table->boolean('is_pdf')->nullable();\n            $table->boolean('is_audio')->nullable();\n            $table->boolean('is_image')->nullable();\n            $table->boolean('is_video')->nullable();\n            $table->boolean('is_html')->nullable();\n            $table->string('file_url')->nullable();\n            $table->text('blurb')->nullable();\n            $table->longText('content_html')->nullable();\n            $table->bigInteger('content_size')->nullable();\n            $table->enum('edit_quality', ['high', 'medium', 'low'])->nullable();\n            $table\n                ->enum('formatting_quality', ['high', 'medium', 'low'])\n                ->nullable();\n            $table->enum('publication_permission', [\n                'author',\n                'editor',\n                'publisher',\n                'translator',\n                'recipient',\n                'fair use',\n                '',\n            ]);\n            $table->text('notes')->nullable();\n            $table->enum('input_type', ['scanned', 'typed', 'transcribed']);\n            $table->foreignId('input_by')->nullable();\n            $table->date('input_date')->nullable();\n            $table->foreignId('proof_by')->nullable();\n            $table->date('proof_date');\n            $table->foreignId('format_by');\n            $table->date('format_date');\n            $table->foreignId('post_by');\n            $table->date('post_date');\n            $table->enum('publication_approval', [\n                'approved',\n                'rejected',\n                'pending',\n            ]);\n            $table->bigInteger('views');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('documents');\n    }\n}\n","module":"entity:2","path":"\\database\\migrations\\2021_04_07_000012_create_documents_table.php"},"\\database\\migrations\\2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateUsersTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n            $table->enum('status', ['Contributor', 'Editor', 'Admin']);\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('users');\n    }\n}\n","module":"entity:1","path":"\\database\\migrations\\2014_10_12_000000_create_users_table.php"},"\\database\\migrations\\2021_04_07_000013_create_editions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateEditionsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('editions', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('subtitle')->nullable();\n            $table->string('title_parent')->nullable();\n            $table->string('volume')->nullable();\n            $table->char('page_range')->nullable();\n            $table->char('page_total')->nullable();\n            $table->string('publisher_name')->nullable();\n            $table->string('publisher_city')->nullable();\n            $table->date('date')->nullable();\n            $table->string('isbn')->nullable();\n            $table->unsignedBigInteger('document_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('editions');\n    }\n}\n","module":"entity:19","path":"\\database\\migrations\\2021_04_07_000013_create_editions_table.php"},"\\database\\migrations\\2021_04_07_000014_create_location_search_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateLocationSearchTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('location_search', function (Blueprint $table) {\n            $table->unsignedBigInteger('location_id');\n            $table->unsignedBigInteger('search_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('location_search');\n    }\n}\n","module":"entity:22","path":"\\database\\migrations\\2021_04_07_000014_create_location_search_table.php"},"\\database\\migrations\\2021_04_07_000015_create_searches_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateSearchesTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('searches', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->text('query')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('searches');\n    }\n}\n","module":"entity:6","path":"\\database\\migrations\\2021_04_07_000015_create_searches_table.php"},"\\database\\migrations\\2021_04_07_009001_add_foreigns_to_creator_document_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToCreatorDocumentTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('creator_document', function (Blueprint $table) {\n            $table\n                ->foreign('creator_id')\n                ->references('id')\n                ->on('creators');\n\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('creator_document', function (Blueprint $table) {\n            $table->dropForeign(['creator_id']);\n            $table->dropForeign(['document_id']);\n        });\n    }\n}\n","module":"entity:18|entity:3|entity:2","path":"\\database\\migrations\\2021_04_07_009001_add_foreigns_to_creator_document_table.php"},"\\database\\migrations\\2021_04_07_009002_add_foreigns_to_document_location_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToDocumentLocationTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('document_location', function (Blueprint $table) {\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n\n            $table\n                ->foreign('location_id')\n                ->references('id')\n                ->on('locations');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('document_location', function (Blueprint $table) {\n            $table->dropForeign(['document_id']);\n            $table->dropForeign(['location_id']);\n        });\n    }\n}\n","module":"entity:21|entity:2|entity:20","path":"\\database\\migrations\\2021_04_07_009002_add_foreigns_to_document_location_table.php"},"\\database\\migrations\\2021_04_07_009003_add_foreigns_to_document_tag_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToDocumentTagTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('document_tag', function (Blueprint $table) {\n            $table\n                ->foreign('tag_id')\n                ->references('id')\n                ->on('tags');\n\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('document_tag', function (Blueprint $table) {\n            $table->dropForeign(['tag_id']);\n            $table->dropForeign(['document_id']);\n        });\n    }\n}\n","module":"entity:17|entity:5|entity:2","path":"\\database\\migrations\\2021_04_07_009003_add_foreigns_to_document_tag_table.php"},"\\database\\migrations\\2021_04_07_009004_add_foreigns_to_document_language_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToDocumentLanguageTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('document_language', function (Blueprint $table) {\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('document_language', function (Blueprint $table) {\n            $table->dropForeign(['document_id']);\n            $table->dropForeign(['language_id']);\n        });\n    }\n}\n","module":"entity:15|entity:2|entity:7","path":"\\database\\migrations\\2021_04_07_009004_add_foreigns_to_document_language_table.php"},"\\database\\migrations\\2021_04_07_009005_add_foreigns_to_collection_document_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToCollectionDocumentTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('collection_document', function (Blueprint $table) {\n            $table\n                ->foreign('collection_id')\n                ->references('id')\n                ->on('collections');\n\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('collection_document', function (Blueprint $table) {\n            $table->dropForeign(['collection_id']);\n            $table->dropForeign(['document_id']);\n        });\n    }\n}\n","module":"entity:14|entity:4|entity:2","path":"\\database\\migrations\\2021_04_07_009005_add_foreigns_to_collection_document_table.php"},"\\database\\migrations\\2021_04_07_009006_add_foreigns_to_document_user_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToDocumentUserTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('document_user', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users');\n\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('document_user', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n            $table->dropForeign(['document_id']);\n        });\n    }\n}\n","module":"entity:16|entity:1|entity:2","path":"\\database\\migrations\\2021_04_07_009006_add_foreigns_to_document_user_table.php"},"\\database\\migrations\\2021_04_07_009007_add_foreigns_to_documents_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToDocumentsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('documents', function (Blueprint $table) {\n            $table\n                ->foreign('input_by')\n                ->references('id')\n                ->on('users');\n\n            $table\n                ->foreign('proof_by')\n                ->references('id')\n                ->on('users');\n\n            $table\n                ->foreign('format_by')\n                ->references('id')\n                ->on('users');\n\n            $table\n                ->foreign('post_by')\n                ->references('id')\n                ->on('users');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('documents', function (Blueprint $table) {\n            $table->dropForeign(['input_by']);\n            $table->dropForeign(['proof_by']);\n            $table->dropForeign(['format_by']);\n            $table->dropForeign(['post_by']);\n        });\n    }\n}\n","module":"entity:2|entity:1|entity:1|entity:1|entity:1","path":"\\database\\migrations\\2021_04_07_009007_add_foreigns_to_documents_table.php"},"\\database\\migrations\\2021_04_07_009008_add_foreigns_to_editions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToEditionsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('editions', function (Blueprint $table) {\n            $table\n                ->foreign('document_id')\n                ->references('id')\n                ->on('documents');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('editions', function (Blueprint $table) {\n            $table->dropForeign(['document_id']);\n        });\n    }\n}\n","module":"entity:19|entity:2","path":"\\database\\migrations\\2021_04_07_009008_add_foreigns_to_editions_table.php"},"\\database\\migrations\\2021_04_07_009009_add_foreigns_to_location_search_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass AddForeignsToLocationSearchTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::table('location_search', function (Blueprint $table) {\n            $table\n                ->foreign('location_id')\n                ->references('id')\n                ->on('locations');\n\n            $table\n                ->foreign('search_id')\n                ->references('id')\n                ->on('searches');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('location_search', function (Blueprint $table) {\n            $table->dropForeign(['location_id']);\n            $table->dropForeign(['search_id']);\n        });\n    }\n}\n","module":"entity:22|entity:20|entity:6","path":"\\database\\migrations\\2021_04_07_009009_add_foreigns_to_location_search_table.php"},"\\webpack.mix.js":{"deleteOnGeneration":true,"content":"const mix = require('laravel-mix');\n\n/*\n |--------------------------------------------------------------------------\n | Mix Asset Management\n |--------------------------------------------------------------------------\n |\n | Mix provides a clean, fluent API for defining some Webpack build steps\n | for your Laravel application. By default, we are compiling the Sass\n | file for the application as well as bundling up all the JS files.\n |\n */\n\nmix.js('resources/js/app.js', 'public/js')\n    .postCss('resources/css/app.css', 'public/css', [\n        require('tailwindcss')\n    ])\n    .sourceMaps();\n","module":"base","path":"\\webpack.mix.js"},"\\tailwind.config.js":{"deleteOnGeneration":true,"content":"module.exports = {\n  purge: [\n    './resources/**/*.blade.php',\n    './resources/**/*.js',\n    './resources/**/*.vue',\n  ],\n  darkMode: false, // or 'media' or 'class'\n  theme: {\n    extend: {},\n  },\n  variants: {\n    extend: {},\n  },\n  plugins: [],\n}\n  ","module":"base","path":"\\tailwind.config.js"},"\\resources\\css\\app.css":{"deleteOnGeneration":true,"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.button {\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\n}\n\n.button:hover {\n    @apply bg-gray-200;\n}\n\n.button:active, .button:focus {\n    @apply bg-gray-300 ring;\n}\n\n.button.button-primary {\n    @apply bg-indigo-500 text-white !important;\n}\n\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\n    @apply bg-indigo-600 !important;\n}","module":"base","path":"\\resources\\css\\app.css"},"\\resources\\js\\bootstrap.js":{"deleteOnGeneration":true,"content":"window._ = require('lodash');\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","module":"base","path":"\\resources\\js\\bootstrap.js"},"\\app\\Http\\Controllers\\Api\\AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function login(Request $request)\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Api\\AuthController.php"}},"skippedFiles":{},"removedModules":["entity:42","entity:38","entity:44"],"migrationsDate":"2021_04_07","hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"id":3,"createdAt":"2021-04-07 06:26:20","updatedAt":"2021-09-30 10:13:15"}},"manytomanycomponents":{},"hasmanydetails":{},"morphrelationships":{}},"exportedItems":["projects:3"],"exportedRelationships":["Project:3:cruds","Crud:22:inputs","Crud:22:manyToManyComponents","Crud:22:hasManyDetails","Crud:18:inputs","Crud:18:manyToManyComponents","Crud:18:hasManyDetails","Crud:16:inputs","Crud:16:manyToManyComponents","Crud:16:hasManyDetails","Crud:20:inputs","Crud:20:manyToManyComponents","Crud:20:hasManyDetails","Crud:17:inputs","Crud:17:manyToManyComponents","Crud:17:hasManyDetails","Crud:15:inputs","Crud:15:manyToManyComponents","Crud:15:hasManyDetails","Crud:19:inputs","Crud:19:manyToManyComponents","Crud:19:hasManyDetails","Crud:21:inputs","Crud:21:manyToManyComponents","Crud:21:hasManyDetails","Project:3:entities","Entity:39:authProject","Entity:39:cruds","Entity:39:fields","Field:189:inputs","Field:189:foreign","Field:189:relatedForeigns","Field:189:basicParentRelationships","BasicRelationship:15:inputs","BasicRelationship:15:contrary","BasicRelationship:16:inputs","BasicRelationship:16:contrary","BasicRelationship:15:hasManyDetails","BasicRelationship:16:hasManyDetails","BasicRelationship:20:inputs","BasicRelationship:20:contrary","BasicRelationship:19:inputs","BasicRelationship:19:contrary","BasicRelationship:20:hasManyDetails","BasicRelationship:19:hasManyDetails","Field:189:basicForeignRelationships","Field:189:manyToManyModelRelationships","Field:189:manyToManylocalModelRelationships","Field:189:typedMorphRelationships","Field:189:identifiedMorphRelationships","Field:190:inputs","Field:190:foreign","Field:190:relatedForeigns","Field:190:basicParentRelationships","Field:190:basicForeignRelationships","Field:190:manyToManyModelRelationships","Field:190:manyToManylocalModelRelationships","Field:190:typedMorphRelationships","Field:190:identifiedMorphRelationships","Field:191:inputs","Field:191:foreign","Field:191:relatedForeigns","Field:191:basicParentRelationships","Field:191:basicForeignRelationships","Field:191:manyToManyModelRelationships","Field:191:manyToManylocalModelRelationships","Field:191:typedMorphRelationships","Field:191:identifiedMorphRelationships","Field:192:inputs","Field:192:foreign","Field:192:relatedForeigns","Field:192:basicParentRelationships","Field:192:basicForeignRelationships","Field:192:manyToManyModelRelationships","Field:192:manyToManylocalModelRelationships","Field:192:typedMorphRelationships","Field:192:identifiedMorphRelationships","Field:193:inputs","Field:193:foreign","Field:193:relatedForeigns","Field:193:basicParentRelationships","Field:193:basicForeignRelationships","Field:193:manyToManyModelRelationships","Field:193:manyToManylocalModelRelationships","Field:193:typedMorphRelationships","Field:193:identifiedMorphRelationships","Field:194:inputs","Field:194:foreign","Field:194:relatedForeigns","Field:194:basicParentRelationships","Field:194:basicForeignRelationships","Field:194:manyToManyModelRelationships","Field:194:manyToManylocalModelRelationships","Field:194:typedMorphRelationships","Field:194:identifiedMorphRelationships","Field:195:inputs","Field:195:foreign","Field:195:relatedForeigns","Field:195:basicParentRelationships","Field:195:basicForeignRelationships","Field:195:manyToManyModelRelationships","Field:195:manyToManylocalModelRelationships","Field:195:typedMorphRelationships","Field:195:identifiedMorphRelationships","Field:196:inputs","Field:196:foreign","Field:196:relatedForeigns","Field:196:basicParentRelationships","Field:196:basicForeignRelationships","Field:196:manyToManyModelRelationships","Field:196:manyToManylocalModelRelationships","Field:196:typedMorphRelationships","Field:196:identifiedMorphRelationships","Field:197:inputs","Field:197:foreign","Field:197:relatedForeigns","Field:197:basicParentRelationships","Field:197:basicForeignRelationships","Field:197:manyToManyModelRelationships","Field:197:manyToManylocalModelRelationships","Field:197:typedMorphRelationships","Field:197:identifiedMorphRelationships","Field:198:inputs","Field:198:foreign","Field:198:relatedForeigns","Field:198:basicParentRelationships","Field:198:basicForeignRelationships","Field:198:manyToManyModelRelationships","Field:198:manyToManylocalModelRelationships","Field:198:typedMorphRelationships","Field:198:identifiedMorphRelationships","Field:214:inputs","Field:214:foreign","Field:214:relatedForeigns","Field:214:basicParentRelationships","Field:214:basicForeignRelationships","Field:214:manyToManyModelRelationships","Field:214:manyToManylocalModelRelationships","Field:214:typedMorphRelationships","Field:214:identifiedMorphRelationships","Field:207:inputs","Field:207:foreign","Field:207:relatedForeigns","Field:207:basicParentRelationships","Field:207:basicForeignRelationships","Field:207:manyToManyModelRelationships","Field:207:manyToManylocalModelRelationships","Field:207:typedMorphRelationships","Field:207:identifiedMorphRelationships","Field:208:inputs","Field:208:foreign","Field:208:relatedForeigns","Field:208:basicParentRelationships","Field:208:basicForeignRelationships","Field:208:manyToManyModelRelationships","Field:208:manyToManylocalModelRelationships","Field:208:typedMorphRelationships","Field:208:identifiedMorphRelationships","Field:211:inputs","Field:211:foreign","Field:211:relatedForeigns","Field:211:basicParentRelationships","Field:211:basicForeignRelationships","Field:211:manyToManyModelRelationships","Field:211:manyToManylocalModelRelationships","Field:211:typedMorphRelationships","Field:211:identifiedMorphRelationships","Field:199:inputs","Field:199:foreign","Field:199:relatedForeigns","Field:199:basicParentRelationships","Field:199:basicForeignRelationships","Field:199:manyToManyModelRelationships","Field:199:manyToManylocalModelRelationships","Field:199:typedMorphRelationships","Field:199:identifiedMorphRelationships","Field:210:inputs","Field:210:foreign","Field:210:relatedForeigns","Field:210:basicParentRelationships","Field:210:basicForeignRelationships","Field:210:manyToManyModelRelationships","Field:210:manyToManylocalModelRelationships","Field:210:typedMorphRelationships","Field:210:identifiedMorphRelationships","Field:209:inputs","Field:209:foreign","Field:209:relatedForeigns","Field:209:basicParentRelationships","Field:209:basicForeignRelationships","Field:209:manyToManyModelRelationships","Field:209:manyToManylocalModelRelationships","Field:209:typedMorphRelationships","Field:209:identifiedMorphRelationships","Field:206:inputs","Field:206:foreign","Field:206:relatedForeigns","Field:206:basicParentRelationships","Field:206:basicForeignRelationships","Field:206:manyToManyModelRelationships","Field:206:manyToManylocalModelRelationships","Field:206:typedMorphRelationships","Field:206:identifiedMorphRelationships","Entity:39:foreigns","Entity:39:pivotRelationships","Entity:39:pivotMorphRelationships","Entity:39:basicRelationships","Entity:39:basicRelatedRelationships","Entity:39:manyToManyRelationships","ManyToManyRelationship:21:contrary","ManyToManyRelationship:22:contrary","ManyToManyRelationship:21:components","ManyToManyRelationship:22:components","ManyToManyRelationship:20:contrary","ManyToManyRelationship:19:contrary","ManyToManyRelationship:20:components","ManyToManyRelationship:19:components","ManyToManyRelationship:18:contrary","ManyToManyRelationship:17:contrary","ManyToManyRelationship:18:components","ManyToManyRelationship:17:components","ManyToManyRelationship:24:contrary","ManyToManyRelationship:23:contrary","ManyToManyRelationship:24:components","ManyToManyRelationship:23:components","ManyToManyRelationship:16:contrary","ManyToManyRelationship:15:contrary","ManyToManyRelationship:16:components","ManyToManyRelationship:15:components","Entity:39:manyToManyRelatedRelationships","Entity:39:morphRelationships","Entity:39:morphRelatedRelationships","Entity:36:authProject","Entity:36:cruds","Entity:36:fields","Field:183:inputs","Field:183:foreign","Field:183:relatedForeigns","Field:183:basicParentRelationships","Field:183:basicForeignRelationships","Field:183:manyToManyModelRelationships","Field:183:manyToManylocalModelRelationships","Field:183:typedMorphRelationships","Field:183:identifiedMorphRelationships","Field:184:inputs","Field:184:foreign","Field:184:relatedForeigns","Field:184:basicParentRelationships","Field:184:basicForeignRelationships","Field:184:manyToManyModelRelationships","Field:184:manyToManylocalModelRelationships","Field:184:typedMorphRelationships","Field:184:identifiedMorphRelationships","Entity:36:foreigns","Entity:36:pivotRelationships","Entity:36:pivotMorphRelationships","Entity:36:basicRelationships","Entity:36:basicRelatedRelationships","Entity:36:manyToManyRelationships","Entity:36:manyToManyRelatedRelationships","Entity:36:morphRelationships","Entity:36:morphRelatedRelationships","Entity:28:authProject","Entity:28:cruds","Entity:28:fields","Field:150:inputs","Field:150:foreign","Field:150:relatedForeigns","Field:150:basicParentRelationships","Field:150:basicForeignRelationships","Field:150:manyToManyModelRelationships","Field:150:manyToManylocalModelRelationships","Field:150:typedMorphRelationships","Field:150:identifiedMorphRelationships","Field:151:inputs","Field:151:foreign","Field:151:relatedForeigns","Field:151:basicParentRelationships","Field:151:basicForeignRelationships","Field:151:manyToManyModelRelationships","Field:151:manyToManylocalModelRelationships","Field:151:typedMorphRelationships","Field:151:identifiedMorphRelationships","Field:152:inputs","Field:152:foreign","Field:152:relatedForeigns","Field:152:basicParentRelationships","Field:152:basicForeignRelationships","Field:152:manyToManyModelRelationships","Field:152:manyToManylocalModelRelationships","Field:152:typedMorphRelationships","Field:152:identifiedMorphRelationships","Entity:28:foreigns","Entity:28:pivotRelationships","Entity:28:pivotMorphRelationships","Entity:28:basicRelationships","Entity:28:basicRelatedRelationships","Entity:28:manyToManyRelationships","Entity:28:manyToManyRelatedRelationships","Entity:28:morphRelationships","Entity:28:morphRelatedRelationships","Entity:27:authProject","Entity:27:cruds","Entity:27:fields","Field:148:inputs","Field:148:foreign","Field:148:relatedForeigns","Field:148:basicParentRelationships","Field:148:basicForeignRelationships","Field:148:manyToManyModelRelationships","Field:148:manyToManylocalModelRelationships","Field:148:typedMorphRelationships","Field:148:identifiedMorphRelationships","Field:149:inputs","Field:149:foreign","Field:149:relatedForeigns","Field:149:basicParentRelationships","Field:149:basicForeignRelationships","Field:149:manyToManyModelRelationships","Field:149:manyToManylocalModelRelationships","Field:149:typedMorphRelationships","Field:149:identifiedMorphRelationships","Entity:27:foreigns","Entity:27:pivotRelationships","Entity:27:pivotMorphRelationships","Entity:27:basicRelationships","Entity:27:basicRelatedRelationships","Entity:27:manyToManyRelationships","Entity:27:manyToManyRelatedRelationships","Entity:27:morphRelationships","Entity:27:morphRelatedRelationships","Entity:29:authProject","Entity:29:cruds","Entity:29:fields","Field:153:inputs","Field:153:foreign","Field:153:relatedForeigns","Field:153:basicParentRelationships","Field:153:basicForeignRelationships","Field:153:manyToManyModelRelationships","Field:153:manyToManylocalModelRelationships","Field:153:typedMorphRelationships","Field:153:identifiedMorphRelationships","Field:155:inputs","Field:155:foreign","Field:155:relatedForeigns","Field:155:basicParentRelationships","Field:155:basicForeignRelationships","Field:155:manyToManyModelRelationships","Field:155:manyToManylocalModelRelationships","Field:155:typedMorphRelationships","Field:155:identifiedMorphRelationships","Field:154:inputs","Field:154:foreign","Field:154:relatedForeigns","Field:154:basicParentRelationships","Field:154:basicForeignRelationships","Field:154:manyToManyModelRelationships","Field:154:manyToManylocalModelRelationships","Field:154:typedMorphRelationships","Field:154:identifiedMorphRelationships","Field:156:inputs","Field:156:foreign","Field:156:relatedForeigns","Field:156:basicParentRelationships","Field:156:basicForeignRelationships","Field:156:manyToManyModelRelationships","Field:156:manyToManylocalModelRelationships","Field:156:typedMorphRelationships","Field:156:identifiedMorphRelationships","Entity:29:foreigns","Entity:29:pivotRelationships","Entity:29:pivotMorphRelationships","Entity:29:basicRelationships","Entity:29:basicRelatedRelationships","Entity:29:manyToManyRelationships","Entity:29:manyToManyRelatedRelationships","Entity:29:morphRelationships","Entity:29:morphRelatedRelationships","Entity:26:authProject","Entity:26:cruds","Entity:26:fields","Field:144:inputs","Field:144:foreign","Field:144:relatedForeigns","Field:144:basicParentRelationships","Field:144:basicForeignRelationships","Field:144:manyToManyModelRelationships","Field:144:manyToManylocalModelRelationships","Field:144:typedMorphRelationships","Field:144:identifiedMorphRelationships","Field:145:inputs","Field:145:foreign","Field:145:relatedForeigns","Field:145:basicParentRelationships","Field:145:basicForeignRelationships","Field:145:manyToManyModelRelationships","Field:145:manyToManylocalModelRelationships","Field:145:typedMorphRelationships","Field:145:identifiedMorphRelationships","Field:146:inputs","Field:146:foreign","Field:146:relatedForeigns","Field:146:basicParentRelationships","Field:146:basicForeignRelationships","Field:146:manyToManyModelRelationships","Field:146:manyToManylocalModelRelationships","Field:146:typedMorphRelationships","Field:146:identifiedMorphRelationships","Field:147:inputs","Field:147:foreign","Field:147:relatedForeigns","Field:147:basicParentRelationships","Field:147:basicForeignRelationships","Field:147:manyToManyModelRelationships","Field:147:manyToManylocalModelRelationships","Field:147:typedMorphRelationships","Field:147:identifiedMorphRelationships","Entity:26:foreigns","Entity:26:pivotRelationships","Entity:26:pivotMorphRelationships","Entity:26:basicRelationships","Entity:26:basicRelatedRelationships","Entity:26:manyToManyRelationships","Entity:26:manyToManyRelatedRelationships","Entity:26:morphRelationships","Entity:26:morphRelatedRelationships","Entity:35:authProject","Entity:35:cruds","Entity:35:fields","Field:181:inputs","Field:181:foreign","Field:181:relatedForeigns","Field:181:basicParentRelationships","Field:181:basicForeignRelationships","Field:181:manyToManyModelRelationships","Field:181:manyToManylocalModelRelationships","Field:181:typedMorphRelationships","Field:181:identifiedMorphRelationships","Field:182:inputs","Field:182:foreign","Field:182:relatedForeigns","Field:182:basicParentRelationships","Field:182:basicForeignRelationships","Field:182:manyToManyModelRelationships","Field:182:manyToManylocalModelRelationships","Field:182:typedMorphRelationships","Field:182:identifiedMorphRelationships","Entity:35:foreigns","Entity:35:pivotRelationships","Entity:35:pivotMorphRelationships","Entity:35:basicRelationships","Entity:35:basicRelatedRelationships","Entity:35:manyToManyRelationships","Entity:35:manyToManyRelatedRelationships","Entity:35:morphRelationships","Entity:35:morphRelatedRelationships","Entity:34:authProject","Entity:34:cruds","Entity:34:fields","Field:179:inputs","Field:179:foreign","Field:179:relatedForeigns","Field:179:basicParentRelationships","Field:179:basicForeignRelationships","Field:179:manyToManyModelRelationships","Field:179:manyToManylocalModelRelationships","Field:179:typedMorphRelationships","Field:179:identifiedMorphRelationships","Field:180:inputs","Field:180:foreign","Field:180:relatedForeigns","Field:180:basicParentRelationships","Field:180:basicForeignRelationships","Field:180:manyToManyModelRelationships","Field:180:manyToManylocalModelRelationships","Field:180:typedMorphRelationships","Field:180:identifiedMorphRelationships","Entity:34:foreigns","Entity:34:pivotRelationships","Entity:34:pivotMorphRelationships","Entity:34:basicRelationships","Entity:34:basicRelatedRelationships","Entity:34:manyToManyRelationships","Entity:34:manyToManyRelatedRelationships","Entity:34:morphRelationships","Entity:34:morphRelatedRelationships","Entity:37:authProject","Entity:37:cruds","Entity:37:fields","Field:185:inputs","Field:185:foreign","Field:185:relatedForeigns","Field:185:basicParentRelationships","Field:185:basicForeignRelationships","Field:185:manyToManyModelRelationships","Field:185:manyToManylocalModelRelationships","Field:185:typedMorphRelationships","Field:185:identifiedMorphRelationships","Field:186:inputs","Field:186:foreign","Field:186:relatedForeigns","Field:186:basicParentRelationships","Field:186:basicForeignRelationships","Field:186:manyToManyModelRelationships","Field:186:manyToManylocalModelRelationships","Field:186:typedMorphRelationships","Field:186:identifiedMorphRelationships","Entity:37:foreigns","Entity:37:pivotRelationships","Entity:37:pivotMorphRelationships","Entity:37:basicRelationships","Entity:37:basicRelatedRelationships","Entity:37:manyToManyRelationships","Entity:37:manyToManyRelatedRelationships","Entity:37:morphRelationships","Entity:37:morphRelatedRelationships","Entity:32:authProject","Entity:32:cruds","Entity:32:fields","Field:175:inputs","Field:175:foreign","Field:175:relatedForeigns","Field:175:basicParentRelationships","Field:175:basicForeignRelationships","Field:175:manyToManyModelRelationships","Field:175:manyToManylocalModelRelationships","Field:175:typedMorphRelationships","Field:175:identifiedMorphRelationships","Field:176:inputs","Field:176:foreign","Field:176:relatedForeigns","Field:176:basicParentRelationships","Field:176:basicForeignRelationships","Field:176:manyToManyModelRelationships","Field:176:manyToManylocalModelRelationships","Field:176:typedMorphRelationships","Field:176:identifiedMorphRelationships","Entity:32:foreigns","Entity:32:pivotRelationships","Entity:32:pivotMorphRelationships","Entity:32:basicRelationships","Entity:32:basicRelatedRelationships","Entity:32:manyToManyRelationships","Entity:32:manyToManyRelatedRelationships","Entity:32:morphRelationships","Entity:32:morphRelatedRelationships","Entity:41:authProject","Entity:41:cruds","Entity:41:fields","Field:227:inputs","Field:227:foreign","Field:227:relatedForeigns","Field:227:basicParentRelationships","Field:227:basicForeignRelationships","Field:227:manyToManyModelRelationships","Field:227:manyToManylocalModelRelationships","Field:227:typedMorphRelationships","Field:227:identifiedMorphRelationships","Field:228:inputs","Field:228:foreign","Field:228:relatedForeigns","Field:228:basicParentRelationships","Field:228:basicForeignRelationships","Field:228:manyToManyModelRelationships","Field:228:manyToManylocalModelRelationships","Field:228:typedMorphRelationships","Field:228:identifiedMorphRelationships","Entity:41:foreigns","Entity:41:pivotRelationships","Entity:41:pivotMorphRelationships","Entity:41:basicRelationships","Entity:41:basicRelatedRelationships","Entity:41:manyToManyRelationships","Entity:41:manyToManyRelatedRelationships","Entity:41:morphRelationships","Entity:41:morphRelatedRelationships","Entity:43:authProject","Entity:43:cruds","Entity:43:fields","Field:232:inputs","Field:232:foreign","Field:232:relatedForeigns","Field:232:basicParentRelationships","Field:232:basicForeignRelationships","Field:232:manyToManyModelRelationships","Field:232:manyToManylocalModelRelationships","Field:232:typedMorphRelationships","Field:232:identifiedMorphRelationships","Field:234:inputs","Field:234:foreign","Field:234:relatedForeigns","Field:234:basicParentRelationships","Field:234:basicForeignRelationships","Field:234:manyToManyModelRelationships","Field:234:manyToManylocalModelRelationships","Field:234:typedMorphRelationships","Field:234:identifiedMorphRelationships","Field:235:inputs","Field:235:foreign","Field:235:relatedForeigns","Field:235:basicParentRelationships","Field:235:basicForeignRelationships","BasicRelationship:22:inputs","BasicRelationship:22:contrary","BasicRelationship:21:inputs","BasicRelationship:21:contrary","BasicRelationship:22:hasManyDetails","BasicRelationship:21:hasManyDetails","Field:235:manyToManyModelRelationships","Field:235:manyToManylocalModelRelationships","Field:235:typedMorphRelationships","Field:235:identifiedMorphRelationships","Field:236:inputs","Field:236:foreign","Field:236:relatedForeigns","Field:236:basicParentRelationships","Field:236:basicForeignRelationships","Field:236:manyToManyModelRelationships","Field:236:manyToManylocalModelRelationships","Field:236:typedMorphRelationships","Field:236:identifiedMorphRelationships","Field:237:inputs","Field:237:foreign","Field:237:relatedForeigns","Field:237:basicParentRelationships","Field:237:basicForeignRelationships","Field:237:manyToManyModelRelationships","Field:237:manyToManylocalModelRelationships","Field:237:typedMorphRelationships","Field:237:identifiedMorphRelationships","Entity:43:foreigns","Entity:43:pivotRelationships","Entity:43:pivotMorphRelationships","Entity:43:basicRelationships","Entity:43:basicRelatedRelationships","Entity:43:manyToManyRelationships","Entity:43:manyToManyRelatedRelationships","Entity:43:morphRelationships","Entity:43:morphRelatedRelationships","Entity:31:authProject","Entity:31:cruds","Entity:31:fields","Field:164:inputs","Field:164:foreign","Field:164:relatedForeigns","Field:164:basicParentRelationships","Field:164:basicForeignRelationships","Field:164:manyToManyModelRelationships","Field:164:manyToManylocalModelRelationships","Field:164:typedMorphRelationships","Field:164:identifiedMorphRelationships","Field:165:inputs","Field:165:foreign","Field:165:relatedForeigns","Field:165:basicParentRelationships","Field:165:basicForeignRelationships","Field:165:manyToManyModelRelationships","Field:165:manyToManylocalModelRelationships","Field:165:typedMorphRelationships","Field:165:identifiedMorphRelationships","Field:166:inputs","Field:166:foreign","Field:166:relatedForeigns","Field:166:basicParentRelationships","Field:166:basicForeignRelationships","Field:166:manyToManyModelRelationships","Field:166:manyToManylocalModelRelationships","Field:166:typedMorphRelationships","Field:166:identifiedMorphRelationships","Field:167:inputs","Field:167:foreign","Field:167:relatedForeigns","Field:167:basicParentRelationships","Field:167:basicForeignRelationships","Field:167:manyToManyModelRelationships","Field:167:manyToManylocalModelRelationships","Field:167:typedMorphRelationships","Field:167:identifiedMorphRelationships","Field:168:inputs","Field:168:foreign","Field:168:relatedForeigns","Field:168:basicParentRelationships","Field:168:basicForeignRelationships","Field:168:manyToManyModelRelationships","Field:168:manyToManylocalModelRelationships","Field:168:typedMorphRelationships","Field:168:identifiedMorphRelationships","Field:169:inputs","Field:169:foreign","Field:169:relatedForeigns","Field:169:basicParentRelationships","Field:169:basicForeignRelationships","Field:169:manyToManyModelRelationships","Field:169:manyToManylocalModelRelationships","Field:169:typedMorphRelationships","Field:169:identifiedMorphRelationships","Field:170:inputs","Field:170:foreign","Field:170:relatedForeigns","Field:170:basicParentRelationships","Field:170:basicForeignRelationships","Field:170:manyToManyModelRelationships","Field:170:manyToManylocalModelRelationships","Field:170:typedMorphRelationships","Field:170:identifiedMorphRelationships","Field:171:inputs","Field:171:foreign","Field:171:relatedForeigns","Field:171:basicParentRelationships","Field:171:basicForeignRelationships","Field:171:manyToManyModelRelationships","Field:171:manyToManylocalModelRelationships","Field:171:typedMorphRelationships","Field:171:identifiedMorphRelationships","Field:172:inputs","Field:172:foreign","Field:172:relatedForeigns","Field:172:basicParentRelationships","Field:172:basicForeignRelationships","Field:172:manyToManyModelRelationships","Field:172:manyToManylocalModelRelationships","Field:172:typedMorphRelationships","Field:172:identifiedMorphRelationships","Field:173:inputs","Field:173:foreign","Field:173:relatedForeigns","Field:173:basicParentRelationships","Field:173:basicForeignRelationships","Field:173:manyToManyModelRelationships","Field:173:manyToManylocalModelRelationships","Field:173:typedMorphRelationships","Field:173:identifiedMorphRelationships","Field:174:inputs","Field:174:foreign","Field:174:relatedForeigns","Field:174:basicParentRelationships","Field:174:basicForeignRelationships","Field:174:manyToManyModelRelationships","Field:174:manyToManylocalModelRelationships","Field:174:typedMorphRelationships","Field:174:identifiedMorphRelationships","Entity:31:foreigns","Entity:31:pivotRelationships","Entity:31:pivotMorphRelationships","Entity:31:basicRelationships","Entity:31:basicRelatedRelationships","Entity:31:manyToManyRelationships","Entity:31:manyToManyRelatedRelationships","Entity:31:morphRelationships","Entity:31:morphRelatedRelationships","Entity:33:authProject","Entity:33:cruds","Entity:33:fields","Field:177:inputs","Field:177:foreign","Field:177:relatedForeigns","Field:177:basicParentRelationships","Field:177:basicForeignRelationships","Field:177:manyToManyModelRelationships","Field:177:manyToManylocalModelRelationships","Field:177:typedMorphRelationships","Field:177:identifiedMorphRelationships","Field:178:inputs","Field:178:foreign","Field:178:relatedForeigns","Field:178:basicParentRelationships","Field:178:basicForeignRelationships","Field:178:manyToManyModelRelationships","Field:178:manyToManylocalModelRelationships","Field:178:typedMorphRelationships","Field:178:identifiedMorphRelationships","Entity:33:foreigns","Entity:33:pivotRelationships","Entity:33:pivotMorphRelationships","Entity:33:basicRelationships","Entity:33:basicRelatedRelationships","Entity:33:manyToManyRelationships","Entity:33:manyToManyRelatedRelationships","Entity:33:morphRelationships","Entity:33:morphRelatedRelationships","Entity:30:authProject","Entity:30:cruds","Entity:30:fields","Field:157:inputs","Field:157:foreign","Field:157:relatedForeigns","Field:157:basicParentRelationships","Field:157:basicForeignRelationships","Field:157:manyToManyModelRelationships","Field:157:manyToManylocalModelRelationships","Field:157:typedMorphRelationships","Field:157:identifiedMorphRelationships","Field:162:inputs","Field:162:foreign","Field:162:relatedForeigns","Field:162:basicParentRelationships","Field:162:basicForeignRelationships","Field:162:manyToManyModelRelationships","Field:162:manyToManylocalModelRelationships","Field:162:typedMorphRelationships","Field:162:identifiedMorphRelationships","Field:163:inputs","Field:163:foreign","Field:163:relatedForeigns","Field:163:basicParentRelationships","Field:163:basicForeignRelationships","Field:163:manyToManyModelRelationships","Field:163:manyToManylocalModelRelationships","Field:163:typedMorphRelationships","Field:163:identifiedMorphRelationships","Field:161:inputs","Field:161:foreign","Field:161:relatedForeigns","Field:161:basicParentRelationships","Field:161:basicForeignRelationships","Field:161:manyToManyModelRelationships","Field:161:manyToManylocalModelRelationships","Field:161:typedMorphRelationships","Field:161:identifiedMorphRelationships","Field:160:inputs","Field:160:foreign","Field:160:relatedForeigns","Field:160:basicParentRelationships","Field:160:basicForeignRelationships","Field:160:manyToManyModelRelationships","Field:160:manyToManylocalModelRelationships","Field:160:typedMorphRelationships","Field:160:identifiedMorphRelationships","Field:159:inputs","Field:159:foreign","Field:159:relatedForeigns","Field:159:basicParentRelationships","Field:159:basicForeignRelationships","Field:159:manyToManyModelRelationships","Field:159:manyToManylocalModelRelationships","Field:159:typedMorphRelationships","Field:159:identifiedMorphRelationships","Field:158:inputs","Field:158:foreign","Field:158:relatedForeigns","Field:158:basicParentRelationships","Field:158:basicForeignRelationships","Field:158:manyToManyModelRelationships","Field:158:manyToManylocalModelRelationships","Field:158:typedMorphRelationships","Field:158:identifiedMorphRelationships","Entity:30:foreigns","Entity:30:pivotRelationships","Entity:30:pivotMorphRelationships","Entity:30:basicRelationships","Entity:30:basicRelatedRelationships","Entity:30:manyToManyRelationships","Entity:30:manyToManyRelatedRelationships","Entity:30:morphRelationships","Entity:30:morphRelatedRelationships","Entity:40:authProject","Entity:40:cruds","Entity:40:fields","Field:215:inputs","Field:215:foreign","Field:215:relatedForeigns","Field:215:basicParentRelationships","Field:215:basicForeignRelationships","Field:215:manyToManyModelRelationships","Field:215:manyToManylocalModelRelationships","Field:215:typedMorphRelationships","Field:215:identifiedMorphRelationships","Field:216:inputs","Field:216:foreign","Field:216:relatedForeigns","Field:216:basicParentRelationships","Field:216:basicForeignRelationships","Field:216:manyToManyModelRelationships","Field:216:manyToManylocalModelRelationships","Field:216:typedMorphRelationships","Field:216:identifiedMorphRelationships","Field:218:inputs","Field:218:foreign","Field:218:relatedForeigns","Field:218:basicParentRelationships","Field:218:basicForeignRelationships","Field:218:manyToManyModelRelationships","Field:218:manyToManylocalModelRelationships","Field:218:typedMorphRelationships","Field:218:identifiedMorphRelationships","Field:219:inputs","Field:219:foreign","Field:219:relatedForeigns","Field:219:basicParentRelationships","Field:219:basicForeignRelationships","Field:219:manyToManyModelRelationships","Field:219:manyToManylocalModelRelationships","Field:219:typedMorphRelationships","Field:219:identifiedMorphRelationships","Field:220:inputs","Field:220:foreign","Field:220:relatedForeigns","Field:220:basicParentRelationships","Field:220:basicForeignRelationships","Field:220:manyToManyModelRelationships","Field:220:manyToManylocalModelRelationships","Field:220:typedMorphRelationships","Field:220:identifiedMorphRelationships","Field:221:inputs","Field:221:foreign","Field:221:relatedForeigns","Field:221:basicParentRelationships","Field:221:basicForeignRelationships","Field:221:manyToManyModelRelationships","Field:221:manyToManylocalModelRelationships","Field:221:typedMorphRelationships","Field:221:identifiedMorphRelationships","Field:222:inputs","Field:222:foreign","Field:222:relatedForeigns","Field:222:basicParentRelationships","Field:222:basicForeignRelationships","Field:222:manyToManyModelRelationships","Field:222:manyToManylocalModelRelationships","Field:222:typedMorphRelationships","Field:222:identifiedMorphRelationships","Field:223:inputs","Field:223:foreign","Field:223:relatedForeigns","Field:223:basicParentRelationships","Field:223:basicForeignRelationships","Field:223:manyToManyModelRelationships","Field:223:manyToManylocalModelRelationships","Field:223:typedMorphRelationships","Field:223:identifiedMorphRelationships","Field:224:inputs","Field:224:foreign","Field:224:relatedForeigns","Field:224:basicParentRelationships","Field:224:basicForeignRelationships","Field:224:manyToManyModelRelationships","Field:224:manyToManylocalModelRelationships","Field:224:typedMorphRelationships","Field:224:identifiedMorphRelationships","Field:225:inputs","Field:225:foreign","Field:225:relatedForeigns","Field:225:basicParentRelationships","Field:225:basicForeignRelationships","Field:225:manyToManyModelRelationships","Field:225:manyToManylocalModelRelationships","Field:225:typedMorphRelationships","Field:225:identifiedMorphRelationships","Field:226:inputs","Field:226:foreign","Field:226:relatedForeigns","Field:226:basicParentRelationships","Field:226:basicForeignRelationships","Field:226:manyToManyModelRelationships","Field:226:manyToManylocalModelRelationships","Field:226:typedMorphRelationships","Field:226:identifiedMorphRelationships","Field:217:inputs","Field:217:foreign","Field:217:relatedForeigns","Field:217:basicParentRelationships","Field:217:basicForeignRelationships","Field:217:manyToManyModelRelationships","Field:217:manyToManylocalModelRelationships","Field:217:typedMorphRelationships","Field:217:identifiedMorphRelationships","Entity:40:foreigns","Entity:40:pivotRelationships","Entity:40:pivotMorphRelationships","Entity:40:basicRelationships","Entity:40:basicRelatedRelationships","Entity:40:manyToManyRelationships","Entity:40:manyToManyRelatedRelationships","Entity:40:morphRelationships","Entity:40:morphRelatedRelationships"]}